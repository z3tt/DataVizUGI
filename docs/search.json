[
  {
    "objectID": "04-annotations.html#setup",
    "href": "04-annotations.html#setup",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setup",
    "text": "Setup\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(stringr)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Asap SemiCondensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  legend.position = \"top\"\n)"
  },
  {
    "objectID": "04-annotations.html#working-with-labels",
    "href": "04-annotations.html#working-with-labels",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Working with Labels",
    "text": "Working with Labels\n\n\ng <- ggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  labs(\n    x = \"Temperature (°C)\",\n    y = \"Reported bike shares\",\n    title = \"TfL bike sharing trends\",\n    subtitle = \"Reported bike rents versus temperature in London\",\n    caption = \"Data: TfL\",\n    color = \"Season:\",\n    tag = \"1.\"\n  )\n\ng"
  },
  {
    "objectID": "04-annotations.html#customize-labels-via-theme",
    "href": "04-annotations.html#customize-labels-via-theme",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\"\n)"
  },
  {
    "objectID": "04-annotations.html#customize-labels-via-theme-1",
    "href": "04-annotations.html#customize-labels-via-theme-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"#28a87d\"\n  )\n)"
  },
  {
    "objectID": "04-annotations.html#customize-labels-via-theme-2",
    "href": "04-annotations.html#customize-labels-via-theme-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"#28a87d\",\n    family = \"Spline Sans Mono\",\n    face = \"italic\",\n    lineheight = 1.3, # no effect here\n    angle = 45,\n    hjust = 1,\n    vjust = 0,\n    margin = margin(10, 0, 20, 0)\n  )\n)"
  },
  {
    "objectID": "04-annotations.html#customize-labels-via-theme-3",
    "href": "04-annotations.html#customize-labels-via-theme-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"#28a87d\",\n    family = \"Spline Sans Mono\",\n    face = \"italic\",\n    lineheight = 1.3, # no effect here\n    angle = 45,\n    hjust = 1, # no effect here\n    vjust = 0, # no effect here\n    margin = margin(10, 0, 20, 0) # no effect here\n  )\n)"
  },
  {
    "objectID": "04-annotations.html#customize-labels-via-theme-4",
    "href": "04-annotations.html#customize-labels-via-theme-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"#28a87d\",\n    family = \"Spline Sans Mono\",\n    face = \"italic\",\n    lineheight = 1.3, # no effect here\n    angle = 45,\n    hjust = 1, # no effect here\n    vjust = 0, # no effect here\n    margin = margin(10, 0, 20, 0) # no effect here\n  ),\n  axis.text.x = element_text(\n    hjust = 1,\n    vjust = 0,\n    margin = margin(10, 0, 20, 0) # trbl\n  )\n)"
  },
  {
    "objectID": "04-annotations.html#customize-labels-via-theme-5",
    "href": "04-annotations.html#customize-labels-via-theme-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"#28a87d\",\n    family = \"Spline Sans Mono\",\n    face = \"italic\",\n    lineheight = 1.3, # no effect here\n    angle = 45,\n    hjust = 1, # no effect here\n    vjust = 0, # no effect here\n    margin = margin(10, 0, 20, 0) # no effect here\n  ),\n  plot.tag = element_text(\n    margin = margin(0, 12, -8, 0) # trbl\n  )\n)"
  },
  {
    "objectID": "04-annotations.html#customize-labels-via-theme-6",
    "href": "04-annotations.html#customize-labels-via-theme-6",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"#28a87d\",\n    family = \"Spline Sans Mono\",\n    face = \"italic\",\n    hjust = 1,\n    vjust = 0,\n    angle = 45,\n    lineheight = 1.3, # no effect here\n    margin = margin(10, 0, 20, 0), # no effect here\n    debug = TRUE\n  ),\n  plot.tag = element_text(\n    margin = margin(0, 12, -8, 0), # trbl\n    debug = TRUE\n  )\n)"
  },
  {
    "objectID": "04-annotations.html#format-labels-via-scale_",
    "href": "04-annotations.html#format-labels-via-scale_",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng <- g + labs(tag = NULL, title = NULL, \n              subtitle = NULL)\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000\n  )"
  },
  {
    "objectID": "04-annotations.html#format-labels-via-scale_-1",
    "href": "04-annotations.html#format-labels-via-scale_-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = scales::comma_format()\n  )"
  },
  {
    "objectID": "04-annotations.html#format-labels-via-scale_-2",
    "href": "04-annotations.html#format-labels-via-scale_-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = scales::comma_format(\n      suffix = \" bikes\"\n    ),\n    name = NULL\n  )"
  },
  {
    "objectID": "04-annotations.html#format-labels-via-scale_-3",
    "href": "04-annotations.html#format-labels-via-scale_-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = scales::comma_format(\n      suffix = \"\\nbikes shared\"\n    ),\n    name = NULL\n  ) +\n  theme(\n    axis.text.y = element_text(\n      hjust = .5\n    )\n  )"
  },
  {
    "objectID": "04-annotations.html#format-labels-via-scale_-4",
    "href": "04-annotations.html#format-labels-via-scale_-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = scales::comma_format(\n      scale = .001\n    ),\n    name = \"Reported bike shares in thousands\"\n  )"
  },
  {
    "objectID": "04-annotations.html#format-labels-via-scale_-5",
    "href": "04-annotations.html#format-labels-via-scale_-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = function(y) y / 1000,\n    name = \"Reported bike shares in thousands\",\n  )"
  },
  {
    "objectID": "04-annotations.html#format-labels-via-scale_-6",
    "href": "04-annotations.html#format-labels-via-scale_-6",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_x_continuous(\n    labels = function(y) paste0(y, \"°C\"),\n    name = \"Temperature\"\n  )"
  },
  {
    "objectID": "04-annotations.html#format-labels-via-scale_-7",
    "href": "04-annotations.html#format-labels-via-scale_-7",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_x_discrete()"
  },
  {
    "objectID": "04-annotations.html#format-labels-via-scale_-8",
    "href": "04-annotations.html#format-labels-via-scale_-8",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_x_discrete(\n    name = NULL,\n    labels = stringr::str_to_title\n  )"
  },
  {
    "objectID": "04-annotations.html#format-labels-via-scale_-9",
    "href": "04-annotations.html#format-labels-via-scale_-9",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_color_discrete(\n    name = NULL,\n    labels = stringr::str_to_title\n  )"
  },
  {
    "objectID": "04-annotations.html#styling-labels-with-ggtext",
    "href": "04-annotations.html#styling-labels-with-ggtext",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\n\n# install.packages(\"ggtext\")\n\ng +\n  ggtitle(\"**TfL bike sharing trends by _season_**\")"
  },
  {
    "objectID": "04-annotations.html#styling-labels-with-ggtext-1",
    "href": "04-annotations.html#styling-labels-with-ggtext-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\n\n# install.packages(\"ggtext\")\n\ng +\n  ggtitle(\"**TfL bike sharing trends by _season_**\") +\n  theme(\n    plot.title = ggtext::element_markdown()\n  )"
  },
  {
    "objectID": "04-annotations.html#styling-labels-with-ggtext-2",
    "href": "04-annotations.html#styling-labels-with-ggtext-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\n\n# install.packages(\"ggtext\")\n\ng +\n  ggtitle(\"<b style='font-size:25pt'>TfL</b> bike sharing trends by <i style='color:#28a87d;'>season</i>\") +\n  theme(\n    plot.title = ggtext::element_markdown()\n  )\n\n\n\n\n\n\n\n<b style='font-size:15pt;'>TfL</b> bike sharing trends by <i style='color:#28a87d;'>season</i>"
  },
  {
    "objectID": "04-annotations.html#handling-long-labels-with-stringr",
    "href": "04-annotations.html#handling-long-labels-with-stringr",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Handling Long Labels with {stringr}",
    "text": "Handling Long Labels with {stringr}\n\n\nggplot(\n    bikes,\n    aes(x = weather_type,\n        y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "04-annotations.html#handling-long-labels-with-stringr-1",
    "href": "04-annotations.html#handling-long-labels-with-stringr-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Handling Long Labels with {stringr}",
    "text": "Handling Long Labels with {stringr}\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "04-annotations.html#handling-long-labels-with-ggtext",
    "href": "04-annotations.html#handling-long-labels-with-ggtext",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Handling Long Labels with {ggtext}",
    "text": "Handling Long Labels with {ggtext}\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title = element_text(size = 20),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "04-annotations.html#handling-long-titles",
    "href": "04-annotations.html#handling-long-titles",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Handling Long Titles",
    "text": "Handling Long Titles\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title =\n      ggtext::element_textbox_simple(\n        size = 20\n      ),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "04-annotations.html#handling-long-titles-1",
    "href": "04-annotations.html#handling-long-titles-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Handling Long Titles",
    "text": "Handling Long Titles\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title = \n      ggtext::element_textbox_simple(\n        margin = margin(t = 12, b = 12),\n        lineheight = .9\n      ),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "04-annotations.html#handling-long-titles-2",
    "href": "04-annotations.html#handling-long-titles-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Handling Long Titles",
    "text": "Handling Long Titles\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title = \n      ggtext::element_textbox_simple(\n        margin = margin(t = 12, b = 12),\n        fill = \"grey90\",\n        lineheight = .9\n      ),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "04-annotations.html#handling-long-titles-3",
    "href": "04-annotations.html#handling-long-titles-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Handling Long Titles",
    "text": "Handling Long Titles\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title = \n      ggtext::element_textbox_simple(\n        margin = margin(t = 12, b = 12),\n        padding = margin(rep(12, 4)),\n        fill = \"grey90\",\n        box.colour = \"grey30\",\n        linetype = \"13\",\n        r = unit(9, \"pt\"),\n        halign = .5,\n        face = \"bold\",\n        lineheight = .9\n      ),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "04-annotations.html#add-single-text-annotations",
    "href": "04-annotations.html#add-single-text-annotations",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Single Text Annotations",
    "text": "Add Single Text Annotations\n\n\nga <- \n  ggplot(bikes, \n         aes(x = temp, y = count)) +\n  geom_point(\n    aes(color = count > 40000),\n    size = 2\n  ) +\n  scale_color_manual(\n    values = c(\"grey\", \"firebrick\"),\n    guide = \"none\"\n  )\n\nga"
  },
  {
    "objectID": "04-annotations.html#add-single-text-annotations-1",
    "href": "04-annotations.html#add-single-text-annotations-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Single Text Annotations",
    "text": "Add Single Text Annotations\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 18,\n    y = 48000,\n    label = \"What happened here?\"\n  )"
  },
  {
    "objectID": "04-annotations.html#style-text-annotations",
    "href": "04-annotations.html#style-text-annotations",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Style Text Annotations",
    "text": "Style Text Annotations\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 18,\n    y = 48000,\n    label = \"What happened here?\",\n    color = \"firebrick\",\n    size = 6,\n    family = \"Asap SemiCondensed\",\n    fontface = \"bold\",\n    lineheight =  .8\n  )"
  },
  {
    "objectID": "04-annotations.html#add-multiple-text-annotations",
    "href": "04-annotations.html#add-multiple-text-annotations",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Multiple Text Annotations",
    "text": "Add Multiple Text Annotations\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = c(18, max(bikes$temp)),\n    y = c(48000, 1000),\n    label = c(\"What happened here?\", \"Powered by TfL\"),\n    color = c(\"firebrick\", \"black\"),\n    size = c(6, 3),\n    family = c(\"Asap SemiCondensed\", \"Hepta Slab\"),\n    fontface = c(\"bold\", \"plain\"),\n    hjust = c(.5, 1)\n  )"
  },
  {
    "objectID": "04-annotations.html#pointnclick-annotations",
    "href": "04-annotations.html#pointnclick-annotations",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "“Point’n’Click” Annotations",
    "text": "“Point’n’Click” Annotations\n\nggannotate::ggannotate(g)"
  },
  {
    "objectID": "04-annotations.html#add-boxes",
    "href": "04-annotations.html#add-boxes",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Boxes",
    "text": "Add Boxes\n\n\nga + \n  annotate(\n    geom = \"text\",\n    x = 19.5,\n    y = 42000,\n    label = \"What happened here?\",\n    family = \"Asap SemiCondensed\",\n    size = 6,\n    vjust = 1.3\n  ) +\n  annotate(\n    geom = \"rect\",\n    xmin = 17, \n    xmax = 22,\n    ymin = 42000, \n    ymax = 54000,\n    color = \"firebrick\", \n    fill = NA\n  )"
  },
  {
    "objectID": "04-annotations.html#add-lines",
    "href": "04-annotations.html#add-lines",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Lines",
    "text": "Add Lines\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 10,\n    y = 38000,\n    label = \"The\\nhighest\\ncount\",\n    family = \"Asap SemiCondensed\",\n    size = 6,\n    lineheight =  .8\n  ) +\n  annotate(\n    geom = \"segment\",\n    x = 13, \n    xend = 18.2,\n    y = 38000, \n    yend = 51870\n  )"
  },
  {
    "objectID": "04-annotations.html#add-lines-1",
    "href": "04-annotations.html#add-lines-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Lines",
    "text": "Add Lines\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 10,\n    y = 38000,\n    label = \"The\\nhighest\\ncount\",\n    family = \"Asap SemiCondensed\",\n    size = 6,\n    lineheight =  .8\n  ) +\n  annotate(\n    geom = \"curve\",\n    x = 13, \n    xend = 18.2,\n    y = 38000, \n    yend = 51870\n  )"
  },
  {
    "objectID": "04-annotations.html#add-arrows",
    "href": "04-annotations.html#add-arrows",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Arrows",
    "text": "Add Arrows\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 10,\n    y = 38000,\n    label = \"The\\nhighest\\ncount\",\n    family = \"Asap SemiCondensed\",\n    size = 6,\n    lineheight =  .8\n  ) +\n  annotate(\n    geom = \"curve\",\n    x = 13, \n    xend = 18.2,\n    y = 38000, \n    yend = 51870,\n    curvature = .25,\n    arrow = arrow()\n  )"
  },
  {
    "objectID": "04-annotations.html#add-arrows-1",
    "href": "04-annotations.html#add-arrows-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Arrows",
    "text": "Add Arrows\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 10,\n    y = 38000,\n    label = \"The\\nhighest\\ncount\",\n    family = \"Asap SemiCondensed\",\n    size = 6,\n    lineheight =  .8\n  ) +\n  annotate(\n    geom = \"curve\",\n    x = 13, \n    xend = 18.2,\n    y = 38000, \n    yend = 51870,\n    curvature = .25,\n    arrow = arrow(\n      length = unit(10, \"pt\"),\n      type = \"closed\",\n      ends = \"both\"\n    )\n  )"
  },
  {
    "objectID": "04-annotations.html#add-arrows-2",
    "href": "04-annotations.html#add-arrows-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Arrows",
    "text": "Add Arrows\n\n\nga +\n  annotate(\n    geom = \"text\",\n    x = 10,\n    y = 38000,\n    label = \"The\\nhighest\\ncount\",\n    family = \"Asap SemiCondensed\",\n    size = 6,\n    lineheight =  .8\n  ) +\n  annotate(\n    geom = \"curve\",\n    x = 13, \n    xend = 18.2,\n    y = 38000, \n    yend = 51870,\n    curvature = .8,\n    angle = 130,\n    arrow = arrow(\n      length = unit(10, \"pt\"),\n      type = \"closed\"\n    )\n  )"
  },
  {
    "objectID": "04-annotations.html#highlight-hot-days",
    "href": "04-annotations.html#highlight-hot-days",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Highlight Hot Days",
    "text": "Highlight Hot Days\n\n\ngh <- \n  ggplot(\n    data = filter(bikes, temp >= 27),\n    aes(x = date, y = temp)\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point(size = 2.5)\n\ngh"
  },
  {
    "objectID": "04-annotations.html#annotations-with-geom_text",
    "href": "04-annotations.html#annotations-with-geom_text",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with geom_text()",
    "text": "Annotations with geom_text()\n\n\ngh +\n  geom_text(\n    aes(label = format(date, \"%m/%d\")),\n    nudge_x = 10,\n    hjust = 0\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-geom_label",
    "href": "04-annotations.html#annotations-with-geom_label",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with geom_label()",
    "text": "Annotations with geom_label()\n\n\ngh +\n  geom_label(\n    aes(label = format(date, \"%m/%d\")),\n    nudge_x = .3,\n    hjust = 0\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-ggrepel",
    "href": "04-annotations.html#annotations-with-ggrepel",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\ngh +\n  ggrepel::geom_text_repel(\n    aes(label = format(date, \"%m/%d\"))\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-ggrepel-1",
    "href": "04-annotations.html#annotations-with-ggrepel-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\ngh + \n  ggrepel::geom_text_repel(\n    aes(label = format(date, \"%m/%d\")),\n    family = \"Spline Sans Mono\",\n    size = 4.5,\n    fontface = \"bold\"\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-ggrepel-2",
    "href": "04-annotations.html#annotations-with-ggrepel-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\ngh +\n  ggrepel::geom_text_repel(\n    aes(label = format(date, \"%m/%d\")),\n    family = \"Spline Sans Mono\",\n    # space between points + labels\n    box.padding = .8,\n    # always draw segments\n    min.segment.length = 0\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-ggrepel-3",
    "href": "04-annotations.html#annotations-with-ggrepel-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\ngh +\n  ggrepel::geom_text_repel(\n    aes(label = format(date, \"%y/%m/%d\")),\n    family = \"Spline Sans Mono\",\n    # force to the right\n    xlim = c(NA, as.Date(\"2015-06-01\")), \n    hjust = 1\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-ggrepel-4",
    "href": "04-annotations.html#annotations-with-ggrepel-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\ngh +\n  ggrepel::geom_text_repel(\n    aes(label = format(date, \"%y/%m/%d\")),\n    family = \"Spline Sans Mono\",\n    xlim = c(NA, as.Date(\"2015-06-01\")),\n    # style segment\n    segment.curvature = .01,\n    arrow = arrow(length = unit(.02, \"npc\"), type = \"closed\")\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-ggrepel-5",
    "href": "04-annotations.html#annotations-with-ggrepel-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\ngh +\n  ggrepel::geom_text_repel(\n    aes(label = format(date, \"%y/%m/%d\")),\n    family = \"Spline Sans Mono\",\n    xlim = c(NA, as.Date(\"2015-06-01\")),\n    # style segment\n    segment.curvature = .001,\n    segment.inflect = TRUE\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-ggforce",
    "href": "04-annotations.html#annotations-with-ggforce",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\ng +\n  ggforce::geom_mark_rect(\n    aes(label = \"Outliers?\",\n        filter = count > 40000)\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-ggforce-1",
    "href": "04-annotations.html#annotations-with-ggforce-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\ng +\n  ggforce::geom_mark_rect(\n    aes(label = \"Outliers?\",\n        filter = count > 40000),\n    color = \"black\",\n    label.family = \"Asap SemiCondensed\"\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-ggforce-2",
    "href": "04-annotations.html#annotations-with-ggforce-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\ng +\n  ggforce::geom_mark_rect(\n    aes(label = \"Outliers?\",\n        filter = count > 40000),\n    description = \"What happened on\\nthese two days?\",\n    color = \"black\",\n    label.family = \"Asap SemiCondensed\"\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-ggforce-3",
    "href": "04-annotations.html#annotations-with-ggforce-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\ng +\n  ggforce::geom_mark_rect(\n    aes(label = \"Outliers?\",\n        filter = count > 40000),\n    description = \"What happened on\\nthese two days?\",\n    color = \"black\",\n    label.family = \"Asap SemiCondensed\",\n    expand = unit(8, \"pt\"),\n    radius = unit(12, \"pt\"),\n    con.cap = unit(0, \"pt\"),\n    label.buffer = unit(15, \"pt\"),\n    con.type = \"straight\",\n    label.fill = \"transparent\"\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-ggforce-4",
    "href": "04-annotations.html#annotations-with-ggforce-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\ng +\n  ggforce::geom_mark_circle(\n    aes(label = \"Outliers?\",\n        filter = count > 40000),\n    description = \"What happened on\\nthese two days?\",\n    color = \"black\",\n    label.family = \"Asap SemiCondensed\",\n    expand = unit(8, \"pt\"),\n    con.cap = unit(0, \"pt\"),\n    label.buffer = unit(15, \"pt\"),\n    con.type = \"straight\",\n    label.fill = \"transparent\"\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-ggforce-5",
    "href": "04-annotations.html#annotations-with-ggforce-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\ng +\n  ggforce::geom_mark_hull(\n    aes(label = \"Outliers?\",\n        filter = count > 40000),\n    description = \"What happened on\\nthese two days?\",\n    color = \"black\",\n    label.family = \"Asap SemiCondensed\",\n    expand = unit(8, \"pt\"),\n    con.cap = unit(0, \"pt\"),\n    label.buffer = unit(15, \"pt\"),\n    con.type = \"straight\",\n    label.fill = \"transparent\"\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-geomtextpath",
    "href": "04-annotations.html#annotations-with-geomtextpath",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {geomtextpath}",
    "text": "Annotations with {geomtextpath}\n\n\nbikes |>\n  filter(year == \"2016\") |>\n  group_by(month, day_night) |> \n  summarize(count = sum(count)) |> \n  ggplot(aes(x = month, y = count, \n             color = day_night,\n             group = day_night)) +\n  geom_line(linewidth = 1) +\n  coord_cartesian(expand = FALSE) +\n  scale_y_continuous(\n    labels = scales::label_comma(\n      scale = 1/10^3, suffix = \"K\"\n    ),\n    limits = c(0, 850000)\n  ) +\n  scale_color_manual(\n    values = c(\"#FFA200\", \"#757BC7\"),\n    name = NULL\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-geomtextpath-1",
    "href": "04-annotations.html#annotations-with-geomtextpath-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {geomtextpath}",
    "text": "Annotations with {geomtextpath}\n\n\nbikes |>\n  filter(year == \"2016\") |>\n  group_by(month, day_night) |> \n  summarize(count = sum(count)) |> \n  ggplot(aes(x = month, y = count, \n             color = day_night,\n             group = day_night)) +\n  geomtextpath::geom_textline(\n    aes(label = day_night),\n    linewidth = 1,\n    vjust = -.5, \n    family = \"Asap SemiCondensed\",\n    fontface = \"bold\"\n  ) +\n  coord_cartesian(expand = FALSE) +\n  scale_y_continuous(\n    labels = scales::label_comma(\n      scale = 1/10^3, suffix = \"K\"\n    ),\n    limits = c(0, 850000)\n  ) +\n  scale_color_manual(\n    values = c(\"#FFA200\", \"#757BC7\"),\n    guide = \"none\"\n  )"
  },
  {
    "objectID": "04-annotations.html#annotations-with-geomtextpath-2",
    "href": "04-annotations.html#annotations-with-geomtextpath-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotations with {geomtextpath}",
    "text": "Annotations with {geomtextpath}\n\n\nbikes |>\n  filter(year == \"2016\") |>\n  group_by(month, day_night) |> \n  summarize(count = sum(count)) |> \n  mutate(day_night = if_else(\n    day_night == \"day\", \n    \"Day period (6am-6pm)\", \n    \"Night period (6pm-6am)\"\n  )) |> \n  ggplot(aes(x = month, y = count, \n             color = day_night,\n             group = day_night)) +\n  geomtextpath::geom_textline(\n    aes(label = day_night),\n    linewidth = 1,\n    vjust = -.5, \n    hjust = .05,\n    family = \"Asap SemiCondensed\",\n    fontface = \"bold\"\n  ) +\n  coord_cartesian(expand = FALSE) +\n  scale_y_continuous(\n    labels = scales::label_comma(\n      scale = 1/10^3, suffix = \"K\"\n    ),\n    limits = c(0, 850000)\n  ) +\n  scale_color_manual(\n    values = c(\"#FFA200\", \"#757BC7\"),\n    guide = \"none\"\n  )"
  },
  {
    "objectID": "04-annotations.html#line-chart-with-stat_summary",
    "href": "04-annotations.html#line-chart-with-stat_summary",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Line Chart with `stat_summary()`",
    "text": "Line Chart with `stat_summary()`\n\n\nbikes |>\n  filter(year == \"2016\") |>\n  ggplot(aes(x = month, y = count, \n             color = day_night,\n             group = day_night)) +\n  stat_summary(\n    geom = \"line\", fun = sum,\n    linewidth = 1\n  ) +\n  coord_cartesian(expand = FALSE) +\n  scale_y_continuous(\n    labels = scales::label_comma(\n      scale = 1/10^3, suffix = \"K\"\n    ),\n    limits = c(0, 850000)\n  ) +\n  scale_color_manual(\n    values = c(\"#FFA200\", \"#757BC7\"),\n    name = NULL\n  )"
  },
  {
    "objectID": "04-annotations.html#line-chart-with-stat_summary-1",
    "href": "04-annotations.html#line-chart-with-stat_summary-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Line Chart with `stat_summary()`",
    "text": "Line Chart with `stat_summary()`\n\n\nbikes |>\n  filter(year == \"2016\") |>\n  ggplot(aes(x = month, y = count, \n             color = day_night,\n             group = day_night)) +\n  stat_summary(\n    geom = \"line\", fun = sum,\n    linewidth = 1\n  ) +\n  geomtextpath::geom_textline(\n    aes(label = day_night), \n    stat = \"summary\" # fails\n  ) +\n  coord_cartesian(expand = FALSE) +\n  scale_y_continuous(\n    labels = scales::label_comma(\n      scale = 1/10^3, suffix = \"K\"\n    ),\n    limits = c(0, 850000)\n  ) +\n  scale_color_manual(\n    values = c(\"#FFA200\", \"#757BC7\"),\n    name = NULL\n  )"
  },
  {
    "objectID": "04-annotations.html#load-image",
    "href": "04-annotations.html#load-image",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Load Image",
    "text": "Load Image\n\nurl <- \"https://www.gs.tum.de/fileadmin/_processed_/0/7/csm_UGI_Logo_frei_ba00944e1c.png\"\nimg <- magick::image_read(url)\n\nimg"
  },
  {
    "objectID": "04-annotations.html#add-background-image",
    "href": "04-annotations.html#add-background-image",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Background Image",
    "text": "Add Background Image\n\n\nggplot(bikes, aes(date, temp)) +\n  annotation_custom(\n    grid::rasterGrob(\n      image = img\n    )\n  ) +\n  geom_point(color = \"#308DD1\")"
  },
  {
    "objectID": "04-annotations.html#adjust-position",
    "href": "04-annotations.html#adjust-position",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Adjust Position",
    "text": "Adjust Position\n\n\nggplot(bikes, aes(date, temp)) +\n  annotation_custom(\n    grid::rasterGrob(\n      image = img,\n      x = .5,\n      y = .75,\n      width = .3\n    )\n  ) +\n  geom_point(color = \"#308DD1\") +\n  ylim(NA, 35)"
  },
  {
    "objectID": "04-annotations.html#place-image-outside",
    "href": "04-annotations.html#place-image-outside",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Place Image Outside",
    "text": "Place Image Outside\n\n\nggplot(bikes, aes(date, temp)) +\n  annotation_custom(\n    grid::rasterGrob(\n      image = img,\n      x = .9,\n      y = 1.2,\n      width = .3\n    )\n  ) +\n  geom_point(color = \"#308DD1\") +\n  coord_cartesian(clip = \"off\") +\n  theme(\n    plot.margin = margin(120, 10, 10, 10)\n  )"
  },
  {
    "objectID": "04-annotations.html#recap",
    "href": "04-annotations.html#recap",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Recap",
    "text": "Recap\n\n\n\nstyle labels such as title, axis and legend texts with theme()\nformat data-related labels with the labels argument of scale_*()\nadjust strip text with the facet_*(labeller) functionality\nadd data-related annotations with geom_text|label()\n… and data-unrelated annotations with annotate()\nuse annotation_custom(rasterGrob()) to add images\n{ggtext} allows to render labels with markdown and basic html\n{ggtext} also allows to add dynamic linebreaks and images\n{ggrepel} ensures clever placement of annotations\nggforce::geom_mark_*() provide a set of advanced annotations"
  },
  {
    "objectID": "04-annotations.html#exercise-1",
    "href": "04-annotations.html#exercise-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nTake a look at the following visualization.\n\nFor each group of text labels, note how one would add and modify them.\nDiscuss how to automate the placement of the labels in- and outside of the bars."
  },
  {
    "objectID": "04-annotations.html#exercise-2",
    "href": "04-annotations.html#exercise-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\n{ggtext} also comes with some new geom’s. Explore those and other options on the package webpage: wilkelab.rg/ggtext.\n{ggforce} comes with a variety of interesting geometries and utilities. Take a look at this wonderful toolbox: ggforce.data-imaginist.com. Share potentially helpful features with the group."
  },
  {
    "objectID": "04-annotations.html#exercise-1-1",
    "href": "04-annotations.html#exercise-1-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nTake a look at the following visualization.\n\nFor each group of text labels, note how one would add and modify them.\nDiscuss how to automate the placement of the labels in- and outside of the bars."
  },
  {
    "objectID": "04-annotations.html#horizontal-bar-chart",
    "href": "04-annotations.html#horizontal-bar-chart",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Horizontal Bar Chart",
    "text": "Horizontal Bar Chart\n\np <- \n  bikes |> \n  filter(!is.na(weather_type), year == \"2015\") |> \n  summarize(n = sum(count), .by = weather_type) |> \n  ggplot(aes(x = n, y = forcats::fct_reorder(weather_type, n))) +\n  geom_col(color = \"grey20\", fill = \"beige\", width = .7) +\n  scale_x_continuous(expand = c(0, 0)) +\n  coord_cartesian(clip = \"off\") +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n\np"
  },
  {
    "objectID": "04-annotations.html#add-count-annotations",
    "href": "04-annotations.html#add-count-annotations",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Count Annotations",
    "text": "Add Count Annotations\n\np +\n  geom_text(\n    aes(label = n),\n    family = \"Asap SemiCondensed\"\n  )"
  },
  {
    "objectID": "04-annotations.html#add-count-annotations-1",
    "href": "04-annotations.html#add-count-annotations-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Count Annotations",
    "text": "Add Count Annotations\n\np +\n  geom_text(\n    aes(label = n,\n        hjust = n > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  )"
  },
  {
    "objectID": "04-annotations.html#add-count-annotations-2",
    "href": "04-annotations.html#add-count-annotations-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Count Annotations",
    "text": "Add Count Annotations\n\np +\n  geom_text(\n    aes(label = paste0(\"  \", sprintf(\"%2.2f\", n / 10^6), \"M  \"),\n        hjust = n > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  )"
  },
  {
    "objectID": "04-annotations.html#polish-axes",
    "href": "04-annotations.html#polish-axes",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Polish Axes",
    "text": "Polish Axes\n\np +\n  geom_text(\n    aes(label = paste0(\"  \", sprintf(\"%2.2f\", n / 10^6), \"M  \"),\n        hjust = n > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  theme(\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\")\n  )"
  },
  {
    "objectID": "04-annotations.html#polish-axes-labels",
    "href": "04-annotations.html#polish-axes-labels",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Polish Axes Labels",
    "text": "Polish Axes Labels\n\np +\n  geom_text(\n    aes(label = paste0(\"  \", sprintf(\"%2.2f\", n / 10^6), \"M  \"),\n        hjust = n > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  scale_y_discrete(\n    labels = stringr::str_to_sentence, name = NULL\n  ) +\n  theme(\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2))\n  )"
  },
  {
    "objectID": "04-annotations.html#add-titles",
    "href": "04-annotations.html#add-titles",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Titles",
    "text": "Add Titles\n\np +\n  geom_text(\n    aes(label = paste0(\"  \", sprintf(\"%2.2f\", n / 10^6), \"M  \"),\n        hjust = n > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0), name = \"**Reported bike shares**, in millions\", \n    breaks = 0:4*10^6, labels = c(\"0\", paste0(1:4, \"M\"))\n  ) +\n  scale_y_discrete(\n    labels = stringr::str_to_sentence, name = NULL\n  ) +\n  labs(\n    title = \"Fair weather preferred—even in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on rainy, cloudy, or snowy days in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme(\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title.position = \"plot\",\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(margin = margin(b = 20)),\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )"
  },
  {
    "objectID": "04-annotations.html#full-code",
    "href": "04-annotations.html#full-code",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Full Code",
    "text": "Full Code\n\nbikes |> \n  filter(!is.na(weather_type), year == \"2015\") |> \n  summarize(n = sum(count), .by = weather_type) |> \n  ggplot(aes(x = n, y = forcats::fct_reorder(weather_type, n))) +\n  geom_col(color = \"grey20\", fill = \"beige\", width = .7) +\n  geom_text(\n    aes(label = paste0(\"  \", sprintf(\"%2.2f\", n / 10^6), \"M  \"),\n        hjust = n > .5*10^6),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    breaks = 0:4*10^6,\n    labels = c(\"0\", paste0(1:4, \"M\")),\n    expand = c(0, 0), \n    name = \"**Reported bike shares**, in millions\"\n  ) +\n  scale_y_discrete(labels = stringr::str_to_sentence, name = NULL) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"Fair weather preferred—even in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on rainy, cloudy, or snowy days in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(margin = margin(b = 20)),\n    plot.title.position = \"plot\",\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )"
  },
  {
    "objectID": "04-annotations.html#full-code-with-stat_summary",
    "href": "04-annotations.html#full-code-with-stat_summary",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Full Code with `stat_summary()`",
    "text": "Full Code with `stat_summary()`\n\nbikes |> \n  filter(year == \"2015\") |> \n  mutate(weather_type = forcats::fct_reorder(weather_type, count, .fun = sum)) |> \n  ggplot(aes(x = count, y = weather_type)) +\n  stat_summary(\n    geom = \"bar\", fun = sum, \n    color = \"grey20\", fill = \"beige\", width = .7\n  ) +\n  stat_summary(\n    geom = \"text\", fun = sum,\n    aes(\n      label = after_stat(paste0(\"  \", sprintf(\"%2.2f\", x / 10^6), \"M  \")),\n      hjust = after_stat(x) > .5*10^6\n    ),\n    family = \"Asap SemiCondensed\"\n  ) +\n  scale_x_continuous(\n    breaks = 0:4*10^6,\n    labels = c(\"0\", paste0(1:4, \"M\")),\n    expand = c(0, 0), \n    name = \"**Reported bike shares**, in millions\"\n  ) +\n  scale_y_discrete(labels = stringr::str_to_sentence, name = NULL) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"Fair weather preferred—even in London\",\n    subtitle = \"Less than 10% of TfL bikes shares have been reported on rainy, cloudy, or snowy days in 2015.\",\n    caption = \"**Data:** Transport for London / freemeteo.com\"\n  ) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = ggtext::element_markdown(hjust = 0, face = \"italic\"),\n    axis.text.y = element_text(color = \"black\", size = rel(1.2)),\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(margin = margin(b = 20)),\n    plot.title.position = \"plot\",\n    plot.caption = ggtext::element_markdown(color = \"grey40\")\n  )"
  },
  {
    "objectID": "04-annotations.html#exercise-2-1",
    "href": "04-annotations.html#exercise-2-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\n{ggtext} also comes with some new geom’s. Explore those and other options on the package webpage: wilkelab.rg/ggtext.\n{ggforce} comes with a variety of interesting geometries and utilities. Take a look at this wonderful toolbox: ggforce.data-imaginist.com. Share potentially helpful features with the group.\n\n\n\n\n\nCédric Scherer // Data Visualization & Information Design"
  },
  {
    "objectID": "03-concepts-pt2.html#the-components-of-a-ggplot",
    "href": "03-concepts-pt2.html#the-components-of-a-ggplot",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The Components of a ggplot",
    "text": "The Components of a ggplot\n\n\n\n\n\nComponent\n\n\nFunction\n\n\nExplanation\n\n\n\n\nData\n\n\nggplot(data)         \n\n\nThe raw data that you want to visualize (initialising a plot).\n\n\n\n\nAesthetics          \n\n\naes()\n\n\nThe mapping between variables and visual properties.\n\n\n\nGeometries\n\n\ngeom_*()\n\n\nThe geometric shape of a layer representing the data.\n\n\n\n\nStatistics\n\n\nstat_*()\n\n\nThe statistical transformation of a layer applied to the data.\n\n\n\n\nScales\n\n\nscale_*()\n\n\nThe representation of mapped aesthetic attributes.\n\n\n\n\nCoordinate System\n\n\ncoord_*()\n\n\nThe transformation to map data coordinates into the plot plane.\n\n\n\n\nFacets\n\n\nfacet_*()\n\n\nThe arrangement of the data into a set of small multiples.\n\n\n\n\nVisual Themes\n\n\ntheme() | theme_*()\n\n\nThe overall visual defaults of non-data elements of the graphic."
  },
  {
    "objectID": "03-concepts-pt2.html#preparation",
    "href": "03-concepts-pt2.html#preparation",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Preparation",
    "text": "Preparation\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Asap SemiCondensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  legend.position = \"top\",\n  plot.title.position = \"plot\"\n)"
  },
  {
    "objectID": "03-concepts-pt2.html#facets-1",
    "href": "03-concepts-pt2.html#facets-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facets",
    "text": "Facets\n\n= split variables to multiple panels\n\nFacets are also known as:\n\nsmall multiples\ntrellis graphs\nlattice plots\nconditioning"
  },
  {
    "objectID": "03-concepts-pt2.html#setup",
    "href": "03-concepts-pt2.html#setup",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setup",
    "text": "Setup\n\n\ng <-\n  ggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .3,\n    guide = \"none\"\n  )\n\ng"
  },
  {
    "objectID": "03-concepts-pt2.html#wrapped-facets",
    "href": "03-concepts-pt2.html#wrapped-facets",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Wrapped Facets",
    "text": "Wrapped Facets\n\n\ng +\n  facet_wrap(\n    vars(day_night)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#wrapped-facets-1",
    "href": "03-concepts-pt2.html#wrapped-facets-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Wrapped Facets",
    "text": "Wrapped Facets\n\n\ng +\n  facet_wrap(\n    ~ day_night\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-multiple-variables",
    "href": "03-concepts-pt2.html#facet-multiple-variables",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Multiple Variables",
    "text": "Facet Multiple Variables\n\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-labellers",
    "href": "03-concepts-pt2.html#facet-labellers",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night,\n    labeller = label_both\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-labellers-1",
    "href": "03-concepts-pt2.html#facet-labellers-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night,\n    labeller = labeller(\n      day_night = stringr::str_to_title,\n      is_workday = label_both\n    )\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-labellers-2",
    "href": "03-concepts-pt2.html#facet-labellers-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ncodes <- c(\n  `TRUE` = \"Workday\",\n  `FALSE` = \"Weekend or Holiday\"\n)\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night,\n    labeller = labeller(\n      day_night = stringr::str_to_title,\n      is_workday = codes\n    )\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-labellers-3",
    "href": "03-concepts-pt2.html#facet-labellers-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ncodes <- c(\n  `TRUE` = \"Workday\",\n  `FALSE` = \"Weekend or Holiday\"\n)\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night,\n    labeller = labeller(\n      .default = stringr::str_to_title,\n      is_workday = codes\n    )\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-options-cols-rows",
    "href": "03-concepts-pt2.html#facet-options-cols-rows",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Options: Cols + Rows",
    "text": "Facet Options: Cols + Rows\n\n\ng +\n  facet_wrap(\n    ~ day_night,\n    ncol = 1\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-options-free-scaling",
    "href": "03-concepts-pt2.html#facet-options-free-scaling",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Options: Free Scaling",
    "text": "Facet Options: Free Scaling\n\n\ng +\n  facet_wrap(\n    ~ day_night,\n    ncol = 1,\n    scales = \"free\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-options-free-scaling-1",
    "href": "03-concepts-pt2.html#facet-options-free-scaling-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Options: Free Scaling",
    "text": "Facet Options: Free Scaling\n\n\ng +\n  facet_wrap(\n    ~ day_night,\n    ncol = 1,\n    scales = \"free_y\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-options-switch-labels",
    "href": "03-concepts-pt2.html#facet-options-switch-labels",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Options: Switch Labels",
    "text": "Facet Options: Switch Labels\n\n\ng +\n  facet_wrap(\n    ~ day_night,\n    ncol = 1,\n    switch = \"x\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#gridded-facets",
    "href": "03-concepts-pt2.html#gridded-facets",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Gridded Facets",
    "text": "Gridded Facets\n\n\ng +\n  facet_grid(\n    rows = vars(day_night),\n    cols = vars(is_weekend)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#gridded-facets-1",
    "href": "03-concepts-pt2.html#gridded-facets-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Gridded Facets",
    "text": "Gridded Facets\n\n\ng +\n  facet_grid(\n    day_night ~ is_weekend\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-multiple-variables-1",
    "href": "03-concepts-pt2.html#facet-multiple-variables-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Multiple Variables",
    "text": "Facet Multiple Variables\n\n\ng +\n  facet_grid(\n    day_night ~ is_weekend + is_holiday\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-labellers-4",
    "href": "03-concepts-pt2.html#facet-labellers-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ncodes_weekend <- c(\n  `TRUE` = \"Weekend\",\n  `FALSE` = \"No weekend\"\n)\n\ncodes_holiday <- c(\n  `TRUE` = \"Holiday\",\n  `FALSE` = \"No holiday\"\n)\n\ng +\n  facet_grid(\n    day_night ~ is_weekend + is_holiday,\n    labeller = labeller(\n      day_night = stringr::str_to_title,\n      is_weekend = codes_weekend,\n      is_holiday = codes_holiday\n    )\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-options-free-scaling-2",
    "href": "03-concepts-pt2.html#facet-options-free-scaling-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Options: Free Scaling",
    "text": "Facet Options: Free Scaling\n\n\ng +\n  facet_grid(\n    day_night ~ is_weekend,\n    scales = \"free\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-options-switch-labels-1",
    "href": "03-concepts-pt2.html#facet-options-switch-labels-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Options: Switch Labels",
    "text": "Facet Options: Switch Labels\n\n\ng +\n  facet_grid(\n    day_night ~ is_weekend,\n    scales = \"free\",\n    switch = \"y\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-options-proportional-spacing",
    "href": "03-concepts-pt2.html#facet-options-proportional-spacing",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Options: Proportional Spacing",
    "text": "Facet Options: Proportional Spacing\n\n\ng +\n  facet_grid(\n    day_night ~ is_weekend,\n    scales = \"free\",\n    space = \"free\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#facet-options-proportional-spacing-1",
    "href": "03-concepts-pt2.html#facet-options-proportional-spacing-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Facet Options: Proportional Spacing",
    "text": "Facet Options: Proportional Spacing\n\n\ng +\n  facet_grid(\n    day_night ~ is_weekend,\n    scales = \"free_y\",\n    space = \"free_y\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#your-turn",
    "href": "03-concepts-pt2.html#your-turn",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Your Turn!",
    "text": "Your Turn!\n\nCreate the following facet from the diamonds data."
  },
  {
    "objectID": "03-concepts-pt2.html#your-turn-1",
    "href": "03-concepts-pt2.html#your-turn-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Your Turn!",
    "text": "Your Turn!\n\nBonus: Create this bloody-dark version."
  },
  {
    "objectID": "03-concepts-pt2.html#diamonds-facet",
    "href": "03-concepts-pt2.html#diamonds-facet",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nggplot(\n    diamonds,\n    aes(x = carat, y = price)\n  ) +\n  geom_point(\n    alpha = .3\n  ) +\n  geom_smooth(\n    se = FALSE,\n    color = \"dodgerblue\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#diamonds-facet-1",
    "href": "03-concepts-pt2.html#diamonds-facet-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nggplot(\n    diamonds,\n    aes(x = carat, y = price)\n  ) +\n  geom_point(\n    alpha = .3\n  ) +\n  geom_smooth(\n    se = FALSE,\n    color = \"dodgerblue\"\n  ) +\n  facet_grid(\n    cut ~ color,\n    space = \"free_x\",\n    scales = \"free_x\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#diamonds-facet-dark-theme-bonus",
    "href": "03-concepts-pt2.html#diamonds-facet-dark-theme-bonus",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Diamonds Facet (Dark Theme Bonus)",
    "text": "Diamonds Facet (Dark Theme Bonus)\n\n\nggplot(\n    diamonds,\n    aes(x = carat, y = price)\n  ) +\n  geom_point(\n    alpha = .3,\n    color = \"white\"\n  ) +\n  geom_smooth(\n    se = FALSE,\n    color = \"dodgerblue\"\n  ) +\n  facet_grid(\n    cut ~ color,\n    space = \"free_x\",\n    scales = \"free_x\"\n  ) +\n  theme_dark(\n    base_size = 14,\n    base_family = \"Asap SemiCondensed\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scales-1",
    "href": "03-concepts-pt2.html#scales-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Scales",
    "text": "Scales\n\n= translate between variable ranges and property ranges\n\n\nfeels-like temperature ⇄ x\nreported bike shares ⇄ y\nseason ⇄ color\nyear ⇄ shape\n…"
  },
  {
    "objectID": "03-concepts-pt2.html#scales-2",
    "href": "03-concepts-pt2.html#scales-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Scales",
    "text": "Scales\nThe scale_*() components control the properties of all theaesthetic dimensions mapped to the data.\nConsequently, there are scale_*() functions for all aesthetics such as:\n\npositions via scale_x_*() and scale_y_*()\ncolors via scale_color_*() and scale_fill_*()\nsizes via scale_size_*() and scale_radius_*()\nshapes via scale_shape_*() and scale_linetype_*()\ntransparency via scale_alpha_*()"
  },
  {
    "objectID": "03-concepts-pt2.html#scales-3",
    "href": "03-concepts-pt2.html#scales-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Scales",
    "text": "Scales\nThe scale_*() components control the properties of all theaesthetic dimensions mapped to the data.\nThe extensions (*) can be filled by e.g.:\n\ncontinuous(), discrete(), reverse(), log10(), sqrt(), date() for positions\ncontinuous(), discrete(), manual(), gradient(), gradient2() for colors\ncontinuous(), discrete(), manual(), ordinal(), area(), date() for sizes\ncontinuous(), discrete(), manual(), ordinal() for shapes\ncontinuous(), discrete(), manual(), ordinal(), date() for transparency"
  },
  {
    "objectID": "03-concepts-pt2.html#continuous-vs.-discrete-in-ggplot2",
    "href": "03-concepts-pt2.html#continuous-vs.-discrete-in-ggplot2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Continuous vs. Discrete in {ggplot2}",
    "text": "Continuous vs. Discrete in {ggplot2}\n\n\n\nContinuous:quantitative or numerical data\n\nheight\nweight\nage\ncounts\n\n\n\nDiscrete:qualitative or categorical data\n\nspecies\nsex\nstudy sites\nage group"
  },
  {
    "objectID": "03-concepts-pt2.html#continuous-vs.-discrete-in-ggplot2-1",
    "href": "03-concepts-pt2.html#continuous-vs.-discrete-in-ggplot2-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Continuous vs. Discrete in {ggplot2}",
    "text": "Continuous vs. Discrete in {ggplot2}\n\n\n\nContinuous:quantitative or numerical data\n\nheight (continuous)\nweight (continuous)\nage (continuous or discrete)\ncounts (discrete)\n\n\n\nDiscrete:qualitative or categorical data\n\nspecies (nominal)\nsex (nominal)\nstudy site (nominal or ordinal)\nage group (ordinal)"
  },
  {
    "objectID": "03-concepts-pt2.html#aesthetics-scales",
    "href": "03-concepts-pt2.html#aesthetics-scales",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Aesthetics + Scales",
    "text": "Aesthetics + Scales\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point()"
  },
  {
    "objectID": "03-concepts-pt2.html#aesthetics-scales-1",
    "href": "03-concepts-pt2.html#aesthetics-scales-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Aesthetics + Scales",
    "text": "Aesthetics + Scales\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous() +\n  scale_color_discrete()"
  },
  {
    "objectID": "03-concepts-pt2.html#scales-4",
    "href": "03-concepts-pt2.html#scales-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Scales",
    "text": "Scales\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_continuous() +\n  scale_y_continuous() +\n  scale_color_discrete()"
  },
  {
    "objectID": "03-concepts-pt2.html#scales-5",
    "href": "03-concepts-pt2.html#scales-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Scales",
    "text": "Scales\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_continuous() +\n  scale_y_log10() +\n  scale_color_discrete()"
  },
  {
    "objectID": "03-concepts-pt2.html#scales-6",
    "href": "03-concepts-pt2.html#scales-6",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Scales",
    "text": "Scales\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_continuous() +\n  scale_y_log10() +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous",
    "href": "03-concepts-pt2.html#scale_xy_continuous",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +  \n  geom_point() +\n  scale_y_continuous(\n    trans = \"log10\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-1",
    "href": "03-concepts-pt2.html#scale_xy_continuous-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-2",
    "href": "03-concepts-pt2.html#scale_xy_continuous-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = seq(0, 60000, by = 15000)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-3",
    "href": "03-concepts-pt2.html#scale_xy_continuous-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = 0:4*15000\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-4",
    "href": "03-concepts-pt2.html#scale_xy_continuous-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = c(0, 2:12*2500, 40000, 50000)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-5",
    "href": "03-concepts-pt2.html#scale_xy_continuous-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares in thousands\",\n    breaks = 0:4*15000,\n    labels = 0:4*15\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-6",
    "href": "03-concepts-pt2.html#scale_xy_continuous-6",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares in thousands\",\n    breaks = 0:4*15000,\n    labels = paste(0:4*15000, \"bikes\")\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-7",
    "href": "03-concepts-pt2.html#scale_xy_continuous-7",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = 0:4*15000,\n    limits = c(NA, 60000)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-8",
    "href": "03-concepts-pt2.html#scale_xy_continuous-8",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = 0:4*15000,\n    expand = c(0, 0)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-9",
    "href": "03-concepts-pt2.html#scale_xy_continuous-9",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = -1:5*15000,\n    expand = c(.5, .5) ## c(add, mult)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-10",
    "href": "03-concepts-pt2.html#scale_xy_continuous-10",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = -1:5*15000,\n    expand = expansion(add = 2000)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-11",
    "href": "03-concepts-pt2.html#scale_xy_continuous-11",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    guide = \"none\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-12",
    "href": "03-concepts-pt2.html#scale_xy_continuous-12",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = temp,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Temperature (°C)\",\n    sec.axis = dup_axis()\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_continuous-13",
    "href": "03-concepts-pt2.html#scale_xy_continuous-13",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = temp,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Temperature (°C)\",\n    sec.axis = sec_axis(\n      trans = ~ (. * 9/5) + 32,\n      name = \"Temperature (°F)\"\n    )\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_date",
    "href": "03-concepts-pt2.html#scale_xy_date",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_date`",
    "text": "`scale_x|y_date`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date(\n    name = NULL,\n    date_breaks = \"4 months\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_date-1",
    "href": "03-concepts-pt2.html#scale_xy_date-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_date`",
    "text": "`scale_x|y_date`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date(\n    name = NULL,\n    date_breaks = \"20 weeks\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_date-with-strftime",
    "href": "03-concepts-pt2.html#scale_xy_date-with-strftime",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_date` with `strftime()`",
    "text": "`scale_x|y_date` with `strftime()`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date(\n    name = NULL,\n    date_breaks = \"6 months\",\n    date_labels = \"%Y/%m/%d\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_date-with-strftime-1",
    "href": "03-concepts-pt2.html#scale_xy_date-with-strftime-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_date` with `strftime()`",
    "text": "`scale_x|y_date` with `strftime()`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date(\n    name = NULL,\n    date_breaks = \"6 months\",\n    date_labels = \"%b '%y\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_discrete",
    "href": "03-concepts-pt2.html#scale_xy_discrete",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_discrete`",
    "text": "`scale_x|y_discrete`\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_x_discrete(\n    name = \"Period\",\n    labels = c(\"Dec-Feb\", \"Mar-May\", \"Jun-Aug\", \"Sep-Nov\")\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_xy_discrete-1",
    "href": "03-concepts-pt2.html#scale_xy_discrete-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_x|y_discrete`",
    "text": "`scale_x|y_discrete`\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_x_discrete(\n    name = \"Season\",\n    expand = c(.5, 0) ## add, mult\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#discrete-or-continuous",
    "href": "03-concepts-pt2.html#discrete-or-continuous",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Discrete or Continuous?",
    "text": "Discrete or Continuous?\n\n\nggplot(\n    bikes,\n    aes(x = as.numeric(season), y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "03-concepts-pt2.html#discrete-or-continuous-1",
    "href": "03-concepts-pt2.html#discrete-or-continuous-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Discrete or Continuous?",
    "text": "Discrete or Continuous?\n\n\nggplot(\n    bikes,\n    aes(x = as.numeric(season), y = count)\n  ) +\n  geom_boxplot(\n    aes(group = season)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#discrete-or-continuous-2",
    "href": "03-concepts-pt2.html#discrete-or-continuous-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Discrete or Continuous?",
    "text": "Discrete or Continuous?\n\n\nggplot(\n    bikes,\n    aes(x = as.numeric(season),\n        y = count)\n  ) +\n  geom_boxplot(\n    aes(group = season)\n  ) +\n  scale_x_continuous(\n    name = \"Season\",\n    breaks = 1:4,\n    labels = levels(bikes$season)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#discrete-or-continuous-3",
    "href": "03-concepts-pt2.html#discrete-or-continuous-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Discrete or Continuous?",
    "text": "Discrete or Continuous?\n\n\nggplot(\n    bikes,\n    aes(x = as.numeric(season) + \n            as.numeric(season) / 8,\n        y = count)\n  ) +\n  geom_boxplot(\n    aes(group = season)\n  ) +\n  scale_x_continuous(\n    name = \"Season\",\n    breaks = 1:4,\n    labels = levels(bikes$season)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#discrete-or-continuous-4",
    "href": "03-concepts-pt2.html#discrete-or-continuous-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Discrete or Continuous?",
    "text": "Discrete or Continuous?\n\n\nggplot(\n    bikes,\n    aes(y = count,\n        group = season)\n  ) +\n  geom_boxplot(\n    aes(x = as.numeric(season) + .15),\n    width = .3\n  ) +\n  geom_jitter(\n    aes(x = as.numeric(season) - .15),\n    width = .1,\n    alpha = .3\n  ) +\n  scale_x_continuous(\n    name = \"Season\",\n    breaks = 1:4,\n    labels = levels(bikes$season)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_discrete",
    "href": "03-concepts-pt2.html#scale_colorfill_discrete",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_discrete`",
    "text": "`scale_color|fill_discrete`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = c(\"#69b0d4\", \"#00CB79\", \"#F7B01B\", \"#a78f5f\")\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#inspect-assigned-colors",
    "href": "03-concepts-pt2.html#inspect-assigned-colors",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Inspect Assigned Colors",
    "text": "Inspect Assigned Colors\n\n\ng <- ggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = c(\"#3ca7d9\", \"#1ec99b\", \"#F7B01B\", \"#bb7e8f\")\n  )\n\ngb <- ggplot_build(g)\n\ngb$data[[1]][c(1:5, 200:205, 400:405), 1:5]\n\n\n     colour     x     y PANEL group\n1   #3ca7d9 16439  6830     1     1\n2   #3ca7d9 16439  2404     1     1\n3   #3ca7d9 16440 14763     1     1\n4   #3ca7d9 16440  5609     1     1\n5   #3ca7d9 16441 14501     1     1\n200 #1ec99b 16538  8830     1     2\n201 #1ec99b 16539 24019     1     2\n202 #1ec99b 16539 10500     1     2\n203 #1ec99b 16540 25640     1     2\n204 #1ec99b 16540 11830     1     2\n205 #1ec99b 16541 22216     1     2\n400 #F7B01B 16638 12079     1     3\n401 #F7B01B 16639 26646     1     3\n402 #F7B01B 16639 12446     1     3\n403 #F7B01B 16640 11312     1     3\n404 #F7B01B 16640  4722     1     3\n405 #F7B01B 16641 22748     1     3"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_discrete-1",
    "href": "03-concepts-pt2.html#scale_colorfill_discrete-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_discrete`",
    "text": "`scale_color|fill_discrete`\n\n\nmy_colors <- c(\n  `winter` = \"#3c89d9\",\n  `spring` = \"#1ec99b\",\n  `summer` = \"#F7B01B\",\n  `autumn` = \"#a26e7c\"\n)\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = my_colors\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_discrete-2",
    "href": "03-concepts-pt2.html#scale_colorfill_discrete-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_discrete`",
    "text": "`scale_color|fill_discrete`\n\n\nmy_colors_alphabetical <- c(\n  `autumn` = \"#a26e7c\",\n  `spring` = \"#1ec99b\",\n  `summer` = \"#F7B01B\",\n  `winter` = \"#3c89d9\"\n)\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = my_colors_alphabetical\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_discrete-3",
    "href": "03-concepts-pt2.html#scale_colorfill_discrete-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_discrete`",
    "text": "`scale_color|fill_discrete`\n\n\nlibrary(RColorBrewer)\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = brewer.pal(\n      n = 4, name = \"Dark2\"\n    )\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_manual",
    "href": "03-concepts-pt2.html#scale_colorfill_manual",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_manual`",
    "text": "`scale_color|fill_manual`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = weather_type)\n  ) +\n  geom_point() +\n  scale_color_manual(\n    name = NULL,\n    values = brewer.pal(n = 6, name = \"Pastel1\"),\n    na.value = \"black\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_carto_d",
    "href": "03-concepts-pt2.html#scale_colorfill_carto_d",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_carto_d`",
    "text": "`scale_color|fill_carto_d`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = weather_type)\n  ) +\n  geom_point() +\n  rcartocolor::scale_color_carto_d(\n    name = NULL,\n    palette = \"Pastel\",\n    na.value = \"black\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_continuous",
    "href": "03-concepts-pt2.html#scale_colorfill_continuous",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_continuous`",
    "text": "`scale_color|fill_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  scale_color_continuous()"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_continuous-1",
    "href": "03-concepts-pt2.html#scale_colorfill_continuous-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_continuous`",
    "text": "`scale_color|fill_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  scale_color_continuous(\n    name = \"Temperature:\",\n    type = \"viridis\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_gradient",
    "href": "03-concepts-pt2.html#scale_colorfill_gradient",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_gradient`",
    "text": "`scale_color|fill_gradient`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  scale_color_gradient(\n    name = \"Temperature:\",\n    low = \"grey90\",\n    high = \"#8b0023\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_gradient2",
    "href": "03-concepts-pt2.html#scale_colorfill_gradient2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_gradient2`",
    "text": "`scale_color|fill_gradient2`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  scale_color_gradient2(\n    name = \"Temperature:\",\n    low = \"#28a87d\",\n    mid = \"grey90\",\n    high = \"#8b0023\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_gradient2-1",
    "href": "03-concepts-pt2.html#scale_colorfill_gradient2-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_gradient2`",
    "text": "`scale_color|fill_gradient2`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  scale_color_gradient2(\n    name = \"Temperature:\",\n    low = \"#28a87d\",\n    mid = \"grey90\",\n    high = \"#8b0023\",\n    midpoint = mean(bikes$temp)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_gradientn",
    "href": "03-concepts-pt2.html#scale_colorfill_gradientn",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_gradientn`",
    "text": "`scale_color|fill_gradientn`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  scale_color_gradientn(\n    name = \"Temperature:\",\n    colors = c(\"red\", \"orange\", \"green\", \"blue\")\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_viridis_c",
    "href": "03-concepts-pt2.html#scale_colorfill_viridis_c",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_viridis_c`",
    "text": "`scale_color|fill_viridis_c`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    name = \"Temperature:\",\n    option = \"magma\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_viridis_c-1",
    "href": "03-concepts-pt2.html#scale_colorfill_viridis_c-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_viridis_c`",
    "text": "`scale_color|fill_viridis_c`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    name = \"Temperature:\",\n    option = \"magma\",\n    direction = -1\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_viridis_c-2",
    "href": "03-concepts-pt2.html#scale_colorfill_viridis_c-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_viridis_c`",
    "text": "`scale_color|fill_viridis_c`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    name = \"Temperature:\",\n    option = \"magma\",\n    direction = -1,\n    begin = .2,\n    end = .95\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_distiller",
    "href": "03-concepts-pt2.html#scale_colorfill_distiller",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_distiller`",
    "text": "`scale_color|fill_distiller`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  scale_color_distiller(\n    name = \"Temperature:\",\n    palette = \"RdYlBu\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#rcolorbrewer",
    "href": "03-concepts-pt2.html#rcolorbrewer",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "{RColorBrewer}",
    "text": "{RColorBrewer}\n\nRColorBrewer::display.brewer.all()"
  },
  {
    "objectID": "03-concepts-pt2.html#rcolorbrewer-1",
    "href": "03-concepts-pt2.html#rcolorbrewer-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "{RColorBrewer}",
    "text": "{RColorBrewer}\n\nRColorBrewer::display.brewer.all(colorblindFriendly = TRUE)"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_carto_c",
    "href": "03-concepts-pt2.html#scale_colorfill_carto_c",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_carto_c`",
    "text": "`scale_color|fill_carto_c`\n\n\n# install.packages(\"rcartocolor\")\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  rcartocolor::scale_color_carto_c(\n    name = \"Temperature:\",\n    palette = \"ag_GrnYl\",\n    direction = -1\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#rcartocolor",
    "href": "03-concepts-pt2.html#rcartocolor",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "{rcartocolor}",
    "text": "{rcartocolor}\n\nrcartocolor::display_carto_all()"
  },
  {
    "objectID": "03-concepts-pt2.html#rcartocolor-1",
    "href": "03-concepts-pt2.html#rcartocolor-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "{rcartocolor}",
    "text": "{rcartocolor}\n\nrcartocolor::display_carto_all(colorblind_friendly = TRUE)"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_scico",
    "href": "03-concepts-pt2.html#scale_colorfill_scico",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_scico`",
    "text": "`scale_color|fill_scico`\n\n\n# install.packages(\"scico\")\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  scico::scale_color_scico(\n    name = \"Temperature:\",\n    palette = \"batlow\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scale_colorfill_scico-1",
    "href": "03-concepts-pt2.html#scale_colorfill_scico-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`scale_color|fill_scico`",
    "text": "`scale_color|fill_scico`\n\n\n# install.packages(\"scico\")\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = temp)\n  ) +\n  geom_point() +\n  scico::scale_color_scico(\n    name = \"Temperature:\",\n    palette = \"managua\",\n    direction = -1\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#scico",
    "href": "03-concepts-pt2.html#scico",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "{scico}",
    "text": "{scico}\n\nscico::scico_palette_show()"
  },
  {
    "objectID": "03-concepts-pt2.html#your-turn-2",
    "href": "03-concepts-pt2.html#your-turn-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Your Turn!",
    "text": "Your Turn!\n\nModify our diamonds facet like this:"
  },
  {
    "objectID": "03-concepts-pt2.html#diamonds-facet-2",
    "href": "03-concepts-pt2.html#diamonds-facet-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet <-\n  ggplot(\n    diamonds,\n    aes(x = carat, y = price)\n  ) +\n  geom_point(\n    alpha = .3\n  ) +\n  geom_smooth(\n    aes(color = cut),\n    se = FALSE\n  ) +\n  facet_grid(\n    cut ~ clarity,\n    space = \"free_x\",\n    scales = \"free_x\"\n  )\n\nfacet"
  },
  {
    "objectID": "03-concepts-pt2.html#diamonds-facet-3",
    "href": "03-concepts-pt2.html#diamonds-facet-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    limits = c(0, NA)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#diamonds-facet-4",
    "href": "03-concepts-pt2.html#diamonds-facet-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    limits = c(0, NA)\n  ) +\n  scale_y_continuous(\n    breaks = 0:5*5000,\n    labels = c(\"$0\", \"$5,000\", \"$10,000\", \"$15,000\", \"$20,000\", \"$25,000\")\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#diamonds-facet-5",
    "href": "03-concepts-pt2.html#diamonds-facet-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    limits = c(0, NA)\n  ) +\n  scale_y_continuous(\n    breaks = 0:5*5000,\n    labels = paste0(\n      \"$\", format(0:5*5000, big.mark = \",\", trim = TRUE)\n    )\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#diamonds-facet-6",
    "href": "03-concepts-pt2.html#diamonds-facet-6",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    limits = c(0, NA)\n  ) +\n  scale_y_continuous(\n    breaks = 0:5*5000,\n    labels = function(y) paste0(\n      \"$\", format(y, big.mark = \",\", trim = TRUE)\n    )\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#diamonds-facet-7",
    "href": "03-concepts-pt2.html#diamonds-facet-7",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    limits = c(0, NA)\n  ) +\n  scale_y_continuous(\n    breaks = 0:5*5000,\n    labels = scales::dollar_format()\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#diamonds-facet-8",
    "href": "03-concepts-pt2.html#diamonds-facet-8",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    limits = c(0, NA)\n  ) +\n  scale_y_continuous(\n    breaks = 0:5*5000,\n    labels = scales::dollar_format()\n  ) +\n  rcartocolor::scale_color_carto_d(\n    palette = \"Pastel\", \n    guide = \"none\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#diamonds-facet-9",
    "href": "03-concepts-pt2.html#diamonds-facet-9",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    limits = c(0, NA)\n  ) +\n  scale_y_continuous(\n    breaks = 0:5*5000,\n    labels = scales::dollar_format()\n  ) +\n  rcartocolor::scale_color_carto_d(\n    palette = \"Pastel\"\n  ) +\n  theme(\n    legend.position = \"none\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#customize-existing-palettes",
    "href": "03-concepts-pt2.html#customize-existing-palettes",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  rcartocolor::scale_fill_carto_d(\n    palette = \"Vivid\" \n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#customize-existing-palettes-1",
    "href": "03-concepts-pt2.html#customize-existing-palettes-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = rcartocolor::carto_pal(\n      name = \"Vivid\", n = 4\n    )\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#customize-existing-palettes-2",
    "href": "03-concepts-pt2.html#customize-existing-palettes-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = rcartocolor::carto_pal(\n      name = \"Vivid\", n = 5\n    )[1:4]\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#customize-existing-palettes-3",
    "href": "03-concepts-pt2.html#customize-existing-palettes-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = rcartocolor::carto_pal(\n      name = \"Vivid\", n = 7\n    )[c(2, 6, 1, 3)]\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#customize-existing-palettes-4",
    "href": "03-concepts-pt2.html#customize-existing-palettes-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\ncarto_custom <- \n  rcartocolor::carto_pal(\n    name = \"Vivid\", n = 7\n  )[c(2, 6, 1, 3)]\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#customize-existing-palettes-5",
    "href": "03-concepts-pt2.html#customize-existing-palettes-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nlibrary(prismatic)\n\ncarto_light <- clr_lighten(\n  carto_custom, .7\n)\n\nggplot(bikes, \n       aes(x = day_night, y = count, \n           fill = season)) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_light\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#customize-existing-palettes-6",
    "href": "03-concepts-pt2.html#customize-existing-palettes-6",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count)) +\n  geom_boxplot(\n    aes(fill = season,\n        fill = after_scale(\n          clr_lighten(fill, .7)\n    ))\n  ) +\n  scale_fill_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#customize-existing-palettes-7",
    "href": "03-concepts-pt2.html#customize-existing-palettes-7",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count)) +\n  geom_boxplot(\n    aes(fill = stage(\n      season, \n      after_scale = clr_lighten(fill, .7)\n    ))\n  ) +\n  scale_fill_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#customize-existing-palettes-8",
    "href": "03-concepts-pt2.html#customize-existing-palettes-8",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes, \n       aes(x = day_night, y = count)) +\n  geom_boxplot(\n    aes(color = season,\n        fill = after_scale(\n          clr_lighten(color, .7)\n    ))\n  ) +\n  scale_color_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#customize-existing-palettes-9",
    "href": "03-concepts-pt2.html#customize-existing-palettes-9",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(bikes,\n       aes(x = day_night, y = count)) +\n  geom_boxplot(\n    aes(color = season,\n        fill = after_scale(\n          clr_lighten(color, .7)\n    )),\n    outlier.shape = NA\n  ) +\n  geom_jitter(\n    aes(color = season,\n        color = after_scale(\n          clr_darken(color, .4)\n    )), \n    position = position_jitterdodge(\n      dodge.width = .75, \n      jitter.width = .2\n    ),\n    alpha = .3, size = .6\n  ) +\n  scale_color_manual(\n    values = carto_custom\n  ) +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "03-concepts-pt2.html#coordinate-systems-1",
    "href": "03-concepts-pt2.html#coordinate-systems-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Coordinate Systems",
    "text": "Coordinate Systems\n\n= interpret the position aesthetics\n\n\nlinear coordinate systems: preserve the geometrical shapes\n\ncoord_cartesian()\ncoord_fixed()\ncoord_flip()\n\nnon-linear coordinate systems: likely change the geometrical shapes\n\ncoord_polar()\ncoord_map() and coord_sf()\ncoord_trans()"
  },
  {
    "objectID": "03-concepts-pt2.html#cartesian-coordinate-system",
    "href": "03-concepts-pt2.html#cartesian-coordinate-system",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Cartesian Coordinate System",
    "text": "Cartesian Coordinate System\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  coord_cartesian()"
  },
  {
    "objectID": "03-concepts-pt2.html#cartesian-coordinate-system-1",
    "href": "03-concepts-pt2.html#cartesian-coordinate-system-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Cartesian Coordinate System",
    "text": "Cartesian Coordinate System\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  coord_cartesian(\n    ylim = c(NA, 15000)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#changing-limits",
    "href": "03-concepts-pt2.html#changing-limits",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Changing Limits",
    "text": "Changing Limits\n\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  coord_cartesian(\n    ylim = c(NA, 15000)\n  )\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_y_continuous(\n    limits = c(NA, 15000)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#clipping",
    "href": "03-concepts-pt2.html#clipping",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Clipping",
    "text": "Clipping\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  coord_cartesian(\n    ylim = c(NA, 15000),\n    clip = \"off\"\n  ) +\n  theme(\n    plot.margin = margin(t = 150)\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#clipping-1",
    "href": "03-concepts-pt2.html#clipping-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Clipping",
    "text": "Clipping\n\n\nggplot(\n    filter(bikes, is_holiday == TRUE),\n    aes(x = temp, y = count)\n  ) +\n  geom_point() +\n  geom_text(\n    aes(label = season),\n    nudge_x = .3,\n    hjust = 0\n  ) +\n  coord_cartesian(\n    clip = \"off\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#or-better-use-ggrepel",
    "href": "03-concepts-pt2.html#or-better-use-ggrepel",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "… or better use {ggrepel}",
    "text": "… or better use {ggrepel}\n\n\nggplot(\n    filter(bikes, is_holiday == TRUE),\n    aes(x = temp, y = count)\n  ) +\n  geom_point() +\n  ggrepel::geom_text_repel(\n    aes(label = season),\n    nudge_x = .3,\n    hjust = 0\n  ) +\n  coord_cartesian(\n    clip = \"off\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#remove-all-padding",
    "href": "03-concepts-pt2.html#remove-all-padding",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Remove All Padding",
    "text": "Remove All Padding\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point() +\n  coord_cartesian(\n    expand = FALSE,\n    clip = \"off\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#fixed-coordinate-system",
    "href": "03-concepts-pt2.html#fixed-coordinate-system",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Fixed Coordinate System",
    "text": "Fixed Coordinate System\n\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = temp_feel)\n  ) +\n  geom_point() +\n  coord_fixed()\n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = temp_feel)\n  ) +\n  geom_point() +\n  coord_fixed(ratio = 4)"
  },
  {
    "objectID": "03-concepts-pt2.html#flipped-coordinate-system",
    "href": "03-concepts-pt2.html#flipped-coordinate-system",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Flipped Coordinate System",
    "text": "Flipped Coordinate System\n\n\n\nggplot(\n    bikes,\n    aes(x = weather_type)\n  ) +\n  geom_bar() +\n  coord_cartesian()\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = weather_type)\n  ) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "03-concepts-pt2.html#flipped-coordinate-system-1",
    "href": "03-concepts-pt2.html#flipped-coordinate-system-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Flipped Coordinate System",
    "text": "Flipped Coordinate System\n\n\n\nggplot(\n    bikes,\n    aes(y = weather_type)\n  ) +\n  geom_bar() +\n  coord_cartesian()\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = weather_type)\n  ) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "03-concepts-pt2.html#reminder-sort-your-bars",
    "href": "03-concepts-pt2.html#reminder-sort-your-bars",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Reminder: Sort Your Bars!",
    "text": "Reminder: Sort Your Bars!\n\n\nlibrary(forcats)\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(y = fct_infreq(weather_type))\n  ) +\n  geom_bar()"
  },
  {
    "objectID": "03-concepts-pt2.html#reminder-sort-your-bars-1",
    "href": "03-concepts-pt2.html#reminder-sort-your-bars-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Reminder: Sort Your Bars!",
    "text": "Reminder: Sort Your Bars!\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(\n      y = fct_rev(\n        fct_infreq(weather_type)\n      )\n    )\n  ) +\n  geom_bar()"
  },
  {
    "objectID": "03-concepts-pt2.html#circular-coordinate-system",
    "href": "03-concepts-pt2.html#circular-coordinate-system",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Circular Coordinate System",
    "text": "Circular Coordinate System\n\n\n\nggplot(\n    bikes,\n    aes(x = is_workday,\n        fill = is_workday)\n  ) +\n  geom_bar() +\n  coord_cartesian()\n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = is_workday,\n        fill = is_workday)\n  ) +\n  geom_bar() +\n  coord_polar()"
  },
  {
    "objectID": "03-concepts-pt2.html#circular-coordinate-system-1",
    "href": "03-concepts-pt2.html#circular-coordinate-system-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Circular Coordinate System",
    "text": "Circular Coordinate System\n\n\n\nggplot(\n    bikes,\n    aes(x = is_workday,\n        fill = is_workday)\n  ) +\n  geom_bar(width = 1) +\n  coord_cartesian()\n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = is_workday,\n        fill = is_workday)\n  ) +\n  geom_bar(width = 1) +\n  coord_polar()"
  },
  {
    "objectID": "03-concepts-pt2.html#circular-coordinate-system-2",
    "href": "03-concepts-pt2.html#circular-coordinate-system-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Circular Coordinate System",
    "text": "Circular Coordinate System\n\n\n\nggplot(\n    bikes,\n    aes(x = is_workday,\n        fill = is_workday)\n  ) +\n  geom_bar() +\n  coord_polar(theta = \"x\")\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = is_workday,\n        fill = is_workday)\n  ) +\n  geom_bar() +\n  coord_polar(theta = \"y\")"
  },
  {
    "objectID": "03-concepts-pt2.html#circular-coordinate-system-3",
    "href": "03-concepts-pt2.html#circular-coordinate-system-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Circular Coordinate System",
    "text": "Circular Coordinate System\n\n\n\nggplot(\n    bikes,\n    aes(x = 1, fill = is_workday)\n  ) +\n  geom_bar() +\n  coord_cartesian() \n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = 1, fill = is_workday)\n  ) +\n  geom_bar() +\n  coord_polar(theta = \"y\")"
  },
  {
    "objectID": "03-concepts-pt2.html#transform-a-coordinate-system",
    "href": "03-concepts-pt2.html#transform-a-coordinate-system",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Transform a Coordinate System",
    "text": "Transform a Coordinate System\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point() +\n  coord_trans(y = \"log10\")"
  },
  {
    "objectID": "03-concepts-pt2.html#transform-a-coordinate-system-1",
    "href": "03-concepts-pt2.html#transform-a-coordinate-system-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Transform a Coordinate System",
    "text": "Transform a Coordinate System\n\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        group = day_night)\n  ) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  coord_trans(y = \"log10\")\n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        group = day_night)\n  ) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  scale_y_log10()"
  },
  {
    "objectID": "03-concepts-pt2.html#spatial-coordinate-reference-systems",
    "href": "03-concepts-pt2.html#spatial-coordinate-reference-systems",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Spatial Coordinate (Reference) Systems",
    "text": "Spatial Coordinate (Reference) Systems\n\n\ncountries <- rnaturalearth::ne_countries(\n  returnclass = \"sf\"\n)\n\nggplot() +\n  geom_sf(\n    data = countries,\n    color = \"#79dfbd\",\n    fill = \"#28a87d\",\n    linewidth = .3\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#spatial-coordinate-reference-systems-1",
    "href": "03-concepts-pt2.html#spatial-coordinate-reference-systems-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Spatial Coordinate (Reference) Systems",
    "text": "Spatial Coordinate (Reference) Systems\n\n\nggplot() +\n  geom_sf(\n    data = countries,\n    color = \"#79dfbd\",\n    fill = \"#28a87d\",\n    linewidth = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=moll\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#spatial-coordinate-reference-systems-2",
    "href": "03-concepts-pt2.html#spatial-coordinate-reference-systems-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Spatial Coordinate (Reference) Systems",
    "text": "Spatial Coordinate (Reference) Systems\n\n\nggplot() +\n  geom_sf(\n    data = countries,\n    color = \"#79dfbd\",\n    fill = \"#28a87d\",\n    linewidth = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=bonne +lat_1=10\"\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#generate-own-simple-features-objects",
    "href": "03-concepts-pt2.html#generate-own-simple-features-objects",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Generate Own Simple Features Objects",
    "text": "Generate Own Simple Features Objects\n\nsf_bln <- sf::st_sfc(\n  sf::st_point(c(13.4050, 52.5200)), \n  crs = sf::st_crs(countries)\n)"
  },
  {
    "objectID": "03-concepts-pt2.html#generate-own-simple-features-objects-1",
    "href": "03-concepts-pt2.html#generate-own-simple-features-objects-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Generate Own Simple Features Objects",
    "text": "Generate Own Simple Features Objects\n\nsf_bln <- sf::st_sfc(\n  sf::st_point(c(13.4050, 52.5200)), \n  crs = sf::st_crs(countries)\n)\n\nsf_bln\n\nGeometry set for 1 feature \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 13.405 ymin: 52.52 xmax: 13.405 ymax: 52.52\nCRS:           +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
  },
  {
    "objectID": "03-concepts-pt2.html#spatial-coordinate-reference-systems-3",
    "href": "03-concepts-pt2.html#spatial-coordinate-reference-systems-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Spatial Coordinate (Reference) Systems",
    "text": "Spatial Coordinate (Reference) Systems\n\nggplot() +\n  geom_sf(data = countries, fill = \"grey50\", color = NA) + \n  geom_sf(data = sf_bln, shape = 21, color = \"firebrick\", fill = NA, size = 5, stroke = 2)"
  },
  {
    "objectID": "03-concepts-pt2.html#spatial-coordinate-reference-systems-4",
    "href": "03-concepts-pt2.html#spatial-coordinate-reference-systems-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Spatial Coordinate (Reference) Systems",
    "text": "Spatial Coordinate (Reference) Systems\n\nggplot() +\n  geom_sf(data = countries, fill = \"grey50\", color = NA) + \n  geom_sf(data = sf_bln, shape = 21, color = \"firebrick\", fill = NA, size = 5, stroke = 2) +\n  coord_sf(crs = \"+proj=moll\")"
  },
  {
    "objectID": "03-concepts-pt2.html#spatial-coordinate-reference-systems-5",
    "href": "03-concepts-pt2.html#spatial-coordinate-reference-systems-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Spatial Coordinate (Reference) Systems",
    "text": "Spatial Coordinate (Reference) Systems\n\noceans <- rnaturalearth::ne_download(\n  category = \"physical\", type = \"ocean\", returnclass = \"sf\"\n)"
  },
  {
    "objectID": "03-concepts-pt2.html#spatial-coordinate-reference-systems-6",
    "href": "03-concepts-pt2.html#spatial-coordinate-reference-systems-6",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Spatial Coordinate (Reference) Systems",
    "text": "Spatial Coordinate (Reference) Systems\n\n\nggplot() +\n  geom_sf(\n    data = oceans,\n    fill = \"#d8f1f6\"\n  ) +\n  geom_sf(\n    data = countries,\n    color = \"#79dfbd\",\n    fill = \"#28a87d\",\n    linewidth = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=moll\"\n  ) +\n  theme_void()"
  },
  {
    "objectID": "03-concepts-pt2.html#mapping-of-visual-properties",
    "href": "03-concepts-pt2.html#mapping-of-visual-properties",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Mapping of Visual Properties",
    "text": "Mapping of Visual Properties\n\n\nggplot() +\n  geom_sf(\n    data = oceans,\n    fill = \"#d8f1f6\",\n    color = \"white\"\n  ) +\n  geom_sf(\n    data = countries,\n    aes(fill = economy),\n    color = \"white\",\n    linewidth = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=moll\"\n  ) +\n  scale_fill_viridis_d(option = \"magma\") +\n  theme_void() +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "03-concepts-pt2.html#better-borders",
    "href": "03-concepts-pt2.html#better-borders",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Better Borders",
    "text": "Better Borders\n\n\nborders <- rmapshaper::ms_innerlines(countries)\n\nggplot() +\n  geom_sf(\n    data = oceans,\n    fill = \"#d8f1f6\",\n    color = \"white\"\n  ) +\n  geom_sf(\n    data = countries,\n    aes(fill = economy),\n    color = \"transparent\"\n  ) +\n  geom_sf(\n    data = borders,\n    fill = \"transparent\",\n    color = \"white\",\n    linewidth = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=moll\"\n  ) +\n  scale_fill_viridis_d(option = \"magma\") +\n  theme_void() +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "03-concepts-pt2.html#recap",
    "href": "03-concepts-pt2.html#recap",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Recap",
    "text": "Recap\n\n\n\nfacet_*() functions allow to create small multiples\nscale_*() functions translate between aesthetics and properties\nuse *_continuous() for numerical data\n… and *_discrete() for categorical data\nuse scale_color|fill_*() to customize data-related colors\ncoord_*() functions interpret the positional aesthetics\n\ne.g. create polar plots or work with spatial projections\n\nbe careful when adjusting axis limits:\n\nscale_*_continuous(limits) removes the data outside the range\ncoord_*(*lim) keeps the data and zooms into the range"
  },
  {
    "objectID": "03-concepts-pt2.html#exercise-1-1",
    "href": "03-concepts-pt2.html#exercise-1-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nDownload data set(s) for your home country or study area and plot it/them.\nChange the projection with coord_sf() and observe how the spatial mapping changes.\nChoose a projection that is suited for the given area.\nAdd a marker to indicate your home city, exact location of the study etc."
  },
  {
    "objectID": "03-concepts-pt2.html#exercise-2",
    "href": "03-concepts-pt2.html#exercise-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\n\nHave a look at the following visualization of the cumulative time that cosmo- and astronauts have spent in outer space. The data also contains information on the year of their first and last travel, respectively.\nTogether with your group, discuss which layers and modifications are needed to create such a chart with {ggplot2}.\nNote down the aesthetics, geometries, and scales used for each element of this graphic.\nWhat is the coordinate system? Have any adjustments been made?\nWhich theme was used and how was it modified?"
  },
  {
    "objectID": "03-concepts-pt2.html#exercise-1-2",
    "href": "03-concepts-pt2.html#exercise-1-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nDownload data set(s) for your home country or study area and plot it/them.\nChange the projection with coord_sf() and observe how the spatial mapping changes.\nChoose a projection that is suited for the given area.\nAdd a marker to indicate your home city, exact location of the study etc."
  },
  {
    "objectID": "03-concepts-pt2.html#setup-1",
    "href": "03-concepts-pt2.html#setup-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setup",
    "text": "Setup\n\nlibrary(ggplot2)\nlibrary(sf)\n\ntheme_set(theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\"))\ntheme_update(panel.grid.minor = element_blank())\n\nsf_germany <- rnaturalearth::ne_countries(country = \"Germany\", returnclass = \"sf\")\nsf_germany_hd <- rnaturalearth::ne_countries(country = \"Germany\", scale = 10, returnclass = \"sf\")\n\nclass(sf_germany)\n\n[1] \"sf\"         \"data.frame\""
  },
  {
    "objectID": "03-concepts-pt2.html#plot-the-data",
    "href": "03-concepts-pt2.html#plot-the-data",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Plot the Data",
    "text": "Plot the Data\n\n\n\nggplot(sf_germany) +  \n  geom_sf(fill = \"#CBE7BE\")\n\n\n\n\n\n\nggplot(sf_germany_hd) + \n  geom_sf(fill = \"#CBE7BE\")"
  },
  {
    "objectID": "03-concepts-pt2.html#change-projection",
    "href": "03-concepts-pt2.html#change-projection",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Change Projection",
    "text": "Change Projection\n\nggplot(sf_germany) + \n  geom_sf(fill = \"#CBE7BE\") +\n  coord_sf(crs = \"+proj=lcc +lat_1=48.66 +lat_2=53.66 +lat_0=51 +lon_0=10.5 +ellps=GRS80\")"
  },
  {
    "objectID": "03-concepts-pt2.html#change-projection-1",
    "href": "03-concepts-pt2.html#change-projection-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Change Projection",
    "text": "Change Projection\n\nggplot(sf_germany) + \n  geom_sf(fill = \"#CBE7BE\") +\n  coord_sf(crs = st_crs(5243))"
  },
  {
    "objectID": "03-concepts-pt2.html#change-projection-2",
    "href": "03-concepts-pt2.html#change-projection-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Change Projection",
    "text": "Change Projection\n\nggplot(sf_germany) + \n  geom_sf(fill = \"#CBE7BE\") +\n  coord_sf(crs = \"+proj=moll\")"
  },
  {
    "objectID": "03-concepts-pt2.html#change-projection-3",
    "href": "03-concepts-pt2.html#change-projection-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Change Projection",
    "text": "Change Projection\n\nggplot(sf_germany) + \n  geom_sf(fill = \"#CBE7BE\") +\n  coord_sf(crs = \"+proj=laea +lon_0=-70 +lat_0=0\")"
  },
  {
    "objectID": "03-concepts-pt2.html#generate-locator-object",
    "href": "03-concepts-pt2.html#generate-locator-object",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Generate Locator Object",
    "text": "Generate Locator Object\n\nsf_bln <- sf::st_sfc(\n  sf::st_point(c(13.4050, 52.5200)), \n  crs = sf::st_crs(sf_germany)\n)\n\nsf_bln\n\nGeometry set for 1 feature \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 13.405 ymin: 52.52 xmax: 13.405 ymax: 52.52\nCRS:           +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
  },
  {
    "objectID": "03-concepts-pt2.html#add-location-marker",
    "href": "03-concepts-pt2.html#add-location-marker",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Location Marker",
    "text": "Add Location Marker\n\n\n\nggplot(sf_germany) + \n  geom_sf(fill = \"#CBE7BE\") +\n  geom_sf(data = sf_bln, size = 5) +\n  coord_sf(crs = \"+proj=moll\")\n\n\n\n\n\nggplot(sf_germany) + \n  geom_sf(fill = \"#CBE7BE\") +\n  geom_sf(data = sf_bln, size = 5) +\n  coord_sf(crs = st_crs(5243))"
  },
  {
    "objectID": "03-concepts-pt2.html#data-prep",
    "href": "03-concepts-pt2.html#data-prep",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Data Prep",
    "text": "Data Prep\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\ndf_astro <- readr::read_csv(\n  'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-14/astronauts.csv'\n)\n\ndf_missions <-\n  df_astro %>%\n  group_by(name) %>%\n  summarize(\n    hours = sum(hours_mission),\n    year = min(year_of_mission),\n    max_year = max(year_of_mission)\n  ) %>%\n  ungroup() %>%\n  mutate(year = -year) %>%\n  arrange(year) %>%\n  mutate(id = row_number())"
  },
  {
    "objectID": "03-concepts-pt2.html#code-pt.-1",
    "href": "03-concepts-pt2.html#code-pt.-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Code Pt. 1",
    "text": "Code Pt. 1\n\n# install.packages(\"scico\")\n\ng1 <-\n  ggplot(df_missions, aes(x = id, y = hours, color = hours)\n    ) +\n    ## curves\n    geom_linerange(aes(ymin = 0, ymax = hours, alpha = hours), size = .25) +\n    ## baseline\n    geom_point(aes(y = 0), shape = 15, size = .1, color = \"#808080\") +\n    ## points\n    geom_point(aes(y = hours, size = hours)) +\n    ## turn into circular\n    coord_polar(theta = \"y\", start = 0, clip = \"off\") +\n    ## add axis spacings\n    scale_x_continuous(limits = c(-300, NA), expand = c(0, 0)) +\n    scale_y_continuous(limits = c(0, 23000), expand = c(0, 0)) +\n    ## change colors, transparencies, and bubble sizes\n    scale_color_distiller(palette = \"YlGnBu\", direction = -1) +\n    scale_size(range = c(.001, 3)) +\n    scale_alpha(range = c(.33, .95)) +\n    ## remove all theme components\n    theme_void() +\n    theme(\n      ## set dark background\n      plot.background = element_rect(fill = \"black\"),\n      ## remove \"white\" space\n      plot.margin = margin(-70, -70, -70, -70),\n      ## remove legends\n      legend.position = \"none\"\n    )"
  },
  {
    "objectID": "03-concepts-pt2.html#data-prep-labels",
    "href": "03-concepts-pt2.html#data-prep-labels",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Data Prep Labels",
    "text": "Data Prep Labels\n\ndf_labs <-\n  df_missions %>%\n  filter(year %in% -c(1961, 197:201*10, 2019)) %>%\n  group_by(year) %>%\n  filter(id == min(id))\n\ndf_max <-\n  df_missions %>%\n  arrange(-hours) %>%\n  slice(1) %>%\n  mutate(\n    first_name = stringr::str_remove(name, \".*, \"),\n    last_name = stringr::str_remove(name, \"(?<=),.*\"),\n    label = paste(\"Between\", abs(year), \"and\", max_year, \",\\n\", first_name, last_name, \"has spent\\n\", format(hours, big.mark = ','), \"hours in space.\\nThat's roughly\", round(hours / 24, 0), \"days!\")\n  )"
  },
  {
    "objectID": "03-concepts-pt2.html#code-pt.-2",
    "href": "03-concepts-pt2.html#code-pt.-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Code Pt. 2",
    "text": "Code Pt. 2\n\ng2 <-\n  g1 +\n    ## labels years\n    geom_text(\n      data = df_labs, aes(y = 0, label = abs(year)),\n      family = \"Lato\", fontface = \"bold\", color = \"#808080\",\n      size = 4.5, hjust = 1.2\n    ) +\n    ## label max\n    geom_text(\n      data = df_max, aes(label = label),\n      family = \"Lato\", size = 3.9, vjust = -.35\n    ) +\n    ## title shadow\n    annotate(\n      geom = \"text\", x = -300, y = 0, label = \"Travelling to\\nOuter Space\",\n      family = \"Boska\", fontface = \"bold\", lineheight = .9,\n      size = 20, color = \"white\", hjust = .57, vjust = .45, alpha = .25\n    ) +\n    ## title\n    annotate(\n      geom = \"text\", x = -300, y = 0, label = \"Travelling to\\nOuter Space\",\n      family = \"Boska\", fontface = \"bold\", lineheight = .85,\n      size = 20, color = \"white\", hjust = .55, vjust = .4\n    ) +\n    ## caption\n    labs(caption = \"Cumulative time in outer space for all 565 cosmonauts and astronauts who participated\n    in space missions between April 23, 1961 and January 15, 2020, sorted by the year of their first mission.\n\n    Graphic: Cédric Scherer • Data: Stavnichuk & Corlett 2020 (DOI: 10.17632/86tsnnbv2w.1)\") +\n    ## modify caption + move inside plot area\n    theme(\n      plot.caption = element_text(\n        family = \"Lato\",\n        size = 15, color = \"#808080\", hjust = .5,\n        margin = margin(-100, 0, 100, 0)\n      )\n    )"
  },
  {
    "objectID": "02-concepts-pt1.html#section",
    "href": "02-concepts-pt1.html#section",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "{ggplot2} package description\n\n\n\n{ggplot2} is a system for declaratively creating graphics,based on “The Grammar of Graphics” (Wilkinson, 2005).\n\nYou provide the data, tell {ggplot2} how to map variables to aesthetics,what graphical primitives to use, and it takes care of the details."
  },
  {
    "objectID": "02-concepts-pt1.html#cedric-ggplot-evol-gif",
    "href": "02-concepts-pt1.html#cedric-ggplot-evol-gif",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "cedricscherer.com/2019/05/17/the-evolution-of-a-ggplot"
  },
  {
    "objectID": "02-concepts-pt1.html#advantages-of-ggplot2",
    "href": "02-concepts-pt1.html#advantages-of-ggplot2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Advantages of {ggplot2}",
    "text": "Advantages of {ggplot2}\n\n\nconsistent underlying “grammar of graphics” (Wilkinson 2005)\n\nvery flexible, layered plot specification\n\ntheme system for polishing plot appearance\n\nlots of additional functionality thanks to extensions\n\nactive and helpful community"
  },
  {
    "objectID": "02-concepts-pt1.html#the-ggplot2-package",
    "href": "02-concepts-pt1.html#the-ggplot2-package",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The ggplot2 Package",
    "text": "The ggplot2 Package\n\n… is an R package to visualize data created by Hadley Wickham in 2005\n\n# install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n\n\n… is part of the {tidyverse}\n\n# install.packages(\"tidyverse\")\nlibrary(tidyverse)"
  },
  {
    "objectID": "02-concepts-pt1.html#the-components-of-a-ggplot",
    "href": "02-concepts-pt1.html#the-components-of-a-ggplot",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The Components of a ggplot",
    "text": "The Components of a ggplot\n\n\n\n\n\nComponent\n\n\nFunction\n\n\nExplanation\n\n\n\n\nData\n\n\nggplot(data)         \n\n\nThe raw data that you want to visualize (initializing a plot).\n\n\n\n\nAesthetics          \n\n\naes()\n\n\nThe mapping between variables and visual properties.\n\n\n\nGeometries\n\n\ngeom_*()\n\n\nThe geometric shape of a layer representing the data."
  },
  {
    "objectID": "02-concepts-pt1.html#the-components-of-a-ggplot-1",
    "href": "02-concepts-pt1.html#the-components-of-a-ggplot-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The Components of a ggplot",
    "text": "The Components of a ggplot\n\n\n\n\n\nComponent\n\n\nFunction\n\n\nExplanation\n\n\n\n\nData\n\n\nggplot(data)         \n\n\nThe raw data that you want to visualize (initialising a plot).\n\n\n\n\nAesthetics          \n\n\naes()\n\n\nThe mapping between variables and visual properties.\n\n\n\nGeometries\n\n\ngeom_*()\n\n\nThe geometric shape of a layer representing the data.\n\n\n\n\nStatistics\n\n\nstat_*()\n\n\nThe statistical transformation of a layer applied to the data.\n\n\n\n\nScales\n\n\nscale_*()\n\n\nThe representation of mapped aesthetic attributes.\n\n\n\n\nCoordinate System\n\n\ncoord_*()\n\n\nThe transformation to map data coordinates into the plot plane.\n\n\n\n\nFacets\n\n\nfacet_*()\n\n\nThe arrangement of the data into a set of small multiples.\n\n\n\n\nVisual Themes\n\n\ntheme() | theme_*()\n\n\nThe overall visual defaults of non-data elements of the graphic."
  },
  {
    "objectID": "02-concepts-pt1.html#the-data",
    "href": "02-concepts-pt1.html#the-data",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The Data",
    "text": "The Data\nBike sharing counts in London, UK, powered by TfL Open Data\n\n\ncovers the years 2015 and 2016\nincl. weather data acquired from freemeteo.com\nprepared by Hristo Mavrodiev for Kaggle\nfurther modification by myself\n\n\n\n\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  ## or: \"https://raw.githubusercontent.com/z3tt/graphic-design-ggplot2/main/data/london-bikes-custom.csv\"\n  col_types = \"Dcfffilllddddc\"\n)"
  },
  {
    "objectID": "02-concepts-pt1.html#ggplot2ggplot",
    "href": "02-concepts-pt1.html#ggplot2ggplot",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "ggplot2::ggplot()",
    "text": "ggplot2::ggplot()"
  },
  {
    "objectID": "02-concepts-pt1.html#data",
    "href": "02-concepts-pt1.html#data",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Data",
    "text": "Data\n\n\nggplot(data = bikes)"
  },
  {
    "objectID": "02-concepts-pt1.html#aesthetic-mapping",
    "href": "02-concepts-pt1.html#aesthetic-mapping",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Aesthetic Mapping",
    "text": "Aesthetic Mapping\n\n= link variables to graphical properties\n\n\npositions (x, y)\ncolors (color, fill)\nshapes (shape, linetype)\nsize (size)\ntransparency (alpha)\ngroupings (group)"
  },
  {
    "objectID": "02-concepts-pt1.html#aesthetic-mapping-1",
    "href": "02-concepts-pt1.html#aesthetic-mapping-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Aesthetic Mapping",
    "text": "Aesthetic Mapping\n\n\nggplot(data = bikes) +\n  aes(x = temp, y = count)"
  },
  {
    "objectID": "02-concepts-pt1.html#aesthetics",
    "href": "02-concepts-pt1.html#aesthetics",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "aesthetics",
    "text": "aesthetics\naes() outside as component\n\nggplot(data = bikes) +\n  aes(x = temp, y = count)\n\n\n\naes() inside, explicit matching\n\nggplot(data = bikes, mapping = aes(x = temp, y = count))\n\n\n\n\naes() inside, implicit matching\n\nggplot(bikes, aes(temp, count))\n\n\n\n\naes() inside, mixed matching\n\nggplot(bikes, aes(x = temp, y = count))"
  },
  {
    "objectID": "02-concepts-pt1.html#geometries",
    "href": "02-concepts-pt1.html#geometries",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Geometries",
    "text": "Geometries\n\n= interpret aesthetics as graphical representations\n\n\npoints\nlines\npolygons\ntext labels\n…"
  },
  {
    "objectID": "02-concepts-pt1.html#geometries-1",
    "href": "02-concepts-pt1.html#geometries-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Geometries",
    "text": "Geometries\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point()"
  },
  {
    "objectID": "02-concepts-pt1.html#visual-properties-of-layers",
    "href": "02-concepts-pt1.html#visual-properties-of-layers",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Visual Properties of Layers",
    "text": "Visual Properties of Layers\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    color = \"#28a87d\",\n    alpha = .5,\n    shape = \"X\",\n    stroke = 1,\n    size = 4\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#setting-vs-mapping-of-visual-properties",
    "href": "02-concepts-pt1.html#setting-vs-mapping-of-visual-properties",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setting vs Mapping of Visual Properties",
    "text": "Setting vs Mapping of Visual Properties\n\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    color = \"#28a87d\",\n    alpha = .5\n  )\n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    aes(color = season),\n    alpha = .5\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#mapping-expressions",
    "href": "02-concepts-pt1.html#mapping-expressions",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Mapping Expressions",
    "text": "Mapping Expressions\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    aes(color = temp > 20),\n    alpha = .5\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#your-turn",
    "href": "02-concepts-pt1.html#your-turn",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n\n\nExplore the mpg data set that is contained in {ggplot2}.\nCreate a scatter plot of city miles per gallon vs displacement.\n\nMap the color of the points to the class.\nTurn the points into larger, semi-transparent diamonds.\nNow, use color to indicate if the model is an SUV or not.\nBonus: How could you highlight SUVs and pick-ups together?\nBonus: What if we only want to show data from 2008?"
  },
  {
    "objectID": "02-concepts-pt1.html#mapping-class-to-color",
    "href": "02-concepts-pt1.html#mapping-class-to-color",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Mapping Class to Color",
    "text": "Mapping Class to Color\n\n\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point()"
  },
  {
    "objectID": "02-concepts-pt1.html#mapping-class-to-color-1",
    "href": "02-concepts-pt1.html#mapping-class-to-color-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Mapping Class to Color",
    "text": "Mapping Class to Color\n\n\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(color = class)\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#setting-properties",
    "href": "02-concepts-pt1.html#setting-properties",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setting Properties",
    "text": "Setting Properties\n\n\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(color = class),\n    size = 3,\n    alpha = .3,\n    shape = \"diamond\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#setting-properties-1",
    "href": "02-concepts-pt1.html#setting-properties-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setting Properties",
    "text": "Setting Properties\n\n\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(color = class),\n    size = 3,\n    alpha = .3,\n    shape = 18\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#setting-properties-2",
    "href": "02-concepts-pt1.html#setting-properties-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setting Properties",
    "text": "Setting Properties\n\n\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(color = class),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#setting-properties-3",
    "href": "02-concepts-pt1.html#setting-properties-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setting Properties",
    "text": "Setting Properties\n\n\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(fill = class),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#mapping-expressions-1",
    "href": "02-concepts-pt1.html#mapping-expressions-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Mapping Expressions",
    "text": "Mapping Expressions\n\n\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(fill = class == \"suv\"),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#mapping-expressions-2",
    "href": "02-concepts-pt1.html#mapping-expressions-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Mapping Expressions",
    "text": "Mapping Expressions\n\n\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(fill = class %in% c(\"pickup\", \"suv\")),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#filter-data",
    "href": "02-concepts-pt1.html#filter-data",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Filter Data",
    "text": "Filter Data\n\n\nggplot(\n    dplyr::filter(\n      mpg, year == 2008\n    ), \n    aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(fill = class == \"suv\"),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#filter-data-1",
    "href": "02-concepts-pt1.html#filter-data-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Filter Data",
    "text": "Filter Data\n\n\nmpg %>%\n  dplyr::filter(\n    year == 2008\n  ) %>% \n  ggplot(\n    aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(fill = class == \"suv\"),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#filter-data-2",
    "href": "02-concepts-pt1.html#filter-data-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Filter Data",
    "text": "Filter Data\n\n\nmpg |>\n  dplyr::filter(\n    year == 2008\n  ) |> \n  ggplot(\n    aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(fill = class == \"suv\"),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#histogram",
    "href": "02-concepts-pt1.html#histogram",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Histogram",
    "text": "Histogram\n\n\nggplot(\n    bikes, \n    aes(x = humidity)\n  ) +\n  geom_histogram()"
  },
  {
    "objectID": "02-concepts-pt1.html#histogram-1",
    "href": "02-concepts-pt1.html#histogram-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Histogram",
    "text": "Histogram\n\n\nggplot(\n    bikes, \n    aes(x = humidity)\n  ) +\n  geom_histogram(\n    bins = 100 \n    # binwidth = 1\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#histogram-2",
    "href": "02-concepts-pt1.html#histogram-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Histogram",
    "text": "Histogram\n\n\nggplot(\n    bikes, \n    aes(x = humidity)\n  ) +\n  geom_histogram(\n    aes(fill = day_night)\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#density-curve",
    "href": "02-concepts-pt1.html#density-curve",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Density Curve",
    "text": "Density Curve\n\n\nggplot(\n    bikes, \n    aes(x = humidity)\n  ) +\n  geom_density(\n    aes(color = day_night)\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#density-curve-1",
    "href": "02-concepts-pt1.html#density-curve-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Density Curve",
    "text": "Density Curve\n\n\nggplot(\n    bikes, \n    aes(x = humidity)\n  ) +\n  geom_density(\n    aes(color = day_night,\n        fill = day_night),\n    alpha = .3\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#density-curve-2",
    "href": "02-concepts-pt1.html#density-curve-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Density Curve",
    "text": "Density Curve\n\n\nggplot(\n    bikes, \n    aes(x = humidity)\n  ) +\n  geom_density(\n    aes(color = day_night,\n        fill = day_night),\n    alpha = .3,\n    position = \"stack\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#density-curve-3",
    "href": "02-concepts-pt1.html#density-curve-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Density Curve",
    "text": "Density Curve\n\n\nggplot(\n    bikes, \n    aes(x = humidity)\n  ) +\n  geom_density(\n    aes(color = day_night,\n        fill = day_night),\n    alpha = .3,\n    position = \"fill\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#scatterplot",
    "href": "02-concepts-pt1.html#scatterplot",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Scatterplot",
    "text": "Scatterplot\n\n\nggplot(\n    bikes, \n    aes(x = temp, y = count)\n  ) +\n  geom_point()"
  },
  {
    "objectID": "02-concepts-pt1.html#tile-bins",
    "href": "02-concepts-pt1.html#tile-bins",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Tile Bins",
    "text": "Tile Bins\n\n\nggplot(\n    bikes, \n    aes(x = temp, y = count)\n  ) +\n  geom_bin2d()"
  },
  {
    "objectID": "02-concepts-pt1.html#hexagonal-bins",
    "href": "02-concepts-pt1.html#hexagonal-bins",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Hexagonal Bins",
    "text": "Hexagonal Bins\n\n\nggplot(\n    bikes, \n    aes(x = temp, y = count)\n  ) +\n  geom_hex()"
  },
  {
    "objectID": "02-concepts-pt1.html#density-contours",
    "href": "02-concepts-pt1.html#density-contours",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Density Contours",
    "text": "Density Contours\n\n\nggplot(\n    bikes, \n    aes(x = temp, y = count)\n  ) +\n  geom_density2d()"
  },
  {
    "objectID": "02-concepts-pt1.html#density-contours-1",
    "href": "02-concepts-pt1.html#density-contours-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Density Contours",
    "text": "Density Contours\n\n\nggplot(\n    bikes, \n    aes(x = temp, y = count)\n  ) +\n  geom_density2d(\n    aes(color = day_night)\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#density-contours-2",
    "href": "02-concepts-pt1.html#density-contours-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Density Contours",
    "text": "Density Contours\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_density2d_filled()"
  },
  {
    "objectID": "02-concepts-pt1.html#local-vs.-global-encoding-1",
    "href": "02-concepts-pt1.html#local-vs.-global-encoding-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Local vs. Global Encoding",
    "text": "Local vs. Global Encoding\n\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    aes(color = season),\n    alpha = .5\n  )\n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .5\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#adding-more-layers",
    "href": "02-concepts-pt1.html#adding-more-layers",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Adding More Layers",
    "text": "Adding More Layers\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#global-color-encoding",
    "href": "02-concepts-pt1.html#global-color-encoding",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Global Color Encoding",
    "text": "Global Color Encoding\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#local-color-encoding",
    "href": "02-concepts-pt1.html#local-color-encoding",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Local Color Encoding",
    "text": "Local Color Encoding\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    aes(color = season),\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#the-group-aesthetic",
    "href": "02-concepts-pt1.html#the-group-aesthetic",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The `group` Aesthetic",
    "text": "The `group` Aesthetic\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    aes(color = season),\n    alpha = .5\n  ) +\n  geom_smooth(\n    aes(group = day_night),\n    method = \"lm\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#set-both-as-global-aesthetics",
    "href": "02-concepts-pt1.html#set-both-as-global-aesthetics",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Set Both as Global Aesthetics",
    "text": "Set Both as Global Aesthetics\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season,\n        group = day_night)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#overwrite-global-aesthetics",
    "href": "02-concepts-pt1.html#overwrite-global-aesthetics",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Overwrite Global Aesthetics",
    "text": "Overwrite Global Aesthetics\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season,\n        group = day_night)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\",\n    color = \"black\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#stat_-and-geom_",
    "href": "02-concepts-pt1.html#stat_-and-geom_",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`stat_` and `geom_`",
    "text": "`stat_` and `geom_`\n\n\n\nggplot(bikes, aes(x = date, y = temp)) +\n  geom_point(stat = \"identity\") # default\n\n\n\n\n\n\nggplot(bikes, aes(x = date, y = temp)) +\n  stat_identity(geom = \"point\") # default"
  },
  {
    "objectID": "02-concepts-pt1.html#stat_-and-geom_-1",
    "href": "02-concepts-pt1.html#stat_-and-geom_-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`stat_` and `geom_`",
    "text": "`stat_` and `geom_`\n\n\n\nggplot(bikes, aes(x = weather_type)) +\n  geom_bar(stat = \"count\") # default\n\n\n\n\n\nggplot(bikes, aes(x = weather_type)) +\n  stat_count(geom = \"bar\") # default"
  },
  {
    "objectID": "02-concepts-pt1.html#stat_-and-geom_-2",
    "href": "02-concepts-pt1.html#stat_-and-geom_-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`stat_` and `geom_`",
    "text": "`stat_` and `geom_`\n\n\n\nggplot(bikes, aes(x = temp, y = count)) +\n  geom_smooth(stat = \"smooth\") # default\n\n\n\n\n\nggplot(bikes, aes(x = temp, y = count)) +\n  stat_smooth(geom = \"smooth\") # default"
  },
  {
    "objectID": "02-concepts-pt1.html#statistical-summaries",
    "href": "02-concepts-pt1.html#statistical-summaries",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Statistical Summaries",
    "text": "Statistical Summaries\n\n\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary()"
  },
  {
    "objectID": "02-concepts-pt1.html#statistical-summaries-1",
    "href": "02-concepts-pt1.html#statistical-summaries-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Statistical Summaries",
    "text": "Statistical Summaries\n\n\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    fun.data = mean_se, # default\n    geom = \"pointrange\"  # default\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#statistical-summaries-2",
    "href": "02-concepts-pt1.html#statistical-summaries-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Statistical Summaries",
    "text": "Statistical Summaries\n\n\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  geom_boxplot() +\n  stat_summary(\n    fun = mean,\n    geom = \"point\",\n    color = \"#28a87d\",\n    size = 3\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#statistical-summaries-3",
    "href": "02-concepts-pt1.html#statistical-summaries-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Statistical Summaries",
    "text": "Statistical Summaries\n\n\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    fun = mean, \n    fun.max = function(y) mean(y) + sd(y), \n    fun.min = function(y) mean(y) - sd(y) \n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#statistical-summaries-4",
    "href": "02-concepts-pt1.html#statistical-summaries-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Statistical Summaries",
    "text": "Statistical Summaries\n\n\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    fun = mean, \n    fun.max = function(foo) mean(foo) + sd(foo), \n    fun.min = function(foo) mean(foo) - sd(foo)\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#statistical-summaries-5",
    "href": "02-concepts-pt1.html#statistical-summaries-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Statistical Summaries",
    "text": "Statistical Summaries\n\n\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    fun.data = mean_sdl, \n    fun.args = list(mult = 1)\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#statistical-summaries-6",
    "href": "02-concepts-pt1.html#statistical-summaries-6",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Statistical Summaries",
    "text": "Statistical Summaries\n\n\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    geom = \"errorbar\", \n    fun.max = function(y) mean(y) + sd(y), \n    fun.min = function(y) mean(y) - sd(y),\n    width = .3\n  ) +\n  stat_summary(\n    geom = \"point\",\n    fun = mean,\n    size = 2\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#statistical-summaries-7",
    "href": "02-concepts-pt1.html#statistical-summaries-7",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Statistical Summaries",
    "text": "Statistical Summaries\n\n\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    geom = \"errorbar\", \n    fun.max = function(y) mean(y) + sd(y), \n    fun.min = function(y) mean(y) - sd(y),\n    width = .3\n  ) +\n  stat_summary(\n    geom = \"point\",\n    fun = mean,\n    size = 2\n  ) +\n  stat_summary(\n    geom = \"text\",\n    fun = mean,\n    aes(label = after_stat(y))\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#statistical-summaries-8",
    "href": "02-concepts-pt1.html#statistical-summaries-8",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Statistical Summaries",
    "text": "Statistical Summaries\n\n\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    geom = \"errorbar\", \n    fun.max = function(y) mean(y) + sd(y), \n    fun.min = function(y) mean(y) - sd(y),\n    width = .3\n  ) +\n  stat_summary(\n    geom = \"point\",\n    fun = mean,\n    size = 2\n  ) +\n  stat_summary(\n    geom = \"text\",\n    fun = mean,\n    aes(label = after_stat(\n      sprintf(\"%2.1f\", y)\n    )),\n    hjust = -.3\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#statistical-summaries-9",
    "href": "02-concepts-pt1.html#statistical-summaries-9",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Statistical Summaries",
    "text": "Statistical Summaries\n\n\nggplot(\n    bikes, \n    aes(x = season,  \n        y = weather_type, \n        z = count)\n  ) +\n  stat_summary_2d()"
  },
  {
    "objectID": "02-concepts-pt1.html#statistical-summaries-10",
    "href": "02-concepts-pt1.html#statistical-summaries-10",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Statistical Summaries",
    "text": "Statistical Summaries\n\n\nggplot(\n    bikes, \n    aes(x = season,  \n        y = weather_type, \n        z = count)\n  ) +\n  stat_summary_2d(\n    geom = \"tile\", \n    fun = \"sum\", \n    color = \"white\", \n    linewidth = .7\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#store-a-ggplot-as-object",
    "href": "02-concepts-pt1.html#store-a-ggplot-as-object",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Store a ggplot as Object",
    "text": "Store a ggplot as Object\n\ng <-\n  ggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season,\n        group = day_night)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\",\n    color = \"black\"\n  )\n\nclass(g)\n\n[1] \"gg\"     \"ggplot\""
  },
  {
    "objectID": "02-concepts-pt1.html#inspect-a-ggplot-object",
    "href": "02-concepts-pt1.html#inspect-a-ggplot-object",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Inspect a ggplot Object",
    "text": "Inspect a ggplot Object\n\ng$data\n\n# A tibble: 1,454 × 14\n   date       day_night year  month season count is_workday is_weekend is_holiday  temp temp_feel humidity wind_speed weather_type    \n   <date>     <chr>     <fct> <fct> <fct>  <int> <lgl>      <lgl>      <lgl>      <dbl>     <dbl>    <dbl>      <dbl> <chr>           \n 1 2015-01-04 day       2015  1     winter  6830 FALSE      TRUE       FALSE       2.17     -0.75     95.2      10.4  broken clouds   \n 2 2015-01-04 night     2015  1     winter  2404 FALSE      TRUE       FALSE       2.79      2.04     93.4       4.58 clear           \n 3 2015-01-05 day       2015  1     winter 14763 TRUE       FALSE      FALSE       8.96      7.71     81.1       8.67 broken clouds   \n 4 2015-01-05 night     2015  1     winter  5609 TRUE       FALSE      FALSE       7.12      5.71     79.5       9.04 cloudy          \n 5 2015-01-06 day       2015  1     winter 14501 TRUE       FALSE      FALSE       9         6.46     80.2      19.2  broken clouds   \n 6 2015-01-06 night     2015  1     winter  6112 TRUE       FALSE      FALSE       6.71      4.21     77.6      12.8  clear           \n 7 2015-01-07 day       2015  1     winter 16358 TRUE       FALSE      FALSE       8.17      5.08     75.2      21.2  scattered clouds\n 8 2015-01-07 night     2015  1     winter  4706 TRUE       FALSE      FALSE       6.68      3.86     81.3      18.1  clear           \n 9 2015-01-08 day       2015  1     winter  9971 TRUE       FALSE      FALSE       9.46      7.12     79.4      18.8  scattered clouds\n10 2015-01-08 night     2015  1     winter  5630 TRUE       FALSE      FALSE      10.0       8.46     79.2      22.2  clear           \n# ℹ 1,444 more rows"
  },
  {
    "objectID": "02-concepts-pt1.html#inspect-a-ggplot-object-1",
    "href": "02-concepts-pt1.html#inspect-a-ggplot-object-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Inspect a ggplot Object",
    "text": "Inspect a ggplot Object\n\ng$mapping\n\nAesthetic mapping: \n* `x`      -> `temp`\n* `y`      -> `count`\n* `colour` -> `season`\n* `group`  -> `day_night`"
  },
  {
    "objectID": "02-concepts-pt1.html#extend-a-ggplot-object-add-layers",
    "href": "02-concepts-pt1.html#extend-a-ggplot-object-add-layers",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Extend a ggplot Object: Add Layers",
    "text": "Extend a ggplot Object: Add Layers\n\n\ng +\n  geom_rug(\n    alpha = .2\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#remove-a-layer-from-the-legend",
    "href": "02-concepts-pt1.html#remove-a-layer-from-the-legend",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Remove a Layer from the Legend",
    "text": "Remove a Layer from the Legend\n\n\ng +\n  geom_rug(\n    alpha = .2,\n    show.legend = FALSE\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#extend-a-ggplot-object-add-labels",
    "href": "02-concepts-pt1.html#extend-a-ggplot-object-add-labels",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Extend a ggplot Object: Add Labels",
    "text": "Extend a ggplot Object: Add Labels\n\n\ng +\n  xlab(\"Temperature (°C)\") +\n  ylab(\"Reported bike shares\") +\n  ggtitle(\"TfL bike sharing trends\")"
  },
  {
    "objectID": "02-concepts-pt1.html#extend-a-ggplot-object-add-labels-1",
    "href": "02-concepts-pt1.html#extend-a-ggplot-object-add-labels-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Extend a ggplot Object: Add Labels",
    "text": "Extend a ggplot Object: Add Labels\n\n\ng +\n  labs(\n    x = \"Temperature (°C)\",\n    y = \"Reported bike shares\",\n    title = \"TfL bike sharing trends\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#extend-a-ggplot-object-add-labels-2",
    "href": "02-concepts-pt1.html#extend-a-ggplot-object-add-labels-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Extend a ggplot Object: Add Labels",
    "text": "Extend a ggplot Object: Add Labels\n\n\ng <- g +\n  labs(\n    x = \"Temperature (°C)\",\n    y = \"Reported bike shares\",\n    title = \"TfL bike sharing trends\",\n    color = \"Season:\"\n  )\n\ng"
  },
  {
    "objectID": "02-concepts-pt1.html#extend-a-ggplot-object-add-labels-3",
    "href": "02-concepts-pt1.html#extend-a-ggplot-object-add-labels-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Extend a ggplot Object: Add Labels",
    "text": "Extend a ggplot Object: Add Labels\n\n\ng +\n  labs(\n    x = \"Temperature (°C)\",\n    y = \"Reported bike shares\",\n    title = \"TfL bike sharing trends\",\n    subtitle = \"Reported bike rents versus temperature in London\",\n    caption = \"Data: TfL\",\n    color = \"Season:\",\n    tag = \"Fig. 1\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#extend-a-ggplot-object-add-labels-4",
    "href": "02-concepts-pt1.html#extend-a-ggplot-object-add-labels-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Extend a ggplot Object: Add Labels",
    "text": "Extend a ggplot Object: Add Labels\n\n\n\ng +\n  labs(\n    x = \"\",\n    caption = \"Data: TfL\"\n  )\n\n\n\n\n\ng +\n  labs(\n    x = NULL,\n    caption = \"Data: TfL\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#extend-a-ggplot-object-themes",
    "href": "02-concepts-pt1.html#extend-a-ggplot-object-themes",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Extend a ggplot Object: Themes",
    "text": "Extend a ggplot Object: Themes\n\n\n\ng + theme_light()\n\n\n\n\n\n\ng + theme_minimal()"
  },
  {
    "objectID": "02-concepts-pt1.html#change-the-theme-base-settings",
    "href": "02-concepts-pt1.html#change-the-theme-base-settings",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Change the Theme Base Settings",
    "text": "Change the Theme Base Settings\n\n\ng + theme_light(\n  base_size = 14,\n  base_family = \"Asap SemiCondensed\"\n)"
  },
  {
    "objectID": "02-concepts-pt1.html#set-a-theme-globally",
    "href": "02-concepts-pt1.html#set-a-theme-globally",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Set a Theme Globally",
    "text": "Set a Theme Globally\n\n\ntheme_set(theme_light())\n\ng"
  },
  {
    "objectID": "02-concepts-pt1.html#change-the-theme-base-settings-1",
    "href": "02-concepts-pt1.html#change-the-theme-base-settings-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Change the Theme Base Settings",
    "text": "Change the Theme Base Settings\n\n\ntheme_set(theme_light(\n  base_size = 14,\n  base_family = \"Asap SemiCondensed\"\n))\n\ng"
  },
  {
    "objectID": "02-concepts-pt1.html#the-systemfonts-package",
    "href": "02-concepts-pt1.html#the-systemfonts-package",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The {systemfonts} Package",
    "text": "The {systemfonts} Package\nlocates installed fonts and provides font-related utilities to graphic devices \n\n\nlibrary(systemfonts)\n\n\n\n\nmatch_font(\"Asap\", bold = TRUE)\n\n$path\n[1] \"/Users/cedric/Library/Fonts/FontBase/Asap-Bold.ttf\"\n\n$index\n[1] 0\n\n$features\nNULL"
  },
  {
    "objectID": "02-concepts-pt1.html#use-non-default-typefaces",
    "href": "02-concepts-pt1.html#use-non-default-typefaces",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Use Non-Default Typefaces",
    "text": "Use Non-Default Typefaces\n\nsystem_fonts()\n\n# A tibble: 16,691 × 9\n   path                                                                     index name                                family style weight width italic monospace\n   <chr>                                                                    <int> <chr>                               <chr>  <chr> <ord>  <ord> <lgl>  <lgl>    \n 1 /Users/cedric/Library/Fonts/FontBase/IntroHeadR-Base.otf                     0 IntroHeadR-Base                     Intro… Base  normal norm… FALSE  FALSE    \n 2 /Users/cedric/Library/Fonts/Moniqa-ThinItalicHeading.otf                     0 Moniqa-ThinItalicHeading            Moniqa Thin… ultra… norm… TRUE   FALSE    \n 3 /Users/cedric/Library/Fonts/ArimoNerdFontPropo-Italic.ttf                    0 ArimoNFP-Italic                     Arimo… Ital… normal norm… TRUE   FALSE    \n 4 /Users/cedric/Library/Fonts/iosevka-ss02.ttc                                72 Iosevka-SS02-Medium                 Iosev… Medi… medium norm… FALSE  TRUE     \n 5 /System/Library/Fonts/Supplemental/Bangla MN.ttc                             0 BanglaMN                            Bangl… Regu… normal norm… FALSE  FALSE    \n 6 /Users/cedric/Library/Fonts/iosevka-ss01-extrabold.ttc                      17 Iosevka-Fixed-SS01-Extrabold-Exten… Iosev… Extr… ultra… norm… TRUE   TRUE     \n 7 /Users/cedric/Library/Fonts/Anybody-ExtraExpandedExtraLight.otf              0 Anybody-ExtraExpandedExtraLight     Anybo… Extr… light  semi… FALSE  FALSE    \n 8 /Users/cedric/Library/Fonts/Neutraface Text Demi Alt.ttf                     0 NeutrafaceText-DemiAlt              Neutr… Regu… semib… norm… FALSE  FALSE    \n 9 /Users/cedric/Library/Fonts/PlusJakartaSans-Italic-VariableFont_wght.ttf     1 PlusJakartaSansItalic-Light         Plus … Ligh… normal norm… TRUE   FALSE    \n10 /Users/cedric/Library/Fonts/aleo-italic-webfont.ttf                          0 Aleo-Italic                         Aleo   Ital… normal norm… TRUE   FALSE    \n# ℹ 16,681 more rows"
  },
  {
    "objectID": "02-concepts-pt1.html#use-non-default-typefaces-1",
    "href": "02-concepts-pt1.html#use-non-default-typefaces-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Use Non-Default Typefaces",
    "text": "Use Non-Default Typefaces\n\nsystem_fonts() |>\n  dplyr::filter(stringr::str_detect(family, \"Asap\")) |>\n  dplyr::select(family) |>\n  unique() |> \n  dplyr::arrange(family)\n\n# A tibble: 5 × 1\n  family            \n  <chr>             \n1 Asap              \n2 Asap Condensed    \n3 Asap Expanded     \n4 Asap SemiCondensed\n5 Asap SemiExpanded"
  },
  {
    "objectID": "02-concepts-pt1.html#use-non-default-typefaces-2",
    "href": "02-concepts-pt1.html#use-non-default-typefaces-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Use Non-Default Typefaces",
    "text": "Use Non-Default Typefaces\n\n\ng +\n  theme_minimal(\n    base_family = \"Asap SemiCondensed\",\n    base_size = 13\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#use-font-features",
    "href": "02-concepts-pt1.html#use-font-features",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Use Font Features",
    "text": "Use Font Features\n\nsystem_fonts() |>\n  dplyr::filter(family == \"Asap SemiCondensed\") |>\n  dplyr::select(name) |>\n  dplyr::arrange(name)\n\n# A tibble: 18 × 1\n   name                              \n   <chr>                             \n 1 AsapSemiCondensed-Black           \n 2 AsapSemiCondensed-BlackItalic     \n 3 AsapSemiCondensed-Bold            \n 4 AsapSemiCondensed-BoldItalic      \n 5 AsapSemiCondensed-ExtraBold       \n 6 AsapSemiCondensed-ExtraBoldItalic \n 7 AsapSemiCondensed-ExtraLight      \n 8 AsapSemiCondensed-ExtraLightItalic\n 9 AsapSemiCondensed-Italic          \n10 AsapSemiCondensed-Light           \n11 AsapSemiCondensed-LightItalic     \n12 AsapSemiCondensed-Medium          \n13 AsapSemiCondensed-MediumItalic    \n14 AsapSemiCondensed-Regular         \n15 AsapSemiCondensed-SemiBold        \n16 AsapSemiCondensed-SemiBoldItalic  \n17 AsapSemiCondensed-Thin            \n18 AsapSemiCondensed-ThinItalic"
  },
  {
    "objectID": "02-concepts-pt1.html#use-font-features-1",
    "href": "02-concepts-pt1.html#use-font-features-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Use Font Features",
    "text": "Use Font Features\n\nregister_variant(\n  name = \"Asap SemiCondensed Semibold S1\",\n  family = \"Asap SemiCondensed\",\n  weight = \"semibold\",\n  features = font_feature(letters = \"stylistic\")\n)"
  },
  {
    "objectID": "02-concepts-pt1.html#use-font-features-2",
    "href": "02-concepts-pt1.html#use-font-features-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Use Font Features",
    "text": "Use Font Features\n\n\ng + \n  theme_minimal(\n    base_family = \"Asap SemiCondensed Semibold S1\",\n    base_size = 13\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#use-font-features-3",
    "href": "02-concepts-pt1.html#use-font-features-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Use Font Features",
    "text": "Use Font Features"
  },
  {
    "objectID": "02-concepts-pt1.html#use-font-features-4",
    "href": "02-concepts-pt1.html#use-font-features-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Use Font Features",
    "text": "Use Font Features\n\nregister_variant(\n  name = \"Spline Sans Tabular\",\n  family = \"Spline Sans\",\n  weight = \"normal\",\n  features = font_feature(numbers = \"tabular\")\n)"
  },
  {
    "objectID": "02-concepts-pt1.html#use-font-features-5",
    "href": "02-concepts-pt1.html#use-font-features-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Use Font Features",
    "text": "Use Font Features"
  },
  {
    "objectID": "02-concepts-pt1.html#overwrite-specific-theme-settings",
    "href": "02-concepts-pt1.html#overwrite-specific-theme-settings",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Overwrite Specific Theme Settings",
    "text": "Overwrite Specific Theme Settings\n\n\ng +\n  theme(\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#overwrite-specific-theme-settings-1",
    "href": "02-concepts-pt1.html#overwrite-specific-theme-settings-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Overwrite Specific Theme Settings",
    "text": "Overwrite Specific Theme Settings\n\n\ng +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\")\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#overwrite-specific-theme-settings-2",
    "href": "02-concepts-pt1.html#overwrite-specific-theme-settings-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Overwrite Specific Theme Settings",
    "text": "Overwrite Specific Theme Settings\n\n\ng +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    legend.position = \"top\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#overwrite-specific-theme-settings-3",
    "href": "02-concepts-pt1.html#overwrite-specific-theme-settings-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Overwrite Specific Theme Settings",
    "text": "Overwrite Specific Theme Settings\n\n\ng +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    legend.position = \"none\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#overwrite-specific-theme-settings-4",
    "href": "02-concepts-pt1.html#overwrite-specific-theme-settings-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Overwrite Specific Theme Settings",
    "text": "Overwrite Specific Theme Settings\n\n\ng +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    legend.position = \"top\",\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#overwrite-theme-settings-globally",
    "href": "02-concepts-pt1.html#overwrite-theme-settings-globally",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Overwrite Theme Settings Globally",
    "text": "Overwrite Theme Settings Globally\n\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  legend.position = \"top\",\n  plot.title.position = \"plot\"\n)\n\ng"
  },
  {
    "objectID": "02-concepts-pt1.html#save-the-graphic",
    "href": "02-concepts-pt1.html#save-the-graphic",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Save the Graphic",
    "text": "Save the Graphic\n\n\nggsave(filename = \"my_plot.png\", plot = g)\n\n\n\nggsave(\"my_plot.png\")\n\n\n\n\n\nggsave(\"my_plot.png\", width = 6, height = 5, dpi = 600)"
  },
  {
    "objectID": "02-concepts-pt1.html#plot-resolution",
    "href": "02-concepts-pt1.html#plot-resolution",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Plot Resolution",
    "text": "Plot Resolution"
  },
  {
    "objectID": "02-concepts-pt1.html#plot-resolution-1",
    "href": "02-concepts-pt1.html#plot-resolution-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Plot Resolution",
    "text": "Plot Resolution"
  },
  {
    "objectID": "02-concepts-pt1.html#save-the-graphic-1",
    "href": "02-concepts-pt1.html#save-the-graphic-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Save the Graphic",
    "text": "Save the Graphic\n\n\nggsave(filename = \"my_plot.png\", plot = g)\n\n\nggsave(\"my_plot.png\")\n\n\n\nggsave(\"my_plot.png\", width = 6, height = 5, dpi = 600)\n\n\n\nggsave(\"my_plot.png\", width = 6*2.54, height = 5*2.54, unit = \"cm\", dpi = 600)\n\n\n\n\n\nggsave(\"my_plot.png\", device = agg_png)\n\n\n\n\nggsave(\"my_plot.pdf\", device = cairo_pdf)"
  },
  {
    "objectID": "02-concepts-pt1.html#the-ragg-package",
    "href": "02-concepts-pt1.html#the-ragg-package",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The {ragg} Package",
    "text": "The {ragg} Package\nprovides drop-in replacements for the default raster graphic devices\n\n\nfaster\ndirect access to all system fonts\nadvanced text rendering\n\nincluding support for right-to-left text, emojis, and font fallback\n\nhigh quality anti-aliasing\nhigh quality rotated text\nsupports 16-bit output\nsystem independent rendering"
  },
  {
    "objectID": "02-concepts-pt1.html#the-ragg-package-1",
    "href": "02-concepts-pt1.html#the-ragg-package-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The {ragg} Package",
    "text": "The {ragg} Package\n\n\nSource: tidyverse.org/blog/2021/02/modern-text-features"
  },
  {
    "objectID": "02-concepts-pt1.html#the-ragg-package-2",
    "href": "02-concepts-pt1.html#the-ragg-package-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The {ragg} Package",
    "text": "The {ragg} Package\n\n\nSource: tidyverse.org/blog/2021/02/modern-text-features"
  },
  {
    "objectID": "02-concepts-pt1.html#the-ragg-package-3",
    "href": "02-concepts-pt1.html#the-ragg-package-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The {ragg} Package",
    "text": "The {ragg} Package\n\n\nSource: tidyverse.org/blog/2021/02/modern-text-features"
  },
  {
    "objectID": "02-concepts-pt1.html#the-ragg-package-4",
    "href": "02-concepts-pt1.html#the-ragg-package-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The {ragg} Package",
    "text": "The {ragg} Package\n\n\nSource: tidyverse.org/blog/2021/02/modern-text-features"
  },
  {
    "objectID": "02-concepts-pt1.html#the-ragg-package-5",
    "href": "02-concepts-pt1.html#the-ragg-package-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The {ragg} Package",
    "text": "The {ragg} Package\n\n\nuse {ragg} when saving ggplots by passing agg device function: ggsave(device = agg_png)) (used by default if installed)\nuse {ragg} in the Rstudio Plots pane be setting the backend to AGG: \nuse {ragg} when knitting Rmarkdown files by setting dev=\"ragg_png\" in the code chunk options."
  },
  {
    "objectID": "02-concepts-pt1.html#save-the-graphic-2",
    "href": "02-concepts-pt1.html#save-the-graphic-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Save the Graphic",
    "text": "Save the Graphic\n\n\nggsave(filename = \"my_plot.png\", plot = g)\n\n\nggsave(\"my_plot.png\")\n\n\n\nggsave(\"my_plot.png\", width = 6, height = 5, dpi = 600)\n\n\nggsave(\"my_plot.png\", width = 6*2.54, height = 5*2.54, unit = \"cm\", dpi = 600)\n\n\n\nggsave(\"my_plot.png\", device = agg_png)\n\n\nggsave(\"my_plot.pdf\", device = cairo_pdf)\n\n\n\nggsave(\"my_plot.svg\")"
  },
  {
    "objectID": "02-concepts-pt1.html#how-to-work-with-aspect-ratios",
    "href": "02-concepts-pt1.html#how-to-work-with-aspect-ratios",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "How to Work with Aspect Ratios",
    "text": "How to Work with Aspect Ratios\n\n\ndon’t rely on the Rstudio viewer pane!\nonce you have a “it’s getting close” prototype, settle on a plot size\nApproach 1: save the file and inspect it—go back to your IDE—repeat\n\ntedious and time-consuming…\n\nApproach 2: use a qmd or rmd with inline output and chunk settings\n\nset fig-width / fig.width and fig-height / fig.heightper chunk or globally"
  },
  {
    "objectID": "02-concepts-pt1.html#setting-plot-sizes-in-quarto-and-rmarkdown",
    "href": "02-concepts-pt1.html#setting-plot-sizes-in-quarto-and-rmarkdown",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setting Plot Sizes in Quarto and Rmarkdown",
    "text": "Setting Plot Sizes in Quarto and Rmarkdown"
  },
  {
    "objectID": "02-concepts-pt1.html#setting-plot-sizes-in-quarto-and-rmarkdown-1",
    "href": "02-concepts-pt1.html#setting-plot-sizes-in-quarto-and-rmarkdown-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setting Plot Sizes in Quarto and Rmarkdown",
    "text": "Setting Plot Sizes in Quarto and Rmarkdown"
  },
  {
    "objectID": "02-concepts-pt1.html#how-to-work-with-aspect-ratios-1",
    "href": "02-concepts-pt1.html#how-to-work-with-aspect-ratios-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "How to Work with Aspect Ratios",
    "text": "How to Work with Aspect Ratios\n\ndon’t rely on the Rstudio viewer pane!\nonce you have a “it’s getting close” prototype, settle on a plot size\nApproach 1: save the file and inspect it—go back to your IDE—repeat\n\ntedious and time-consuming…\n\nApproach 2: use a qmd or rmd with inline output and chunk settings\n\nset fig-width / fig.width and fig-height / fig.heightper chunk or globally\n\nApproach 3: use our {camcorder} package\n\nsaves output from all ggplot() calls and displays it in the viewer pane"
  },
  {
    "objectID": "02-concepts-pt1.html#setting-plot-sizes-via-camcorder",
    "href": "02-concepts-pt1.html#setting-plot-sizes-via-camcorder",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setting Plot Sizes via {camcorder}",
    "text": "Setting Plot Sizes via {camcorder}"
  },
  {
    "objectID": "02-concepts-pt1.html#setting-plot-sizes-via-camcorder-1",
    "href": "02-concepts-pt1.html#setting-plot-sizes-via-camcorder-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setting Plot Sizes via {camcorder}",
    "text": "Setting Plot Sizes via {camcorder}"
  },
  {
    "objectID": "02-concepts-pt1.html#setting-plot-sizes-via-camcorder-2",
    "href": "02-concepts-pt1.html#setting-plot-sizes-via-camcorder-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setting Plot Sizes via {camcorder}",
    "text": "Setting Plot Sizes via {camcorder}\n\ncamcorder::gg_record(\n  dir = here::here(\"temp\"),  # path for plot files\n  device = \"png\",            # device to use\n  width = 10,                # figure width\n  height = 5,                # figure height\n  dpi = 600                  # plot resolution\n)\n\ng <- ggplot(bikes, aes(x = temp, y = count, color = day_night)) +\n  geom_point(alpha = .3, size = 2) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(panel.grid.minor = element_blank())\n\ng"
  },
  {
    "objectID": "02-concepts-pt1.html#setting-plot-sizes-via-camcorder-3",
    "href": "02-concepts-pt1.html#setting-plot-sizes-via-camcorder-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setting Plot Sizes via {camcorder}",
    "text": "Setting Plot Sizes via {camcorder}\n\ncamcorder::gg_record(\n  dir = here::here(\"temp\"),  # path for plot files\n  device = \"png\",            # device to use\n  width = 10,                # figure width\n  height = 5,                # figure height\n  dpi = 600                  # plot resolution\n)\n\ng <- ggplot(bikes, aes(x = temp, y = count, color = day_night)) +\n  geom_point(alpha = .3, size = 2) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(panel.grid.minor = element_blank())\n\ng\n\ncamcorder::gg_resize_film(width = 20) # update figure width\n\ng"
  },
  {
    "objectID": "02-concepts-pt1.html#recap",
    "href": "02-concepts-pt1.html#recap",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Recap",
    "text": "Recap\n\n\n\n{ggplot2} is a powerful library for reproducible graphic design\nthe components follow a consistent syntax\neach ggplot needs at least data, some aesthetics, and a layer\nwe set constant propeties outside aes()\n… and map data-related properties inside aes()\nlocal settings and mappings override global properties\ngrouping allows applying layers for subsets\nwe can store a ggplot object and extend it afterwards\nwe can change the appearance for all plots with theme_set()and theme_update()"
  },
  {
    "objectID": "02-concepts-pt1.html#exercise-1",
    "href": "02-concepts-pt1.html#exercise-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nExplore the TfL bike share data visually:create a timeseries of reported bike shares on weekend days\n\nHighlight day and night encoded by colors and shapes.\nConnect the points of each period with lines.\n\nWhat is the difference between geom_line() and geom_path()?\n\nApply your favorite theme to the plot.\nAdd meaningful labels.\n\nSave the plot as a vector graphic with a decent plot size."
  },
  {
    "objectID": "02-concepts-pt1.html#exercise-2",
    "href": "02-concepts-pt1.html#exercise-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nExplore the TfL bike sharing data visually:create a boxplot of counts per weather type\n\nTurn the plot into a jitter strips plot (random noise across the x axis)\nCombine both chart types (jittered points on top of the boxplots)\nBonus: Sort the boxplot-jitter hybrid by median counts\nApply your favorite theme to the plot.\nAdd meaningful labels.\nBonus: Explore other chart types to visualize the distributions.\n\nSave the plot as a vector graphic with a decent plot size."
  },
  {
    "objectID": "02-concepts-pt1.html#exercise-1-1",
    "href": "02-concepts-pt1.html#exercise-1-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nExplore the TfL bike share data visually:create a timeseries of reported bike shares on weekend days\n\nHighlight day and night encoded by colors and shapes.\nConnect the points of each period with lines.\n\nWhat is the difference between geom_line() and geom_path()?\n\nApply your favorite theme to the plot.\nAdd meaningful labels.\nBonus: use shape to encode Saturday vs Sunday instead.\n\nSave the plot as a vector graphic with a decent plot size."
  },
  {
    "objectID": "02-concepts-pt1.html#import-the-data-set",
    "href": "02-concepts-pt1.html#import-the-data-set",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Import the Data Set",
    "text": "Import the Data Set\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)"
  },
  {
    "objectID": "02-concepts-pt1.html#scatterplot-counts-vs.-date",
    "href": "02-concepts-pt1.html#scatterplot-counts-vs.-date",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Scatterplot Counts vs. Date",
    "text": "Scatterplot Counts vs. Date\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point()"
  },
  {
    "objectID": "02-concepts-pt1.html#encode-day-period-by-colors-and-shapes",
    "href": "02-concepts-pt1.html#encode-day-period-by-colors-and-shapes",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Encode Day Period by Colors and Shapes",
    "text": "Encode Day Period by Colors and Shapes\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#add-line",
    "href": "02-concepts-pt1.html#add-line",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Line",
    "text": "Add Line\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  ) +\n  geom_line(\n    color = \"grey\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#group-lines-by-day-period",
    "href": "02-concepts-pt1.html#group-lines-by-day-period",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Group Lines by Day Period",
    "text": "Group Lines by Day Period\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#order-layers",
    "href": "02-concepts-pt1.html#order-layers",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Order Layers",
    "text": "Order Layers\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#use-geom_path-instead",
    "href": "02-concepts-pt1.html#use-geom_path-instead",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Use `geom_path()` instead",
    "text": "Use `geom_path()` instead\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_path(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#geom_line-vs.-geom_path",
    "href": "02-concepts-pt1.html#geom_line-vs.-geom_path",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "`geom_line()` vs. `geom_path()`",
    "text": "`geom_line()` vs. `geom_path()`\n\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_path(\n    aes(color = day_night)\n  )\n\n\n\n\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_line(\n    aes(color = day_night)\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#apply-a-theme",
    "href": "02-concepts-pt1.html#apply-a-theme",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply a Theme",
    "text": "Apply a Theme\n\n\ng <- ggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )\n\ng +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#add-meaningful-labels",
    "href": "02-concepts-pt1.html#add-meaningful-labels",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Meaningful Labels",
    "text": "Add Meaningful Labels\n\n\ng +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = \"Part of the Day:\"\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#add-meaningful-labels-1",
    "href": "02-concepts-pt1.html#add-meaningful-labels-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Meaningful Labels",
    "text": "Add Meaningful Labels\n\n\ng +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = \"Part of the Day:\",\n    shape = \"Part of the Day:\"\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#add-meaningful-labels-2",
    "href": "02-concepts-pt1.html#add-meaningful-labels-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Meaningful Labels",
    "text": "Add Meaningful Labels\n\n\ng +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#save-the-plot",
    "href": "02-concepts-pt1.html#save-the-plot",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Save the Plot",
    "text": "Save the Plot\n\nggsave(here::here(\"exercises\", \"plots\", \"02_concepts_pt1_ex1.pdf\"),\n       width = 9, height = 5, device = cairo_pdf)"
  },
  {
    "objectID": "02-concepts-pt1.html#bonus-use-shape-to-encode-sat-vs-sun",
    "href": "02-concepts-pt1.html#bonus-use-shape-to-encode-sat-vs-sun",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Bonus: Use Shape to Encode Sat vs Sun",
    "text": "Bonus: Use Shape to Encode Sat vs Sun\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = lubridate::day(date) == 6)\n  ) +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#bonus-use-shape-to-encode-sat-vs-sun-1",
    "href": "02-concepts-pt1.html#bonus-use-shape-to-encode-sat-vs-sun-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Bonus: Use Shape to Encode Sat vs Sun",
    "text": "Bonus: Use Shape to Encode Sat vs Sun\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = lubridate::wday(date, label = TRUE))\n  ) +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#bonus-use-shape-to-encode-sat-vs-sun-2",
    "href": "02-concepts-pt1.html#bonus-use-shape-to-encode-sat-vs-sun-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Bonus: Use Shape to Encode Sat vs Sun",
    "text": "Bonus: Use Shape to Encode Sat vs Sun\n\n\ninvisible(\n  Sys.setlocale(\"LC_TIME\", \"C\")\n)\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = lubridate::wday(date, label = TRUE))\n  ) +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#save-the-plot-1",
    "href": "02-concepts-pt1.html#save-the-plot-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Save the Plot",
    "text": "Save the Plot\n\nggsave(here::here(\"exercises\", \"plots\", \"02_concepts_pt1_ex1_bonus.pdf\"),\n       width = 9, height = 5, device = cairo_pdf)"
  },
  {
    "objectID": "02-concepts-pt1.html#exercise-2-1",
    "href": "02-concepts-pt1.html#exercise-2-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nExplore the TfL bike sharing data visually:create a boxplot of counts per weather type\n\nTurn the plot into a jitter strips plot (random noise across the x axis)\nCombine both chart types (jittered points on top of the boxplots)\nBonus: Sort the boxplot-jitter hybrid by median counts\nApply your favorite theme to the plot.\nAdd meaningful labels.\nBonus: Explore other chart types to visualize the distributions.\n\nSave the plot as a vector graphic with a decent plot size."
  },
  {
    "objectID": "02-concepts-pt1.html#import-data-if-not-yet",
    "href": "02-concepts-pt1.html#import-data-if-not-yet",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Import Data (if not yet)",
    "text": "Import Data (if not yet)\n\nlibrary(ggplot2)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)"
  },
  {
    "objectID": "02-concepts-pt1.html#boxplot-of-counts-vs.-weather-type",
    "href": "02-concepts-pt1.html#boxplot-of-counts-vs.-weather-type",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Boxplot of Counts vs. Weather Type",
    "text": "Boxplot of Counts vs. Weather Type\n\n\nggplot(\n    bikes,\n    aes(x = weather_type, y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "02-concepts-pt1.html#avoid-overlapping-axis-labels",
    "href": "02-concepts-pt1.html#avoid-overlapping-axis-labels",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Avoid Overlapping Axis Labels",
    "text": "Avoid Overlapping Axis Labels\n\n\nggplot(\n    bikes,\n    aes(x = count, y = weather_type)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "02-concepts-pt1.html#avoid-overlapping-axis-labels-1",
    "href": "02-concepts-pt1.html#avoid-overlapping-axis-labels-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Avoid Overlapping Axis Labels",
    "text": "Avoid Overlapping Axis Labels\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "02-concepts-pt1.html#apply-a-theme-1",
    "href": "02-concepts-pt1.html#apply-a-theme-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply a Theme",
    "text": "Apply a Theme\n\n\ntheme_set(theme_minimal(\n  base_size = 14,\n  base_family = \"Asap SemiCondensed\"\n))\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "02-concepts-pt1.html#customize-the-theme",
    "href": "02-concepts-pt1.html#customize-the-theme",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Customize the Theme",
    "text": "Customize the Theme\n\n\ntheme_set(theme_minimal(\n  base_size = 14,\n  base_family = \"Asap SemiCondensed\"\n))\n\ntheme_update(\n  panel.grid.major.x = element_blank(),\n  panel.grid.minor = element_blank()\n)\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "02-concepts-pt1.html#add-meaningful-labels-3",
    "href": "02-concepts-pt1.html#add-meaningful-labels-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Meaningful Labels",
    "text": "Add Meaningful Labels\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  labs(x = NULL, y = \"Reported bike shares\")"
  },
  {
    "objectID": "02-concepts-pt1.html#add-meaningful-labels-4",
    "href": "02-concepts-pt1.html#add-meaningful-labels-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Meaningful Labels",
    "text": "Add Meaningful Labels\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  labs(\n    x = NULL, y = NULL,\n    title = \"Reported bike shares by weather type\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#add-meaningful-labels-5",
    "href": "02-concepts-pt1.html#add-meaningful-labels-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Meaningful Labels",
    "text": "Add Meaningful Labels\n\n\ntheme_update(\n  plot.title.position = \"plot\",\n  axis.title = element_blank()\n)\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  ggtitle(\"Reported bike shares by weather type\")"
  },
  {
    "objectID": "02-concepts-pt1.html#jitter-strips-of-counts-per-weather-type",
    "href": "02-concepts-pt1.html#jitter-strips-of-counts-per-weather-type",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Jitter Strips of Counts per Weather Type",
    "text": "Jitter Strips of Counts per Weather Type\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_jitter(\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")"
  },
  {
    "objectID": "02-concepts-pt1.html#jitter-strips-of-counts-per-weather-type-1",
    "href": "02-concepts-pt1.html#jitter-strips-of-counts-per-weather-type-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Jitter Strips of Counts per Weather Type",
    "text": "Jitter Strips of Counts per Weather Type\n\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_point(\n    position = \"jitter\",\n    alpha = .2\n  )\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_point(\n    position = position_jitter(),\n    alpha = .2\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#jitter-strips-of-counts-vs.-weather-type",
    "href": "02-concepts-pt1.html#jitter-strips-of-counts-vs.-weather-type",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Jitter Strips of Counts vs. Weather Type",
    "text": "Jitter Strips of Counts vs. Weather Type\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")"
  },
  {
    "objectID": "02-concepts-pt1.html#boxplot-jitter-strip-hybrid",
    "href": "02-concepts-pt1.html#boxplot-jitter-strip-hybrid",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Boxplot + Jitter Strip Hybrid",
    "text": "Boxplot + Jitter Strip Hybrid\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")"
  },
  {
    "objectID": "02-concepts-pt1.html#boxplot-jitter-strip-hybrid-1",
    "href": "02-concepts-pt1.html#boxplot-jitter-strip-hybrid-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Boxplot + Jitter Strip Hybrid",
    "text": "Boxplot + Jitter Strip Hybrid\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot(\n     outlier.shape = NA\n     # outlier.color = \"transparent\"\n     # outlier.alpha = 0\n  ) +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")"
  },
  {
    "objectID": "02-concepts-pt1.html#bonus-sort-weather-types",
    "href": "02-concepts-pt1.html#bonus-sort-weather-types",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Bonus: Sort Weather Types",
    "text": "Bonus: Sort Weather Types\n\n\nggplot(\n    bikes,\n    aes(\n      x = forcats::fct_reorder(\n        stringr::str_wrap(weather_type, 6), -count\n      ),\n      y = count)\n  ) +\n  geom_boxplot(\n     outlier.shape = NA\n     # outlier.color = \"transparent\"\n     # outlier.alpha = 0\n  ) +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")"
  },
  {
    "objectID": "02-concepts-pt1.html#save-the-plot-2",
    "href": "02-concepts-pt1.html#save-the-plot-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Save the Plot",
    "text": "Save the Plot\n\nggsave(here::here(\"plots\", \"02_concepts_pt1_ex2.pdf\"),\n       width = 5, height = 6.5, device = cairo_pdf)"
  },
  {
    "objectID": "02-concepts-pt1.html#lets-update-our-data-set",
    "href": "02-concepts-pt1.html#lets-update-our-data-set",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Let’s Update our Data Set",
    "text": "Let’s Update our Data Set\n\nbikes <-\n  bikes %>%\n  mutate(\n    weather_type_fct = stringr::str_wrap(\n      weather_type, 6\n    ),\n    weather_type_fct = forcats::fct_reorder(\n      weather_type_fct, -count\n    )\n  )\n\nlevels(bikes$weather_type_fct)\n\n[1] \"scattered\\nclouds\" \"broken\\nclouds\"    \"clear\"             \"cloudy\"            \"rain\"              \"snowfall\""
  },
  {
    "objectID": "02-concepts-pt1.html#lets-store-our-ggplot-setup",
    "href": "02-concepts-pt1.html#lets-store-our-ggplot-setup",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Let’s Store Our ggplot Setup",
    "text": "Let’s Store Our ggplot Setup\n\ng <-\n  ggplot(\n    bikes,\n    aes(x = weather_type_fct,\n        y = count)\n  ) +\n  ggtitle(\n    \"Reported bike shares by weather type\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#beeswarm-plots-with-ggbeeswarm",
    "href": "02-concepts-pt1.html#beeswarm-plots-with-ggbeeswarm",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Beeswarm Plots with {ggbeeswarm}",
    "text": "Beeswarm Plots with {ggbeeswarm}\n\n\ng +\n  geom_boxplot(\n     outlier.shape = NA\n  ) +\n  ggbeeswarm::geom_beeswarm(\n    size = .3,\n    alpha = .2,\n    cex = .6\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#beeswarm-plots-with-ggbeeswarm-1",
    "href": "02-concepts-pt1.html#beeswarm-plots-with-ggbeeswarm-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Beeswarm Plots with {ggbeeswarm}",
    "text": "Beeswarm Plots with {ggbeeswarm}\n\n\ng +\n  geom_boxplot(\n     outlier.shape = NA\n  ) +\n  ggbeeswarm::geom_quasirandom(\n    size = .3,\n    alpha = .2,\n    width = .3,\n    varwidth = TRUE\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#sina-plots-with-ggforce",
    "href": "02-concepts-pt1.html#sina-plots-with-ggforce",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Sina Plots with {ggforce}",
    "text": "Sina Plots with {ggforce}\n\n\ng +\n  geom_boxplot(\n     outlier.shape = NA\n  ) +\n  ggforce::geom_sina(\n    size = .5,\n    alpha = .2,\n    maxwidth = 1.2\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#barcode-strips",
    "href": "02-concepts-pt1.html#barcode-strips",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Barcode Strips",
    "text": "Barcode Strips\n\n\ng +\n  geom_boxplot(\n     position = position_nudge(x = .15),\n     width = .35\n  ) +\n  geom_point(\n    shape = \"-\",\n    size = 8,\n    alpha = .1,\n    position = position_nudge(x = -.15)\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#violin-plots",
    "href": "02-concepts-pt1.html#violin-plots",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Violin Plots",
    "text": "Violin Plots\n\n\ng +\n  geom_violin()"
  },
  {
    "objectID": "02-concepts-pt1.html#violin-plots-1",
    "href": "02-concepts-pt1.html#violin-plots-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Violin Plots",
    "text": "Violin Plots\n\n\ng +\n  geom_violin(\n    scale = \"count\",\n    draw_quantiles = c(.5),\n    fill = \"grey80\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#violin-plots-2",
    "href": "02-concepts-pt1.html#violin-plots-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Violin Plots",
    "text": "Violin Plots\n\n\ng +\n  geom_violin(\n    scale = \"width\",\n    draw_quantiles = c(.5),\n    trim = FALSE,\n    bw = 250,\n    fill = \"grey80\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#violin-plots-with-ggdist",
    "href": "02-concepts-pt1.html#violin-plots-with-ggdist",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Violin Plots with {ggdist}",
    "text": "Violin Plots with {ggdist}\n\n\ng +\n  ggdist::stat_eye()"
  },
  {
    "objectID": "02-concepts-pt1.html#violin-plots-with-ggdist-1",
    "href": "02-concepts-pt1.html#violin-plots-with-ggdist-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Violin Plots with {ggdist}",
    "text": "Violin Plots with {ggdist}\n\n\ng +\n  ggdist::stat_eye(\n    .width = c(0.5, 0.95),\n    width = 1.5,\n    adjust = .33\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#violin-plots-with-ggdist-2",
    "href": "02-concepts-pt1.html#violin-plots-with-ggdist-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Violin Plots with {ggdist}",
    "text": "Violin Plots with {ggdist}\n\n\ng +\n  ggdist::stat_eye(\n    aes(thickness = stat(f*n)),\n    .width = c(0.5, 0.95),\n    adjust = .33\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#violin-plots-with-ggdist-3",
    "href": "02-concepts-pt1.html#violin-plots-with-ggdist-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Violin Plots with {ggdist}",
    "text": "Violin Plots with {ggdist}\n\n\ng +\n  ggdist::stat_eye(\n    aes(thickness = stat(f*n)),\n    .width = c(0.5, 0.95),\n    adjust = .5,\n    interval_size_range = c(.4, 2.5),\n    point_size = 1.2,\n    point_color = \"white\"\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#raincloud-plots-with-ggdist",
    "href": "02-concepts-pt1.html#raincloud-plots-with-ggdist",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Raincloud Plots with {ggdist}",
    "text": "Raincloud Plots with {ggdist}\n\n\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    .width = 0,\n    width = .5,\n    position = position_nudge(x = .2)\n  ) +\n  geom_jitter(\n    width = .1,\n    size = .5,\n    alpha = .1\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#raincloud-plots-with-ggdist-1",
    "href": "02-concepts-pt1.html#raincloud-plots-with-ggdist-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Raincloud Plots with {ggdist}",
    "text": "Raincloud Plots with {ggdist}\n\n\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    color = NA,\n    width = .5,\n    position = position_nudge(x = .2)\n  ) +\n  geom_boxplot(\n    width = .3,\n    outlier.color = NA\n  ) +\n  geom_jitter(\n    width = .1,\n    size = .5,\n    alpha = .1\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#raincloud-plots-with-gghalves",
    "href": "02-concepts-pt1.html#raincloud-plots-with-gghalves",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Raincloud Plots with {gghalves}",
    "text": "Raincloud Plots with {gghalves}\n\n\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    color = NA,\n    width = .5,\n    position = position_nudge(x = .1)\n  ) +\n  geom_boxplot(\n    width = .1,\n    outlier.size = .2\n  ) +\n  gghalves::geom_half_point(\n    side = \"l\",\n    range_scale = .4,\n    size = .3,\n    alpha = .1\n  )"
  },
  {
    "objectID": "02-concepts-pt1.html#raincloud-plots-with-gghalves-1",
    "href": "02-concepts-pt1.html#raincloud-plots-with-gghalves-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Raincloud Plots with {gghalves}",
    "text": "Raincloud Plots with {gghalves}\n\n\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    color = NA,\n    width = .5,\n    position = position_nudge(x = .1)\n  ) +\n  geom_boxplot(\n    width = .1,\n    outlier.size = .2\n  ) +\n  gghalves::geom_half_point(\n    side = \"l\",\n    range_scale = .4,\n    size = .3,\n    alpha = .1\n  ) +\n  coord_flip()\n\n\n\n\n\n\n\n\n\nCédric Scherer // Data Visualization & Information Design"
  },
  {
    "objectID": "01-dataviz.html#dataviz-office",
    "href": "01-dataviz.html#dataviz-office",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Source: eazybi"
  },
  {
    "objectID": "01-dataviz.html#dataviz-science",
    "href": "01-dataviz.html#dataviz-science",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Source: Ranganathan et al. 2014"
  },
  {
    "objectID": "01-dataviz.html#dataviz-dashboard",
    "href": "01-dataviz.html#dataviz-dashboard",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Source: datameer.com"
  },
  {
    "objectID": "01-dataviz.html#dataviz-beach",
    "href": "01-dataviz.html#dataviz-beach",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Source: “Perpetual Plastic” by Liina Klauss, Skye Morét & Moritz Stefaner"
  },
  {
    "objectID": "01-dataviz.html#dataviz-artistic",
    "href": "01-dataviz.html#dataviz-artistic",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Source: “Patchwork Kingdoms” by Nadieh Bremer"
  },
  {
    "objectID": "01-dataviz.html#dataviz-history-minard-napoleon",
    "href": "01-dataviz.html#dataviz-history-minard-napoleon",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Carte figurative des pertes successives en hommes de l’Armée Française dans la campagne de Russie 1812–1813” by Charles Joseph Minard (1869)"
  },
  {
    "objectID": "01-dataviz.html#dataviz-history-minard-napoleon-hannibal",
    "href": "01-dataviz.html#dataviz-history-minard-napoleon-hannibal",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Carte figurative des pertes successives en hommes de l’Armée qu’Annibal conduisit d’Espagne en Italie en traversant les Gaules (selon Polybe)” (top) and “Carte figurative des pertes successives en hommes de l’Armée Française dans la campagne de Russie 1812–1813” (bottom) by Charles Joseph Minard (1869)\n\nshows the force levels of the armies of Hannibal (218 BC) and Napoleon (1812-1813), respectively\n\n\nsome data visualization practioners call it (one of) the best statistical drawings ever created"
  },
  {
    "objectID": "01-dataviz.html#dataviz-history-minard-paris",
    "href": "01-dataviz.html#dataviz-history-minard-paris",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Carte figurative et approximative des poids des bestiaux venus á Paris sur les chemins de fer en 1862” by Charles Joseph Minard (1864)"
  },
  {
    "objectID": "01-dataviz.html#dataviz-history-minard-canal",
    "href": "01-dataviz.html#dataviz-history-minard-canal",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Tableau figuratif du mouvement commercial du Canal du Centre en 1844” by Charles Joseph Minard (1845)"
  },
  {
    "objectID": "01-dataviz.html#dataviz-history-minard-canal-quote",
    "href": "01-dataviz.html#dataviz-history-minard-canal-quote",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Tableau figuratif du mouvement commercial du Canal du Centre en 1844” by Charles Joseph Minard (1845)"
  },
  {
    "objectID": "01-dataviz.html#mental-calendar-exercise",
    "href": "01-dataviz.html#mental-calendar-exercise",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "If the year is a circle—where’s March and December in your mind?\n\n\n\n\n\n\nImagine you had to create a polar representation of the months.\nDraw a circle and indicate the position of March and December.\nUse an arrow to illustrate the direction of time.\nCompare the results with your neighbors."
  },
  {
    "objectID": "01-dataviz.html#mental-calendar-results-1",
    "href": "01-dataviz.html#mental-calendar-results-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Wheel diagram of 76,922 placements of the months of December and March on the circumference of an empty circle.Graphics by Henrik Lied at NRKbeta. Laeng & Hofseth, Front Psychol. 2019"
  },
  {
    "objectID": "01-dataviz.html#mental-calendar-results-2",
    "href": "01-dataviz.html#mental-calendar-results-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Proportion of respondents choosing opposite direction of time on the year’s wheel. Graphics by Vidar Kvien, NRK. Laeng & Hofseth, Front Psychol. 2019"
  },
  {
    "objectID": "01-dataviz.html#dataviz-history-nightingale-coxcomb",
    "href": "01-dataviz.html#dataviz-history-nightingale-coxcomb",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Diagram of the causes and mortality in the army in the East” (a so-called coxcomb diagram) by Florence Nightingale (1858)"
  },
  {
    "objectID": "01-dataviz.html#dataviz-history-nightingale-bars",
    "href": "01-dataviz.html#dataviz-history-nightingale-bars",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Relative mortality of the army at home and of the English male population at corresponding ages” by Florence Nightingale (1858)"
  },
  {
    "objectID": "01-dataviz.html#anscombes-quartet",
    "href": "01-dataviz.html#anscombes-quartet",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Anscombe’s Quartet",
    "text": "Anscombe’s Quartet\n\n\nSource: Matejka & Fitzmaurice (2017)"
  },
  {
    "objectID": "01-dataviz.html#visualize-your-data-1",
    "href": "01-dataviz.html#visualize-your-data-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Visualize Your Data!",
    "text": "Visualize Your Data!\n\n\n\n\n\n“Russian elections once again had a suspiciously neat result” by The Economist\n\n\n\n When Dmitry Kobak and Sergey Shpilkin […] analysed the results, they found that an unusually high number of turnout and vote-share results were multiples of five (eg, 50%, 55%, 60%), a tell-tale sign of manipulation."
  },
  {
    "objectID": "01-dataviz.html#visualize-your-data-2",
    "href": "01-dataviz.html#visualize-your-data-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Visualize Your Data!",
    "text": "Visualize Your Data!\n\n\n\n\n\n“Russian elections once again had a suspiciously neat result” by The Economist\n\n\n\n When Dmitry Kobak and Sergey Shpilkin […] analysed the results, they found that an unusually high number of turnout and vote-share results were multiples of five (eg, 50%, 55%, 60%), a tell-tale sign of manipulation."
  },
  {
    "objectID": "01-dataviz.html#success-failure",
    "href": "01-dataviz.html#success-failure",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "A good data visualization can mean the difference between success and failure.",
    "text": "A good data visualization can mean the difference between success and failure.\n\n\n\nCommunicating complex findings and phenomena\nRaising money for an organization, event or department\nPresenting at a board or conference\nHelping businesses and institutions to make informed decisions\nProviding guidance for improvement\n…\nGetting your point across!"
  },
  {
    "objectID": "01-dataviz.html#what-makes-a-good-data-visualization",
    "href": "01-dataviz.html#what-makes-a-good-data-visualization",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "What Makes a Good Data Visualization?",
    "text": "What Makes a Good Data Visualization?\n\n\n  → Integrity (information)\n\n\n  → Story (interestingness)\n\n\n  → Goal (usefulness)\n\n\n  → Visual Form (beauty)"
  },
  {
    "objectID": "01-dataviz.html#integrity-of-information",
    "href": "01-dataviz.html#integrity-of-information",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Integrity of Information",
    "text": "Integrity of Information\n   — data quality:   → guesstimation, precision, and failures   → miscalculations and errors   → incomplete data and missing values   → summaries and aggregations \n\n   — only a subset:   → not crime but reported crime*   → historical or present state \n* or rats, UFO sightings, …"
  },
  {
    "objectID": "01-dataviz.html#typology-of-information-graphics",
    "href": "01-dataviz.html#typology-of-information-graphics",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Typology of Information Graphics",
    "text": "Typology of Information Graphics\n\nIs the information conceptual or measurable?\n → Type of information: depict information schematically <> convert information into visual forms\n\n\nIs the aim to explore or to explain the information?\n → Purpose of the graphic: facilitate discovery <> communicate information"
  },
  {
    "objectID": "01-dataviz.html#viz-vertices-1",
    "href": "01-dataviz.html#viz-vertices-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Vertices of Visualization” by Alberto Cairo, personal communication (modified version)"
  },
  {
    "objectID": "01-dataviz.html#viz-vertices-2",
    "href": "01-dataviz.html#viz-vertices-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Vertices of Visualization” by Alberto Cairo, personal communication (modified version)"
  },
  {
    "objectID": "01-dataviz.html#viz-vertices-3",
    "href": "01-dataviz.html#viz-vertices-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Vertices of Visualization” by Alberto Cairo, personal communication (modified version)"
  },
  {
    "objectID": "01-dataviz.html#who-what-how",
    "href": "01-dataviz.html#who-what-how",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Audience (who)\n\nTo whom are you communicating?\nWhat do they already know?\nWhat is your position and relationship?"
  },
  {
    "objectID": "01-dataviz.html#who-what-how-2",
    "href": "01-dataviz.html#who-what-how-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Audience (who)\n\nTo whom are you communicating?\nWhat do they already know?\nWhat is your position and relationship?\n\nContent (what)\n\nWhat do you want them to know or do?\nHow will you communicate with them?\nWhat tone do you want your communication to set?"
  },
  {
    "objectID": "01-dataviz.html#perception-0",
    "href": "01-dataviz.html#perception-0",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Scheme by Andy Kirk (modified)"
  },
  {
    "objectID": "01-dataviz.html#perception-1",
    "href": "01-dataviz.html#perception-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Scheme by Andy Kirk (modified)"
  },
  {
    "objectID": "01-dataviz.html#perception-2",
    "href": "01-dataviz.html#perception-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Scheme by Andy Kirk (modified)"
  },
  {
    "objectID": "01-dataviz.html#perception-3",
    "href": "01-dataviz.html#perception-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Scheme by Andy Kirk (modified)"
  },
  {
    "objectID": "01-dataviz.html#chart-choice-story-migrants-arrows-color",
    "href": "01-dataviz.html#chart-choice-story-migrants-arrows-color",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“How maps in the media make us more negative about migrants” by Maite Vermeulen, Leon de Korte & Henk van Houtum"
  },
  {
    "objectID": "01-dataviz.html#chart-choice-story-migrants-title",
    "href": "01-dataviz.html#chart-choice-story-migrants-title",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“How maps in the media make us more negative about migrants” by Maite Vermeulen, Leon de Korte & Henk van Houtum"
  },
  {
    "objectID": "01-dataviz.html#chart-choice-story-migrants-arrows-smaller",
    "href": "01-dataviz.html#chart-choice-story-migrants-arrows-smaller",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“How maps in the media make us more negative about migrants” by Maite Vermeulen, Leon de Korte & Henk van Houtum"
  },
  {
    "objectID": "01-dataviz.html#chart-choice-story-migrants-scale",
    "href": "01-dataviz.html#chart-choice-story-migrants-scale",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“How maps in the media make us more negative about migrants” by Maite Vermeulen, Leon de Korte & Henk van Houtum"
  },
  {
    "objectID": "01-dataviz.html#who-what-how-3",
    "href": "01-dataviz.html#who-what-how-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Audience (who)\n\nTo whom are you communicating?\nWhat do they already know?\nWhat is your position and relationship?\n\nContent (what)\n\nWhat do you want them to know or do?\nHow will you communicate with them?\nWhat tone do you want your communication to set?\n\nEvidence (how)\n\nWhat data is available to make my point?"
  },
  {
    "objectID": "01-dataviz.html#context-prepare-yourself",
    "href": "01-dataviz.html#context-prepare-yourself",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Context: Prepare Yourself",
    "text": "Context: Prepare Yourself\n\n\n\nWhat is the one key massage they should take home?\nWhat (background) information is essential? What’s irrelevant?\nWhat are potential biases of (some of) the audience?\nWhat factors could weaken your case? Can we address them proactively?"
  },
  {
    "objectID": "01-dataviz.html#same-data-different-encodings",
    "href": "01-dataviz.html#same-data-different-encodings",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Same Data, Different Encodings",
    "text": "Same Data, Different Encodings"
  },
  {
    "objectID": "01-dataviz.html#same-data-different-encodings-1",
    "href": "01-dataviz.html#same-data-different-encodings-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Same Data, Different Encodings",
    "text": "Same Data, Different Encodings"
  },
  {
    "objectID": "01-dataviz.html#encodings-judgements-yau",
    "href": "01-dataviz.html#encodings-judgements-yau",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Source: “Data Points” by Nathan Yau (p. 104)"
  },
  {
    "objectID": "01-dataviz.html#encodings-judgements-cairo",
    "href": "01-dataviz.html#encodings-judgements-cairo",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Cleveland’s and McGill’s Scale of Perpetual Elementary TasksSource: “The Functional Art” by Alberto Cairo (p. 120)"
  },
  {
    "objectID": "01-dataviz.html#encodings-judgements-accurate",
    "href": "01-dataviz.html#encodings-judgements-accurate",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Cleveland’s and McGill’s Scale of Perpetual Elementary TasksSource: “The Functional Art” by Alberto Cairo (p. 120)"
  },
  {
    "objectID": "01-dataviz.html#always-start-at-zero",
    "href": "01-dataviz.html#always-start-at-zero",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Always Start at Zero?",
    "text": "Always Start at Zero?\n\n\nSource: “Hands-On Data Visualization” by Jack Dougherty & Ilya Ilyankou\nMore on the topic: Correl, Bertini & Francoeri 2020 and Witt (2019)"
  },
  {
    "objectID": "01-dataviz.html#always-start-at-zero-1",
    "href": "01-dataviz.html#always-start-at-zero-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Always Start at Zero?",
    "text": "Always Start at Zero?"
  },
  {
    "objectID": "01-dataviz.html#always-start-at-zero-2",
    "href": "01-dataviz.html#always-start-at-zero-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Always Start at Zero?",
    "text": "Always Start at Zero?"
  },
  {
    "objectID": "01-dataviz.html#always-start-at-zero-3",
    "href": "01-dataviz.html#always-start-at-zero-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Always Start at Zero?",
    "text": "Always Start at Zero?\n\n\nSource: “Hands-On Data Visualization” by Jack Dougherty & Ilya Ilyankou"
  },
  {
    "objectID": "01-dataviz.html#encodings-position-baseline-golden-ratio",
    "href": "01-dataviz.html#encodings-position-baseline-golden-ratio",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Source: Francis Gagnon"
  },
  {
    "objectID": "01-dataviz.html#encodings-judgements-generic",
    "href": "01-dataviz.html#encodings-judgements-generic",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Cleveland’s and McGill’s Scale of Perpetual Elementary TasksSource: “The Functional Art” by Alberto Cairo (p. 120)"
  },
  {
    "objectID": "01-dataviz.html#scmp-area-fail-1",
    "href": "01-dataviz.html#scmp-area-fail-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Russia attacks Ukraine” by SCMP Graphic (South China Morning Post)"
  },
  {
    "objectID": "01-dataviz.html#scmp-area-fail-2",
    "href": "01-dataviz.html#scmp-area-fail-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Russia attacks Ukraine” by SCMP Graphic (South China Morning Post)"
  },
  {
    "objectID": "01-dataviz.html#scmp-area-fail-3",
    "href": "01-dataviz.html#scmp-area-fail-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Russia attacks Ukraine” by SCMP Graphic (South China Morning Post)"
  },
  {
    "objectID": "01-dataviz.html#scmp-area-fix-2",
    "href": "01-dataviz.html#scmp-area-fix-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Ukraine’s military spending was less than a 14th of Russia’s in 2020."
  },
  {
    "objectID": "01-dataviz.html#same-data-different-palettes",
    "href": "01-dataviz.html#same-data-different-palettes",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Same Data, Different Palettes",
    "text": "Same Data, Different Palettes"
  },
  {
    "objectID": "01-dataviz.html#same-data-different-palettes-1",
    "href": "01-dataviz.html#same-data-different-palettes-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Same Data, Different Palettes",
    "text": "Same Data, Different Palettes"
  },
  {
    "objectID": "01-dataviz.html#same-data-different-palettes-2",
    "href": "01-dataviz.html#same-data-different-palettes-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Same Data, Different Palettes",
    "text": "Same Data, Different Palettes"
  },
  {
    "objectID": "01-dataviz.html#color-palette-types",
    "href": "01-dataviz.html#color-palette-types",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Color Palette Types",
    "text": "Color Palette Types"
  },
  {
    "objectID": "01-dataviz.html#color-palette-types-dark-equals-more",
    "href": "01-dataviz.html#color-palette-types-dark-equals-more",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Color Palette Types: Dark Equals More (?)",
    "text": "Color Palette Types: Dark Equals More (?)"
  },
  {
    "objectID": "01-dataviz.html#color-palette-types-dark-equals-more-1",
    "href": "01-dataviz.html#color-palette-types-dark-equals-more-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Color Palette Types: Dark Equals More (?)",
    "text": "Color Palette Types: Dark Equals More (?)"
  },
  {
    "objectID": "01-dataviz.html#color-palette-types-1",
    "href": "01-dataviz.html#color-palette-types-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Color Palette Types",
    "text": "Color Palette Types"
  },
  {
    "objectID": "01-dataviz.html#color-palette-types-sequential-or-diverging",
    "href": "01-dataviz.html#color-palette-types-sequential-or-diverging",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Color Palette Types: Sequential or Diverging?",
    "text": "Color Palette Types: Sequential or Diverging?"
  },
  {
    "objectID": "01-dataviz.html#color-palette-types-diverging-on-dark",
    "href": "01-dataviz.html#color-palette-types-diverging-on-dark",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Color Palette Types: Diverging on Dark",
    "text": "Color Palette Types: Diverging on Dark"
  },
  {
    "objectID": "01-dataviz.html#color-palette-types-midpoint",
    "href": "01-dataviz.html#color-palette-types-midpoint",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Color Palette Types: Midpoint",
    "text": "Color Palette Types: Midpoint"
  },
  {
    "objectID": "01-dataviz.html#color-palette-types-2",
    "href": "01-dataviz.html#color-palette-types-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Color Palette Types",
    "text": "Color Palette Types"
  },
  {
    "objectID": "01-dataviz.html#chart-selection-helpers-3",
    "href": "01-dataviz.html#chart-selection-helpers-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Source: Data to Viz"
  },
  {
    "objectID": "01-dataviz.html#chart-selection-helpers-4",
    "href": "01-dataviz.html#chart-selection-helpers-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Source: Data to Viz"
  },
  {
    "objectID": "01-dataviz.html#barbar-charts-weissgerber-0",
    "href": "01-dataviz.html#barbar-charts-weissgerber-0",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Weissgerber et al. (2015) PLoS Biology"
  },
  {
    "objectID": "01-dataviz.html#barbar-charts-weissgerber-1",
    "href": "01-dataviz.html#barbar-charts-weissgerber-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Modified from Weissgerber et al. (2015) PLoS Biology"
  },
  {
    "objectID": "01-dataviz.html#barbar-charts-weissgerber-2",
    "href": "01-dataviz.html#barbar-charts-weissgerber-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Modified from Weissgerber et al. (2015) PLoS Biology"
  },
  {
    "objectID": "01-dataviz.html#barbar-charts-weissgerber-3",
    "href": "01-dataviz.html#barbar-charts-weissgerber-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Modified from Weissgerber et al. (2015) PLoS Biology"
  },
  {
    "objectID": "01-dataviz.html#barbar-charts-weissgerber-4",
    "href": "01-dataviz.html#barbar-charts-weissgerber-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Modified from Weissgerber et al. (2015) PLoS Biology"
  },
  {
    "objectID": "01-dataviz.html#barbar-charts-weissgerber-5",
    "href": "01-dataviz.html#barbar-charts-weissgerber-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Modified from Weissgerber et al. (2015) PLoS Biology"
  },
  {
    "objectID": "01-dataviz.html#overplotting-issue",
    "href": "01-dataviz.html#overplotting-issue",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Overplotting Issue",
    "text": "Overplotting Issue"
  },
  {
    "objectID": "01-dataviz.html#overplotting-issue-1",
    "href": "01-dataviz.html#overplotting-issue-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Overplotting Issue",
    "text": "Overplotting Issue"
  },
  {
    "objectID": "01-dataviz.html#overplotting-issue-2",
    "href": "01-dataviz.html#overplotting-issue-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Overplotting Issue",
    "text": "Overplotting Issue"
  },
  {
    "objectID": "01-dataviz.html#overplotting-issue-3",
    "href": "01-dataviz.html#overplotting-issue-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Overplotting Issue",
    "text": "Overplotting Issue"
  },
  {
    "objectID": "01-dataviz.html#overplotting-issue-4",
    "href": "01-dataviz.html#overplotting-issue-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Overplotting Issue",
    "text": "Overplotting Issue"
  },
  {
    "objectID": "01-dataviz.html#spaghetti-plot-issue",
    "href": "01-dataviz.html#spaghetti-plot-issue",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Spaghetti Plot Issue",
    "text": "Spaghetti Plot Issue"
  },
  {
    "objectID": "01-dataviz.html#spaghetti-plot-issue-1",
    "href": "01-dataviz.html#spaghetti-plot-issue-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Spaghetti Plot Issue",
    "text": "Spaghetti Plot Issue"
  },
  {
    "objectID": "01-dataviz.html#spaghetti-plot-issue-2",
    "href": "01-dataviz.html#spaghetti-plot-issue-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Spaghetti Plot Issue",
    "text": "Spaghetti Plot Issue"
  },
  {
    "objectID": "01-dataviz.html#spaghetti-plot-issue-3",
    "href": "01-dataviz.html#spaghetti-plot-issue-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Spaghetti Plot Issue",
    "text": "Spaghetti Plot Issue"
  },
  {
    "objectID": "01-dataviz.html#spaghetti-plot-issue-4",
    "href": "01-dataviz.html#spaghetti-plot-issue-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Spaghetti Plot Issue",
    "text": "Spaghetti Plot Issue"
  },
  {
    "objectID": "01-dataviz.html#small-multiples-minard",
    "href": "01-dataviz.html#small-multiples-minard",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Carte figurative et approximative des quantités de coton brut importées en Europe en 1858, en 1864 et en 1865” by Charles Joseph Minard (1866)"
  },
  {
    "objectID": "01-dataviz.html#stacked-bars-issue",
    "href": "01-dataviz.html#stacked-bars-issue",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Stacked Bars Issue",
    "text": "Stacked Bars Issue"
  },
  {
    "objectID": "01-dataviz.html#stacked-bars-issue-1",
    "href": "01-dataviz.html#stacked-bars-issue-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Stacked Bars Issue",
    "text": "Stacked Bars Issue"
  },
  {
    "objectID": "01-dataviz.html#stacked-bars-issue-2",
    "href": "01-dataviz.html#stacked-bars-issue-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Stacked Bars Issue",
    "text": "Stacked Bars Issue"
  },
  {
    "objectID": "01-dataviz.html#stacked-bars-issue-3",
    "href": "01-dataviz.html#stacked-bars-issue-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Stacked Bars Issue",
    "text": "Stacked Bars Issue"
  },
  {
    "objectID": "01-dataviz.html#stacked-bars-issue-4",
    "href": "01-dataviz.html#stacked-bars-issue-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Stacked Bars Issue",
    "text": "Stacked Bars Issue"
  },
  {
    "objectID": "01-dataviz.html#skewed-data-issue",
    "href": "01-dataviz.html#skewed-data-issue",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Skewed Data Issue",
    "text": "Skewed Data Issue"
  },
  {
    "objectID": "01-dataviz.html#skewed-data-issue-1",
    "href": "01-dataviz.html#skewed-data-issue-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Skewed Data Issue",
    "text": "Skewed Data Issue"
  },
  {
    "objectID": "01-dataviz.html#skewed-data-issue-2",
    "href": "01-dataviz.html#skewed-data-issue-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Skewed Data Issue",
    "text": "Skewed Data Issue"
  },
  {
    "objectID": "01-dataviz.html#skewed-data-issue-3",
    "href": "01-dataviz.html#skewed-data-issue-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Skewed Data Issue",
    "text": "Skewed Data Issue"
  },
  {
    "objectID": "01-dataviz.html#skewed-data-issue-4",
    "href": "01-dataviz.html#skewed-data-issue-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Skewed Data Issue",
    "text": "Skewed Data Issue"
  },
  {
    "objectID": "01-dataviz.html#skewed-data-issue-5",
    "href": "01-dataviz.html#skewed-data-issue-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Skewed Data Issue",
    "text": "Skewed Data Issue"
  },
  {
    "objectID": "01-dataviz.html#dual-axis-issue",
    "href": "01-dataviz.html#dual-axis-issue",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Dual Axis Issue",
    "text": "Dual Axis Issue\nExamples by Lisa Charlotte Muth, DataWrapper Blog"
  },
  {
    "objectID": "01-dataviz.html#dual-axis-issue-1",
    "href": "01-dataviz.html#dual-axis-issue-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Dual Axis Issue",
    "text": "Dual Axis Issue\n\n\nSource: Spurious Correlations"
  },
  {
    "objectID": "01-dataviz.html#dual-axis-issue-2",
    "href": "01-dataviz.html#dual-axis-issue-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Dual Axis Issue",
    "text": "Dual Axis Issue\n\nSource: Lisa Charlotte Muth, DataWrapper Blog"
  },
  {
    "objectID": "01-dataviz.html#dual-axis-issue-3",
    "href": "01-dataviz.html#dual-axis-issue-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Dual Axis Issue",
    "text": "Dual Axis Issue\n\nSource: Lisa Charlotte Muth, DataWrapper Blog"
  },
  {
    "objectID": "01-dataviz.html#dual-axis-issue-4",
    "href": "01-dataviz.html#dual-axis-issue-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Dual Axis Issue",
    "text": "Dual Axis Issue\n\n\nSource: Lisa Charlotte Muth, DataWrapper Blog"
  },
  {
    "objectID": "01-dataviz.html#dual-axis-issue-5",
    "href": "01-dataviz.html#dual-axis-issue-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Dual Axis Issue",
    "text": "Dual Axis Issue\n\n\nSource: Lisa Charlotte Muth, DataWrapper Blog"
  },
  {
    "objectID": "01-dataviz.html#power-of-annotation-iib-blank",
    "href": "01-dataviz.html#power-of-annotation-iib-blank",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "David McCandless & Lee Byron, Information is Beautiful (modified)"
  },
  {
    "objectID": "01-dataviz.html#power-of-annotation-iib",
    "href": "01-dataviz.html#power-of-annotation-iib",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "David McCandless & Lee Byron, Information is Beautiful"
  },
  {
    "objectID": "01-dataviz.html#annotations-playfair",
    "href": "01-dataviz.html#annotations-playfair",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Time series with annotations by William Playfair from “The Commercial and Political Atlas and Statistical Breviary” (1786)"
  },
  {
    "objectID": "01-dataviz.html#assist-viewer-1",
    "href": "01-dataviz.html#assist-viewer-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Frankfurt vies for UK banking jobs post-Brexit” by Alan Smith & Laura Noonan (Financial Times)"
  },
  {
    "objectID": "01-dataviz.html#assist-viewer-1-hl",
    "href": "01-dataviz.html#assist-viewer-1-hl",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Frankfurt vies for UK banking jobs post-Brexit” by Alan Smith & Laura Noonan (Financial Times)"
  },
  {
    "objectID": "01-dataviz.html#assist-viewer-2",
    "href": "01-dataviz.html#assist-viewer-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Yearly Fluctuations in Area of Arctic Covered by Ice” by Derek Watkins (New York Times)"
  },
  {
    "objectID": "01-dataviz.html#assist-viewer-2-hl-1",
    "href": "01-dataviz.html#assist-viewer-2-hl-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Yearly Fluctuations in Area of Arctic Covered by Ice” by Derek Watkins (New York Times)"
  },
  {
    "objectID": "01-dataviz.html#assist-viewer-2-hl-2",
    "href": "01-dataviz.html#assist-viewer-2-hl-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Yearly Fluctuations in Area of Arctic Covered by Ice” by Derek Watkins (New York Times)"
  },
  {
    "objectID": "01-dataviz.html#assist-viewer-3",
    "href": "01-dataviz.html#assist-viewer-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“100 Years of Streamflow Drought”, in collaboration with USGS"
  },
  {
    "objectID": "01-dataviz.html#assist-viewer-3-hl",
    "href": "01-dataviz.html#assist-viewer-3-hl",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“100 Years of Streamflow Drought”, in collaboration with USGS"
  },
  {
    "objectID": "01-dataviz.html#assist-viewer-5",
    "href": "01-dataviz.html#assist-viewer-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Source: Jan Kühn"
  },
  {
    "objectID": "01-dataviz.html#guide-assist-illustration-1",
    "href": "01-dataviz.html#guide-assist-illustration-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "{fig-align=“center”}"
  },
  {
    "objectID": "01-dataviz.html#guide-assist-illustration-2",
    "href": "01-dataviz.html#guide-assist-illustration-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "“Not my Cup of Coffee” (#TidyTuesday Contribution)"
  },
  {
    "objectID": "01-dataviz.html#wrap-up-wp-air-quality",
    "href": "01-dataviz.html#wrap-up-wp-air-quality",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Source: “Clearing the Air” by Adam Ginsburg (Washington Post)"
  },
  {
    "objectID": "01-dataviz.html#wrap-up-wp-air-quality-notes",
    "href": "01-dataviz.html#wrap-up-wp-air-quality-notes",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "Notes by Francis Gagnon (Voilà)"
  },
  {
    "objectID": "01-dataviz.html#exercise-1",
    "href": "01-dataviz.html#exercise-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\n\nDiscuss the following graphic.\n\nWhat is the main message?\nDoes the chart type work?\nIs there a better chart type?\nDraw an alternative version(s) using different chart type(s)."
  },
  {
    "objectID": "01-dataviz.html#exercise-1-1",
    "href": "01-dataviz.html#exercise-1-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\n\nMarket share of visits to social network sites in November 2017,found in the blog post on “Why you shouldn’t use pie charts” by The University of Melbourne"
  },
  {
    "objectID": "01-dataviz.html#exercise-2",
    "href": "01-dataviz.html#exercise-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\n\nTake notes on the following fun graphic.\n\nWhat is the take-home message you learn from the chart.\nWhat are elements used to guide and assist the viewer?\nDoes the graphic work for you?"
  },
  {
    "objectID": "01-dataviz.html#exercise-2-1",
    "href": "01-dataviz.html#exercise-2-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\n\nSource: “How hot dog contestants went from eating 10 to 76 hot dogs in 10 minutes” by Carson TerBush (Washington Post)\n\n\n\n\n\nCédric Scherer // Data Visualization & Information Design"
  },
  {
    "objectID": "00-welcome.html#cedric-ggplot-tutorial-overview",
    "href": "00-welcome.html#cedric-ggplot-tutorial-overview",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "",
    "text": "cedricscherer.com/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r"
  },
  {
    "objectID": "00-welcome.html#conversation-starters",
    "href": "00-welcome.html#conversation-starters",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Conversation Starters",
    "text": "Conversation Starters\n\nWhat’s your name?\nWhere do you feel home?\nWhat’s your favorite animal / plant / color / typeface?\nWhen did you use R for the first time?\nHow much experience do you have with ggplot?\nWhich R package are you looking forward to try?"
  },
  {
    "objectID": "00-welcome.html#course-materials-slides",
    "href": "00-welcome.html#course-materials-slides",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Course Materials: Slides",
    "text": "Course Materials: Slides\n z3tt.github.io/dataviz-ugi/\n   → 01-dataviz.html   → 02-concepts-pt1.html   → 03-concepts-pt2.html   → 04-annotations.html   → 05-layout.html   → 06-programing.html"
  },
  {
    "objectID": "00-welcome.html#course-materials-scripts-data-font-files",
    "href": "00-welcome.html#course-materials-scripts-data-font-files",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Course Materials: Scripts, Data & Font Files",
    "text": "Course Materials: Scripts, Data & Font Files\n cedricscherer.com/files/materials.zip"
  },
  {
    "objectID": "05-layout.html#setup",
    "href": "05-layout.html#setup",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setup",
    "text": "Setup\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(stringr)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Asap SemiCondensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\"\n)"
  },
  {
    "objectID": "05-layout.html#discrete-legend",
    "href": "05-layout.html#discrete-legend",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Discrete Legend",
    "text": "Discrete Legend\n\n\npal <- c(\"#3c89d9\", \"#1ec99b\", \"#F7B01B\", \"#a26e7c\")\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_manual(values = pal)"
  },
  {
    "objectID": "05-layout.html#continuous-legend",
    "href": "05-layout.html#continuous-legend",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Continuous Legend",
    "text": "Continuous Legend\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c()"
  },
  {
    "objectID": "05-layout.html#legend-position",
    "href": "05-layout.html#legend-position",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Position",
    "text": "Legend Position\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c() +\n  theme(\n    legend.position = \"bottom\"\n  )"
  },
  {
    "objectID": "05-layout.html#legend-justification",
    "href": "05-layout.html#legend-justification",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Justification",
    "text": "Legend Justification\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c() +\n  theme(\n    legend.position = \"bottom\",\n    legend.justification = \"left\"\n  )"
  },
  {
    "objectID": "05-layout.html#legend-position-1",
    "href": "05-layout.html#legend-position-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Position",
    "text": "Legend Position\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c() +\n  theme(\n    legend.position = c(.25, .85)\n  )"
  },
  {
    "objectID": "05-layout.html#legend-direction",
    "href": "05-layout.html#legend-direction",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Direction",
    "text": "Legend Direction\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c() +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "05-layout.html#legend-types",
    "href": "05-layout.html#legend-types",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Types",
    "text": "Legend Types\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    guide = \"colorbar\"\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "05-layout.html#legend-types-1",
    "href": "05-layout.html#legend-types-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Types",
    "text": "Legend Types\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    guide = \"colorsteps\"\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "05-layout.html#legend-types-2",
    "href": "05-layout.html#legend-types-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Types",
    "text": "Legend Types\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_b(\n    guide = \"colorsteps\"\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "05-layout.html#legend-types-3",
    "href": "05-layout.html#legend-types-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Types",
    "text": "Legend Types\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_b(\n    guide = guide_colorsteps()\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "05-layout.html#legend-styling",
    "href": "05-layout.html#legend-styling",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Styling",
    "text": "Legend Styling\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_b(\n    guide = guide_colorsteps(\n      title.position = \"top\",\n      title.hjust = .5\n    )\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "05-layout.html#legend-styling-1",
    "href": "05-layout.html#legend-styling-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Styling",
    "text": "Legend Styling\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_b(\n    guide = guide_colorsteps(\n      title.position = \"top\",\n      title.hjust = .5,\n      show.limits = TRUE,\n      frame.colour = \"black\",\n      frame.linewidth = 3,\n      barwidth = unit(8, \"lines\")\n    )\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "05-layout.html#legend-styling-2",
    "href": "05-layout.html#legend-styling-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Styling",
    "text": "Legend Styling\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    breaks = 3:10*10,\n    limits = c(30, 100),\n    guide = guide_colorbar(\n      title.position = \"top\",\n      title.hjust = .5,\n      ticks.linewidth = 3,\n      barwidth = unit(20, \"lines\"),\n      barheight = unit(.6, \"lines\")\n    )\n  ) +\n  theme(\n    legend.position = \"top\"\n  )"
  },
  {
    "objectID": "05-layout.html#legend-styling-3",
    "href": "05-layout.html#legend-styling-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Styling",
    "text": "Legend Styling\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    breaks = 3:10*10,\n    limits = c(30, 100),\n    guide = guide_colorbar(\n      title.position = \"top\",\n      title.hjust = .5,\n      ticks.linewidth = 3,\n      draw.ulim = FALSE,\n      draw.llim = FALSE,\n      barwidth = unit(20, \"lines\"),\n      barheight = unit(.6, \"lines\")\n    )\n  ) +\n  theme(\n    legend.position = \"top\"\n  )"
  },
  {
    "objectID": "05-layout.html#legend-styling-4",
    "href": "05-layout.html#legend-styling-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend Styling",
    "text": "Legend Styling\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    breaks = 3:10*10,\n    limits = c(30, 100),\n    guide = guide_colorbar(\n      title.position = \"top\",\n      title.hjust = .5,\n      ticks = FALSE,\n      barwidth = unit(20, \"lines\"),\n      barheight = unit(.6, \"lines\")\n    )\n  ) +\n  theme(\n    legend.position = \"top\"\n  )"
  },
  {
    "objectID": "05-layout.html#legend-with-color-shading",
    "href": "05-layout.html#legend-with-color-shading",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend with Color Shading",
    "text": "Legend with Color Shading\n\n\nlibrary(colorspace)\nshades <- c(lighten(pal, .3),\n                  darken(pal, .3))\n\ng <-\n  bikes %>%\n  arrange(day_night, date) %>%\n  mutate(\n    season_day = paste(\n      str_to_title(season), day_night\n    ),\n    season_day = forcats::fct_inorder(season_day)\n  ) %>%\n  ggplot(\n    aes(x = season, y = count,\n        fill = season_day)\n  ) +\n  stat_summary(\n    geom = \"col\", fun = sum,\n    position = position_dodge2(\n      width = .2, padding = .1\n    )\n  ) +\n  scale_fill_manual(\n    values = shades, name = NULL\n  ) +\n  scale_x_discrete(\n    labels = str_to_title\n  ) +\n  scale_y_continuous(\n    labels = scales::comma_format(),\n    expand = c(0, 0),\n    limits = c(NA, 4500000)\n  ) +\n  labs(x = NULL, y = \"Reported bike shares\") +\n  theme(\n    panel.grid.major.x = element_blank(),\n    axis.title = element_blank()\n  )\n\ng"
  },
  {
    "objectID": "05-layout.html#legend-on-top",
    "href": "05-layout.html#legend-on-top",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Legend on Top",
    "text": "Legend on Top\n\ng +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "05-layout.html#resort-legend",
    "href": "05-layout.html#resort-legend",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Resort Legend",
    "text": "Resort Legend\n\ng +\n  guides(fill = guide_legend(byrow = TRUE)) +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "05-layout.html#key-glyphs",
    "href": "05-layout.html#key-glyphs",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Key Glyphs",
    "text": "Key Glyphs\n\n\nggplot(\n    bikes,\n    aes(x = lubridate::week(date),\n        y = count,\n        color = day_night)\n  ) +\n  stat_summary(\n    geom = \"line\",\n    fun = sum,\n    size = 1\n  ) +\n  scale_color_manual(\n    values = c(\"#28A87D\", \"#663399\"),\n    name = NULL\n  ) +\n  theme(\n    legend.text = element_text(size = 16)\n  )"
  },
  {
    "objectID": "05-layout.html#key-glyphs-1",
    "href": "05-layout.html#key-glyphs-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Key Glyphs",
    "text": "Key Glyphs\n\n\nggplot(\n    bikes,\n    aes(x = lubridate::week(date),\n        y = count,\n        color = day_night)\n  ) +\n  stat_summary(\n    geom = \"line\",\n    fun = sum,\n    key_glyph = \"timeseries\",\n    size = 1\n  ) +\n  scale_color_manual(\n    values = c(\"#28A87D\", \"#663399\"),\n    name = NULL\n  ) +\n  theme(\n    legend.text = element_text(size = 16)\n  )"
  },
  {
    "objectID": "05-layout.html#key-glyphs-2",
    "href": "05-layout.html#key-glyphs-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Key Glyphs",
    "text": "Key Glyphs\n\n\nggplot(\n    bikes,\n    aes(x = lubridate::week(date),\n        y = count,\n        color = day_night)\n  ) +\n  stat_summary(\n    geom = \"line\",\n    fun = sum,\n    key_glyph = \"vline\",\n    size = 1\n  ) +\n  scale_color_manual(\n    values = c(\"#28A87D\", \"#663399\"),\n    name = NULL\n  ) +\n  theme(\n    legend.text = element_text(size = 16)\n  )"
  },
  {
    "objectID": "05-layout.html#patchwork",
    "href": "05-layout.html#patchwork",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "{patchwork}",
    "text": "{patchwork}\n\n# install.packages(\"patchwork\")\nlibrary(patchwork)\n(p1 + p2) / p3"
  },
  {
    "objectID": "05-layout.html#collect-guides",
    "href": "05-layout.html#collect-guides",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "“Collect Guides”",
    "text": "“Collect Guides”\n\n(p1 + p2) / p3 + plot_layout(guides = \"collect\")"
  },
  {
    "objectID": "05-layout.html#apply-theming",
    "href": "05-layout.html#apply-theming",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply Theming",
    "text": "Apply Theming\n\n((p1 + p2) / p3 & theme(legend.justification = \"top\")) + plot_layout(guides = \"collect\")"
  },
  {
    "objectID": "05-layout.html#apply-theming-1",
    "href": "05-layout.html#apply-theming-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply Theming",
    "text": "Apply Theming\n\n(p1 + p2) / p3 & theme(legend.position = \"none\", plot.background = element_rect(color = \"black\", size = 3))"
  },
  {
    "objectID": "05-layout.html#adjust-widths-and-heights",
    "href": "05-layout.html#adjust-widths-and-heights",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Adjust Widths and Heights",
    "text": "Adjust Widths and Heights\n\n((p1 + p2) / p3 & theme(legend.position = \"none\")) +\n  plot_layout(heights = c(.2, .1), widths = c(2, 1))"
  },
  {
    "objectID": "05-layout.html#use-a-custom-layout",
    "href": "05-layout.html#use-a-custom-layout",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Use A Custom Layout",
    "text": "Use A Custom Layout\n\npicasso <- \"\nAAAAAA#BBBB\nCCCCCCCCC##\nCCCCCCCCC##\"\n(p1 + p2 + p3 & theme(legend.position = \"none\")) + plot_layout(design = picasso)"
  },
  {
    "objectID": "05-layout.html#add-labels",
    "href": "05-layout.html#add-labels",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Labels",
    "text": "Add Labels\n\npl1 <- p1 + labs(tag = NULL, title = \"Plot One\") + theme(legend.position = \"none\")\npl2 <- p2 + labs(tag = NULL, title = \"Plot Two\") + theme(legend.position = \"none\")\npl3 <- p3 + labs(tag = NULL, title = \"Plot Three\") + theme(legend.position = \"none\")"
  },
  {
    "objectID": "05-layout.html#add-labels-1",
    "href": "05-layout.html#add-labels-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Labels",
    "text": "Add Labels\n\n(pl1 + pl2) / pl3 +\n  plot_annotation(tag_levels = \"1\", tag_prefix = \"P\", title = \"An overarching title for all 3 plots, placed on the very top while all other titles are sitting below the tags.\")"
  },
  {
    "objectID": "05-layout.html#add-text",
    "href": "05-layout.html#add-text",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Text",
    "text": "Add Text\n\nGraphicCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntext <- tibble(\n  x = 0, y = 0, label = \"Lorem ipsum dolor sit amet, **consectetur adipiscing elit**, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation <b style='color:#000080;'>ullamco laboris nisi</b> ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat <b style='color:#cc0000;'>cupidatat non proident</b>, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n)\n\npt <- ggplot(text, aes(x = x, y = y)) +\n  ggtext::geom_textbox(\n    aes(label = label),\n    box.color = NA, width = unit(23, \"lines\"),\n    family = \"Pally\", color = \"grey40\", size = 6.5, lineheight = 1.4\n  ) +\n  coord_cartesian(expand = FALSE, clip = \"off\") +\n  theme_void()\n\npt"
  },
  {
    "objectID": "05-layout.html#add-text-1",
    "href": "05-layout.html#add-text-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Text",
    "text": "Add Text\n\n(p1 + pt) / p3"
  },
  {
    "objectID": "05-layout.html#add-inset-plots",
    "href": "05-layout.html#add-inset-plots",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Inset Plots",
    "text": "Add Inset Plots\n\npl1 + inset_element(pl2, l = .6, b = .1, r = 1, t = .6)"
  },
  {
    "objectID": "05-layout.html#add-inset-plots-1",
    "href": "05-layout.html#add-inset-plots-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Inset Plots",
    "text": "Add Inset Plots\n\npl1 + inset_element(pl2, l = .6, b = 0, r = 1, t = .5, align_to = 'full')"
  },
  {
    "objectID": "05-layout.html#add-inset-plots-2",
    "href": "05-layout.html#add-inset-plots-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Inset Plots",
    "text": "Add Inset Plots\n\n(pl1 + inset_element(pl2, l = .6, b = .1, r = 1, t = .6) + pt) / pl3"
  },
  {
    "objectID": "05-layout.html#recap",
    "href": "05-layout.html#recap",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Recap",
    "text": "Recap\n\n\n\nguides are the combination of scales and legends\nlegends can be either modified with the guide_* function in scale_*() or guides() and with the theme() component qualitative\n… while quantitative guides are colorbar, colorsteps or bins\n{patchwork} is the most modern and simplest way to compose plots\n\nuse +, / and | to combine plots\nuse plot_layout() to adjust the layout, widths and heights\nuse plot_annotation() to add tags and general labels\nuse inset_element() to add inset graphics"
  },
  {
    "objectID": "05-layout.html#exercise-1",
    "href": "05-layout.html#exercise-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nCreate the following penguins visualization, as close as possible."
  },
  {
    "objectID": "05-layout.html#exercise-2",
    "href": "05-layout.html#exercise-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nCreate the following gapminder visualization, as close as possible."
  },
  {
    "objectID": "05-layout.html#exercise-1-1",
    "href": "05-layout.html#exercise-1-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nCreate the following penguins visualization, as close as possible."
  },
  {
    "objectID": "05-layout.html#prepare-the-data-set",
    "href": "05-layout.html#prepare-the-data-set",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Prepare the Data Set",
    "text": "Prepare the Data Set\n\nlibrary(palmerpenguins)\n\npenguin_cols <- c(\"#FF8C00\", \"#159090\", \"#A034F0\")\n\npenguins$species <- factor(penguins$species, levels = c(\"Adelie\", \"Gentoo\", \"Chinstrap\"))"
  },
  {
    "objectID": "05-layout.html#prepare-theming",
    "href": "05-layout.html#prepare-theming",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Prepare Theming",
    "text": "Prepare Theming\n\ntheme_set(theme_minimal(\n  base_size = 16, base_family = \"Asap SemiCondensed\"\n))\n\ntheme_update(\n  plot.title = ggtext::element_textbox_simple(\n    size = 20, margin = margin(15, 0, 15, 0),\n    padding = margin(rep(12, 4)), fill = \"grey90\"\n  ),\n  plot.title.position = \"plot\",\n  plot.caption = ggtext::element_markdown(\n    size = 10, color = \"grey50\", margin = margin(12, 0, 6, 0)\n  ),\n  plot.caption.position = \"plot\",\n  plot.tag = element_text(margin = margin(b = 0, l = 15)),\n  plot.background = element_rect(color = \"#f8f8f8\", fill = \"#f8f8f8\"),\n  panel.grid.minor = element_blank(),\n  legend.position = \"none\",\n  axis.title.x = element_text(margin = margin(t = 10)),\n  axis.title.y = element_text(margin = margin(r = 10))\n)"
  },
  {
    "objectID": "05-layout.html#create-bar-plot-species",
    "href": "05-layout.html#create-bar-plot-species",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create Bar Plot Species",
    "text": "Create Bar Plot Species\n\np1 <- ggplot(\n    penguins,\n    aes(x = species, fill = species)\n  ) +\n  geom_bar() +\n  stat_count(\n    geom = \"text\",\n    aes(label = stat(count)),\n    vjust = 1.5, size = 5, color = \"white\", \n    family = \"Tabular\", fontface = \"bold\"\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0),\n    guide = \"none\",\n    limits = c(0, 168)\n  ) +\n  scale_fill_manual(\n    values = penguin_cols\n  ) +\n  labs(\n    x = \"Pygoscelis spec.\", y = NULL \n  ) +\n  theme(\n    panel.grid.major = element_blank(),\n    axis.title.x = element_text(face = \"italic\")\n  )\n\np1"
  },
  {
    "objectID": "05-layout.html#create-bar-plot-species-1",
    "href": "05-layout.html#create-bar-plot-species-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create Bar Plot Species",
    "text": "Create Bar Plot Species"
  },
  {
    "objectID": "05-layout.html#create-bar-plot-islands",
    "href": "05-layout.html#create-bar-plot-islands",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create Bar Plot Islands",
    "text": "Create Bar Plot Islands\n\np2 <- ggplot(\n    penguins,\n    aes(x = island, fill = island)\n  ) +\n  geom_bar() +\n  stat_count(\n    geom = \"text\",\n    aes(label = stat(count)),\n    vjust = 1.5, size = 5, color = \"white\", \n    family = \"Tabular\", fontface = \"bold\"\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0),\n    guide = \"none\",\n    limits = c(0, 168)\n  ) +\n  scale_fill_manual(\n    values = c(\"#9294BE\", \"#D4B7A9\", \"#CF98A3\")\n  ) +\n  labs(\n    x = \"Island\", y = NULL \n  ) +\n  theme(panel.grid.major = element_blank())\n\np2"
  },
  {
    "objectID": "05-layout.html#create-bar-plot-islands-1",
    "href": "05-layout.html#create-bar-plot-islands-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create Bar Plot Islands",
    "text": "Create Bar Plot Islands"
  },
  {
    "objectID": "05-layout.html#create-scatter-plot",
    "href": "05-layout.html#create-scatter-plot",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create Scatter Plot",
    "text": "Create Scatter Plot\n\np3 <- ggplot(\n    penguins,\n    aes(x = flipper_length_mm, y = body_mass_g, \n        color = species)\n  ) +\n  geom_point(size = 3.5, color = \"black\") + \n  geom_point(size = 3, color = \"white\") + \n  geom_point(size = 2, alpha = .3) + \n  stat_smooth(\n    method = \"lm\", se = FALSE,\n    show.legend = FALSE\n  ) +\n  coord_cartesian(\n    clip = \"off\", expand = FALSE, xlim = c(171, 232)\n  ) +\n  scale_x_continuous(\n    labels = function(x) paste(x, \"mm\")\n  ) +\n  scale_y_continuous(\n    labels = function(y) paste(y / 1000, \"kg\")\n  ) +\n  scale_color_manual(\n    values = `penguin_cols`\n  ) +\n  labs(\n    x = \"Flipper length\", y = \"Body mass\" \n  ) \n\np3"
  },
  {
    "objectID": "05-layout.html#create-scatter-plot-1",
    "href": "05-layout.html#create-scatter-plot-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create Scatter Plot",
    "text": "Create Scatter Plot"
  },
  {
    "objectID": "05-layout.html#create-plot-composition",
    "href": "05-layout.html#create-plot-composition",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create Plot Composition",
    "text": "Create Plot Composition\n\nlibrary(patchwork)\n\n((p1 / p2) | p3) +\n  plot_layout(widths = c(.4, 1)) + \n  plot_annotation(\n    title = \"Individual counts per species (A) and island (B) as well as the relationship of physiological metrics (C) for adult *Pygoscelis spec.* penguins, measured between 2007 and 2009 near Palmer Station, Antarctica.\", caption = \"Horst AM, Hill AP, Gorman KB (2020). <span style='font-family:tabular;'>palmerpenguins</span> R package version 0.1.0\",\n    tag_levels = \"A\", tag_suffix = \".\"\n  )"
  },
  {
    "objectID": "05-layout.html#create-plot-composition-1",
    "href": "05-layout.html#create-plot-composition-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create Plot Composition",
    "text": "Create Plot Composition"
  },
  {
    "objectID": "05-layout.html#exercise-2-1",
    "href": "05-layout.html#exercise-2-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nCreate the following gapminder visualization, as close as possible."
  },
  {
    "objectID": "05-layout.html#the-data",
    "href": "05-layout.html#the-data",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "The Data",
    "text": "The Data\nThe famous Gapminder data set\n\nlife expectancy, GDP per capita, and population by country\ncontains complete data covering the years 1952-2007 in 5-year steps\n\n\nlibrary(gapminder)\n\ngapminder\n\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows"
  },
  {
    "objectID": "05-layout.html#data-preparation",
    "href": "05-layout.html#data-preparation",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Data Preparation",
    "text": "Data Preparation\n\n(gm2007 <- filter(gapminder, year == 2007))\n\n# A tibble: 142 × 6\n   country     continent  year lifeExp       pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>     <int>     <dbl>\n 1 Afghanistan Asia       2007    43.8  31889923      975.\n 2 Albania     Europe     2007    76.4   3600523     5937.\n 3 Algeria     Africa     2007    72.3  33333216     6223.\n 4 Angola      Africa     2007    42.7  12420476     4797.\n 5 Argentina   Americas   2007    75.3  40301927    12779.\n 6 Australia   Oceania    2007    81.2  20434176    34435.\n 7 Austria     Europe     2007    79.8   8199783    36126.\n 8 Bahrain     Asia       2007    75.6    708573    29796.\n 9 Bangladesh  Asia       2007    64.1 150448339     1391.\n10 Belgium     Europe     2007    79.4  10392226    33693.\n# ℹ 132 more rows"
  },
  {
    "objectID": "05-layout.html#basic-bubble-plot",
    "href": "05-layout.html#basic-bubble-plot",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Basic Bubble Plot",
    "text": "Basic Bubble Plot\n\nggplot(data = gm2007) + \n  aes(x = log10(gdpPercap), y = lifeExp, \n      color = continent, size = pop) +\n  geom_point(alpha = .5)"
  },
  {
    "objectID": "05-layout.html#adjust-scales",
    "href": "05-layout.html#adjust-scales",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Adjust Scales",
    "text": "Adjust Scales\n\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp,\n                   color = continent, size = pop)) +\n  geom_point(alpha = .5, stroke = .5) +\n  scale_x_log10(breaks = c(500, 1000, 2000, 4000, 8000, 16000, 32000),\n                labels = scales::label_dollar(accuracy = 1), name = \"GDP per capita\") +\n  scale_color_manual(values = continent_colors, name = \"Region:\",\n                     guide = guide_legend(override.aes = list(size = 5))) +\n  scale_size(range = c(3, 30), name = \"Population:\", breaks = c(10, 100, 1000)*1000000, \n             labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\"))"
  },
  {
    "objectID": "05-layout.html#turn-clipping-off",
    "href": "05-layout.html#turn-clipping-off",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Turn Clipping Off",
    "text": "Turn Clipping Off\n\ngm <-\n  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp,\n                   color = continent, size = pop)) +\n  geom_point(alpha = .5, stroke = .5) +\n  scale_x_log10(breaks = c(500, 1000, 2000, 4000, 8000, 16000, 32000),\n                labels = scales::label_dollar(accuracy = 1), name = \"GDP per capita\") +\n  scale_color_manual(values = continent_colors, name = \"Region:\",\n                     guide = guide_legend(override.aes = list(size = 5))) +\n  scale_size(range = c(3, 30), name = \"Population:\", breaks = c(10, 100, 1000)*1000000, \n             labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")) +\n  coord_cartesian(expand = FALSE, clip = \"off\")\n\ngm"
  },
  {
    "objectID": "05-layout.html#polish-plot",
    "href": "05-layout.html#polish-plot",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Polish Plot",
    "text": "Polish Plot\n\ng +\n  labs(y = \"Life expectancy\", title = \"Health & Income of Nations in 2007\", \n       caption = \"Source: Gapminder project\") +\n  theme_minimal(base_family = \"Roboto Condensed\", base_size = 20) +\n  theme(panel.grid.minor = element_blank(),\n        plot.title = element_text(face = \"bold\", hjust = .5, size = rel(1.7), family = \"Hepta Slab\"),\n        plot.title.position = \"plot\",\n        legend.position = c(.9, .35),\n        legend.background = element_rect(color = \"grey87\"),\n        legend.box.just = \"right\",\n        plot.margin = margin(25, 40, 25, 25))"
  },
  {
    "objectID": "06-programing.html#setup",
    "href": "06-programing.html#setup",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Setup",
    "text": "Setup\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Asap SemiCondensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\"\n)"
  },
  {
    "objectID": "06-programing.html#conditional-components",
    "href": "06-programing.html#conditional-components",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Conditional Components",
    "text": "Conditional Components\n\nsmooth <- TRUE\n\nggplot(bikes, aes(x = temp, y = humidity)) +\n  { if(smooth) geom_smooth(color = \"red\") } +\n  geom_point(alpha = .5)"
  },
  {
    "objectID": "06-programing.html#conditional-components-1",
    "href": "06-programing.html#conditional-components-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Conditional Components",
    "text": "Conditional Components\n\nsmooth <- TRUE\n\nggplot(bikes, aes(x = temp, y = humidity)) +\n  { if(smooth) geom_smooth(color = \"red\") } +\n  geom_point(alpha = .5)"
  },
  {
    "objectID": "06-programing.html#conditional-components-2",
    "href": "06-programing.html#conditional-components-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Conditional Components",
    "text": "Conditional Components\n\nsmooth <- FALSE\n\nggplot(bikes, aes(x = temp, y = humidity)) +\n  { if(smooth) geom_smooth(color = \"red\") } +\n  geom_point(alpha = .5)"
  },
  {
    "objectID": "06-programing.html#wrapper-functions-for-plots",
    "href": "06-programing.html#wrapper-functions-for-plots",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Wrapper Functions for Plots",
    "text": "Wrapper Functions for Plots\n\ndraw_scatter <- function(smooth = TRUE) {\n  ggplot(bikes, aes(x = temp, y = humidity)) +\n    { if(smooth) geom_smooth(color = \"red\") } +\n    geom_point(alpha = .5)\n}"
  },
  {
    "objectID": "06-programing.html#wrapper-functions-for-plots-1",
    "href": "06-programing.html#wrapper-functions-for-plots-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Wrapper Functions for Plots",
    "text": "Wrapper Functions for Plots\n\n\ndraw_scatter()"
  },
  {
    "objectID": "06-programing.html#wrapper-functions-for-plots-2",
    "href": "06-programing.html#wrapper-functions-for-plots-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Wrapper Functions for Plots",
    "text": "Wrapper Functions for Plots\n\n\ndraw_scatter(smooth = FALSE)"
  },
  {
    "objectID": "06-programing.html#components-as-functions",
    "href": "06-programing.html#components-as-functions",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Components as Functions",
    "text": "Components as Functions\n\ngeom_scatterfit <- function(pointsize = 1, pointalpha = 1, \n                            method = \"lm\", linecolor = \"red\", ...) {\n  list(\n    geom_point(size = pointsize, alpha = pointalpha, ...),\n    geom_smooth(method = method, color = linecolor, ...)\n  )\n}"
  },
  {
    "objectID": "06-programing.html#components-as-functions-1",
    "href": "06-programing.html#components-as-functions-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Components as Functions",
    "text": "Components as Functions\n\n\nggplot(bikes,\n       aes(x = humidity, y = count)) +\n  geom_scatterfit()"
  },
  {
    "objectID": "06-programing.html#components-as-functions-2",
    "href": "06-programing.html#components-as-functions-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Components as Functions",
    "text": "Components as Functions\n\n\nggplot(bikes,\n       aes(x = humidity, y = count)) +\n  geom_scatterfit(\n    color = \"#28A87D\", \n    linewidth = 3\n  )"
  },
  {
    "objectID": "06-programing.html#components-as-functions-3",
    "href": "06-programing.html#components-as-functions-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Components as Functions",
    "text": "Components as Functions\n\n\nggplot(diamonds, \n       aes(x = carat, y = price)) +\n  geom_scatterfit(\n    pointsize = .5, \n    pointalpha = .1,\n    method = \"gam\",\n    linecolor = \"#EFAC00\"\n  )"
  },
  {
    "objectID": "06-programing.html#components-as-functions-4",
    "href": "06-programing.html#components-as-functions-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Components as Functions",
    "text": "Components as Functions\n\nscales_log <- function(sides = \"xy\") {\n  list(\n    if(stringr::str_detect(sides, \"x\")) {\n      scale_x_log10(\n        breaks = c(10^(1:100)), labels = scales::label_log()\n      )\n    },\n    if(stringr::str_detect(sides, \"y\")) {\n      scale_y_log10(\n        breaks = c(10^(1:100)), labels = scales::label_log()\n      )\n    }\n  )\n}"
  },
  {
    "objectID": "06-programing.html#components-as-functions-5",
    "href": "06-programing.html#components-as-functions-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Components as Functions",
    "text": "Components as Functions\n\n\nggplot(diamonds, \n       aes(x = carat, y = price)) +\n  geom_scatterfit(\n    pointsize = .5, \n    pointalpha = .1,\n    method = \"gam\",\n    linecolor = \"#EFAC00\"\n  ) +\n  scales_log(sides = \"y\")"
  },
  {
    "objectID": "06-programing.html#iterative-graphics",
    "href": "06-programing.html#iterative-graphics",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\ntrends_monthly <- function(grp = \"January\") {\n  bikes |> \n    dplyr::mutate(month = lubridate::month(date, label = TRUE, abbr = FALSE)) |> \n    dplyr::filter(month %in% grp) |> \n    ggplot(aes(x = temp, y = count, color = day_night)) +\n    geom_point(alpha = .2, show.legend = FALSE) +\n    geom_smooth(se = FALSE) +\n    scale_color_manual(values = c(\"#FFA200\", \"#757bc7\")) +\n    labs(title = grp, x = \"Temperature\", y = \"Bike shares\", color = NULL)\n}"
  },
  {
    "objectID": "06-programing.html#iterative-graphics-1",
    "href": "06-programing.html#iterative-graphics-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\n\ntrends_monthly(\"July\")"
  },
  {
    "objectID": "06-programing.html#iterative-graphics-2",
    "href": "06-programing.html#iterative-graphics-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\ntrends_monthly <- function(grp = \"January\") {\n  bikes |> \n    dplyr::mutate(month = lubridate::month(date, label = TRUE, abbr = FALSE)) |> \n    dplyr::filter(month %in% grp) |> \n    ggplot(aes(x = temp, y = count, color = day_night)) +\n    geom_point(alpha = .2, show.legend = FALSE) +\n    geom_smooth(se = FALSE) +\n    # keep axis ranges consistent\n    scale_x_continuous(limits = range(bikes$temp)) +\n    scale_y_continuous(limits = range(bikes$count)) +\n    scale_color_manual(values = c(\"#FFA200\", \"#757bc7\")) +\n    labs(title = grp, x = \"Temperature\", y = \"Bike shares\", color = NULL)\n}"
  },
  {
    "objectID": "06-programing.html#iterative-graphics-3",
    "href": "06-programing.html#iterative-graphics-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\n\ntrends_monthly(\"July\")"
  },
  {
    "objectID": "06-programing.html#iterative-graphics-4",
    "href": "06-programing.html#iterative-graphics-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\nplots <- purrr::map(month.name[1:12], trends_monthly) ## also: ~ trends_monthly(.x)"
  },
  {
    "objectID": "06-programing.html#iterative-graphics-5",
    "href": "06-programing.html#iterative-graphics-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\nplots <- purrr::map(month.name[1:12], trends_monthly) ## also: ~ trends_monthly(.x)\nplots[[9]]"
  },
  {
    "objectID": "06-programing.html#iterative-graphics-6",
    "href": "06-programing.html#iterative-graphics-6",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\nplots <- purrr::map(month.name[1:12], trends_monthly) ## also: ~ trends_monthly(.x)\npatchwork::wrap_plots(plots)"
  },
  {
    "objectID": "06-programing.html#iterative-graphics-7",
    "href": "06-programing.html#iterative-graphics-7",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\nplot_density <- function(data, var, grp = \"\") {\n  ggplot(data, aes(x = !!sym(var))) +\n    geom_density(aes(fill = !!sym(grp)), position = \"identity\",\n                 color = \"grey30\", alpha = .3) +\n    coord_cartesian(expand = FALSE, clip = \"off\") +\n    scale_y_continuous(labels = scales::label_number()) +\n    scale_fill_brewer(palette = \"Dark2\", name = NULL) +\n    theme(legend.position = \"top\")\n}"
  },
  {
    "objectID": "06-programing.html#iterative-graphics-8",
    "href": "06-programing.html#iterative-graphics-8",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\n\nplot_density(\n  bikes, \"count\"\n)"
  },
  {
    "objectID": "06-programing.html#iterative-graphics-9",
    "href": "06-programing.html#iterative-graphics-9",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\nplots <- purrr::map(\n  c(\"count\", \"temp\", \"humidity\", \"wind_speed\"), \n  ~ plot_density(data = bikes, var = .x, grp = \"day_night\")\n)\npatchwork::wrap_plots(plots, nrow = 1)"
  },
  {
    "objectID": "06-programing.html#iterative-graphics-10",
    "href": "06-programing.html#iterative-graphics-10",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Iterative Graphics",
    "text": "Iterative Graphics\n\nplots <- purrr::map(\n  names(dplyr::select(midwest, where(is.numeric))),\n  ~plot_density(data = midwest, var = .x)\n)\npatchwork::wrap_plots(plots)"
  },
  {
    "objectID": "06-programing.html#complete-themes-whats-inside",
    "href": "06-programing.html#complete-themes-whats-inside",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Complete Themes: What’s Inside?",
    "text": "Complete Themes: What’s Inside?\n\ntheme_grey\n\nfunction (base_size = 11, base_family = \"\", base_line_size = base_size/22, \n    base_rect_size = base_size/22) \n{\n    half_line <- base_size/2\n    t <- theme(line = element_line(colour = \"black\", linewidth = base_line_size, \n        linetype = 1, lineend = \"butt\"), rect = element_rect(fill = \"white\", \n        colour = \"black\", linewidth = base_rect_size, linetype = 1), \n        text = element_text(family = base_family, face = \"plain\", \n            colour = \"black\", size = base_size, lineheight = 0.9, \n            hjust = 0.5, vjust = 0.5, angle = 0, margin = margin(), \n            debug = FALSE), axis.line = element_blank(), axis.line.x = NULL, \n        axis.line.y = NULL, axis.text = element_text(size = rel(0.8), \n            colour = \"grey30\"), axis.text.x = element_text(margin = margin(t = 0.8 * \n            half_line/2), vjust = 1), axis.text.x.top = element_text(margin = margin(b = 0.8 * \n            half_line/2), vjust = 0), axis.text.y = element_text(margin = margin(r = 0.8 * \n            half_line/2), hjust = 1), axis.text.y.right = element_text(margin = margin(l = 0.8 * \n            half_line/2), hjust = 0), axis.ticks = element_line(colour = \"grey20\"), \n        axis.ticks.length = unit(half_line/2, \"pt\"), axis.ticks.length.x = NULL, \n        axis.ticks.length.x.top = NULL, axis.ticks.length.x.bottom = NULL, \n        axis.ticks.length.y = NULL, axis.ticks.length.y.left = NULL, \n        axis.ticks.length.y.right = NULL, axis.title.x = element_text(margin = margin(t = half_line/2), \n            vjust = 1), axis.title.x.top = element_text(margin = margin(b = half_line/2), \n            vjust = 0), axis.title.y = element_text(angle = 90, \n            margin = margin(r = half_line/2), vjust = 1), axis.title.y.right = element_text(angle = -90, \n            margin = margin(l = half_line/2), vjust = 0), legend.background = element_rect(colour = NA), \n        legend.spacing = unit(2 * half_line, \"pt\"), legend.spacing.x = NULL, \n        legend.spacing.y = NULL, legend.margin = margin(half_line, \n            half_line, half_line, half_line), legend.key = element_rect(fill = \"grey95\", \n            colour = NA), legend.key.size = unit(1.2, \"lines\"), \n        legend.key.height = NULL, legend.key.width = NULL, legend.text = element_text(size = rel(0.8)), \n        legend.text.align = NULL, legend.title = element_text(hjust = 0), \n        legend.title.align = NULL, legend.position = \"right\", \n        legend.direction = NULL, legend.justification = \"center\", \n        legend.box = NULL, legend.box.margin = margin(0, 0, 0, \n            0, \"cm\"), legend.box.background = element_blank(), \n        legend.box.spacing = unit(2 * half_line, \"pt\"), panel.background = element_rect(fill = \"grey92\", \n            colour = NA), panel.border = element_blank(), panel.grid = element_line(colour = \"white\"), \n        panel.grid.minor = element_line(linewidth = rel(0.5)), \n        panel.spacing = unit(half_line, \"pt\"), panel.spacing.x = NULL, \n        panel.spacing.y = NULL, panel.ontop = FALSE, strip.background = element_rect(fill = \"grey85\", \n            colour = NA), strip.clip = \"inherit\", strip.text = element_text(colour = \"grey10\", \n            size = rel(0.8), margin = margin(0.8 * half_line, \n                0.8 * half_line, 0.8 * half_line, 0.8 * half_line)), \n        strip.text.x = NULL, strip.text.y = element_text(angle = -90), \n        strip.text.y.left = element_text(angle = 90), strip.placement = \"inside\", \n        strip.placement.x = NULL, strip.placement.y = NULL, strip.switch.pad.grid = unit(half_line/2, \n            \"pt\"), strip.switch.pad.wrap = unit(half_line/2, \n            \"pt\"), plot.background = element_rect(colour = \"white\"), \n        plot.title = element_text(size = rel(1.2), hjust = 0, \n            vjust = 1, margin = margin(b = half_line)), plot.title.position = \"panel\", \n        plot.subtitle = element_text(hjust = 0, vjust = 1, margin = margin(b = half_line)), \n        plot.caption = element_text(size = rel(0.8), hjust = 1, \n            vjust = 1, margin = margin(t = half_line)), plot.caption.position = \"panel\", \n        plot.tag = element_text(size = rel(1.2), hjust = 0.5, \n            vjust = 0.5), plot.tag.position = \"topleft\", plot.margin = margin(half_line, \n            half_line, half_line, half_line), complete = TRUE)\n    ggplot_global$theme_all_null %+replace% t\n}\n<bytecode: 0x10d2abc48>\n<environment: namespace:ggplot2>"
  },
  {
    "objectID": "06-programing.html#complete-themes-whats-inside-1",
    "href": "06-programing.html#complete-themes-whats-inside-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Complete Themes: What’s Inside?",
    "text": "Complete Themes: What’s Inside?\n\ntheme_minimal\n\nfunction (base_size = 11, base_family = \"\", base_line_size = base_size/22, \n    base_rect_size = base_size/22) \n{\n    theme_bw(base_size = base_size, base_family = base_family, \n        base_line_size = base_line_size, base_rect_size = base_rect_size) %+replace% \n        theme(axis.ticks = element_blank(), legend.background = element_blank(), \n            legend.key = element_blank(), panel.background = element_blank(), \n            panel.border = element_blank(), strip.background = element_blank(), \n            plot.background = element_blank(), complete = TRUE)\n}\n<bytecode: 0x15b3f64b0>\n<environment: namespace:ggplot2>"
  },
  {
    "objectID": "06-programing.html#create-a-custom-theme",
    "href": "06-programing.html#create-a-custom-theme",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create a Custom Theme",
    "text": "Create a Custom Theme\n\ntheme_asap <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                       base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) \n}"
  },
  {
    "objectID": "06-programing.html#create-a-custom-theme-1",
    "href": "06-programing.html#create-a-custom-theme-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create a Custom Theme",
    "text": "Create a Custom Theme\n\ntheme_asap <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                       base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size)  %+replace%\n    theme(\n      # add your theme changes here\n    )\n}"
  },
  {
    "objectID": "06-programing.html#create-a-custom-theme-2",
    "href": "06-programing.html#create-a-custom-theme-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create a Custom Theme",
    "text": "Create a Custom Theme\n\ntheme_asap <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                       base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) %+replace%\n    theme(\n      plot.title = element_text(size = rel(1.3), margin = margin(b = base_size/2),\n                                family = \"Asap SemiCondensed Extrabold\", hjust = 0),\n      plot.title.position = \"plot\",\n      plot.caption = element_text(color = \"grey30\", margin = margin(t = base_size),\n                                  size = rel(0.8), hjust = 1, vjust = 1),\n      plot.caption.position = \"plot\",\n      axis.title.x = element_text(hjust = 0, vjust = 0, margin = margin(t = base_size/3)),\n      axis.title.y = element_text(hjust = 1, vjust = 0, angle = 90, margin = margin(r = base_size/3)),\n      panel.background = element_rect(fill = \"white\", color = \"grey20\"), \n      panel.border = element_rect(fill = NA, color = \"grey20\"), \n      plot.background = element_rect(fill = \"grey85\", color = NA), \n      legend.justification = \"top\",\n      strip.text = element_text(size = rel(1.05), margin = margin(base_size/2, 0, base_size/2, 0)),\n      panel.grid.minor = element_blank(), \n      complete = TRUE\n    )\n}"
  },
  {
    "objectID": "06-programing.html#apply-the-custom-theme",
    "href": "06-programing.html#apply-the-custom-theme",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\ng <- \n  ggplot(bikes, aes(x = temp, y = count, color = day_night)) +\n  geom_point(alpha = .3, size = 2) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(panel.grid.minor = element_blank())"
  },
  {
    "objectID": "06-programing.html#apply-the-custom-theme-1",
    "href": "06-programing.html#apply-the-custom-theme-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\n\ng + \n  theme_asap()"
  },
  {
    "objectID": "06-programing.html#modify-an-existing-theme",
    "href": "06-programing.html#modify-an-existing-theme",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Modify an Existing Theme",
    "text": "Modify an Existing Theme\n ⁠%+replace%\n\nreplaces the entire element; any element of a theme not specified in e2 will not be present in the resulting theme (i.e. NULL).Thus this operator can be used to overwrite an entire theme.\n\n\n +\n\nupdates the elements of e1 that differ from elements specified (not NULL) in e2.Thus this operator can be used to incrementally add or modify attributes of a ggplot theme."
  },
  {
    "objectID": "06-programing.html#create-a-custom-theme-3",
    "href": "06-programing.html#create-a-custom-theme-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create a Custom Theme",
    "text": "Create a Custom Theme\n\ntheme_asap_plus <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                            base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme( \n      plot.title = element_text(size = rel(1.3), hjust = 0,\n                                family = \"Asap SemiCondensed Extrabold\"),\n      plot.title.position = \"plot\",\n      plot.caption = element_text(color = \"grey30\", margin = margin(t = base_size)),\n      plot.caption.position = \"plot\",\n      axis.title.x = element_text(hjust = 0, margin = margin(t = base_size/3)),\n      axis.title.y = element_text(hjust = 1, margin = margin(r = base_size/3)),\n      panel.background = element_rect(fill = \"white\", color = \"grey20\"), \n      panel.border = element_rect(fill = NA, color = \"grey20\"), \n      plot.background = element_rect(fill = \"grey85\", color = NA), \n      legend.justification = \"top\",\n      strip.text = element_text(size = rel(1.05), margin = margin(base_size/2, 0, base_size/2, 0)),\n      panel.grid.minor = element_blank()\n    )\n}"
  },
  {
    "objectID": "06-programing.html#versus-replace",
    "href": "06-programing.html#versus-replace",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "+ versus %+replace%",
    "text": "+ versus %+replace%\n\n\n\ng + theme_asap_plus()\n\n\n\n\n\n\ng + theme_asap_replace()"
  },
  {
    "objectID": "06-programing.html#modify-the-custom-theme",
    "href": "06-programing.html#modify-the-custom-theme",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Modify the Custom Theme",
    "text": "Modify the Custom Theme\n\n\ng + \n  theme_asap() +\n  theme(\n    legend.position = \"top\",\n    plot.background = element_rect(\n      fill = NA, color = NA\n    )\n  )"
  },
  {
    "objectID": "06-programing.html#modify-the-custom-theme-1",
    "href": "06-programing.html#modify-the-custom-theme-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Modify the Custom Theme",
    "text": "Modify the Custom Theme\n\n\ng + \n  theme_asap(\n    base_size = 9,\n    base_family = \"Hepta Slab\"\n  )"
  },
  {
    "objectID": "06-programing.html#modify-the-custom-theme-2",
    "href": "06-programing.html#modify-the-custom-theme-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Modify the Custom Theme",
    "text": "Modify the Custom Theme\n\n\ng + \n  theme_asap(\n    base_size = 9,\n    base_family = \"Hepta Slab\"\n  ) +\n  theme(\n    plot.title = element_text(\n      family = \"Hepta Slab\"\n    )\n  )"
  },
  {
    "objectID": "06-programing.html#create-a-custom-theme-4",
    "href": "06-programing.html#create-a-custom-theme-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Create a Custom Theme",
    "text": "Create a Custom Theme\n\ntheme_asap_title <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                             title_family = \"Asap SemiCondensed Extrabold\",\n                             base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  if (title_family == \"Asap SemiCondensed Extrabold\") {\n    register_variant(name = \"Asap SemiCondensed Extrabold\",\n                     family = \"Asap SemiCondensed\",\n                     weight = \"ultrabold\")\n  }\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme(\n      plot.title = element_text(size = rel(1.3), hjust = 0, family = title_family),\n      # fill in other theme adjustments here\n    )\n}"
  },
  {
    "objectID": "06-programing.html#apply-the-custom-theme-2",
    "href": "06-programing.html#apply-the-custom-theme-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\n\ng +\n  theme_asap_title(\n    base_size = 9,\n    base_family = \"Hepta Slab\",\n    title_family = \"Hepta Slab\"\n  )"
  },
  {
    "objectID": "06-programing.html#advanced-font-handling-for-themes",
    "href": "06-programing.html#advanced-font-handling-for-themes",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Advanced Font Handling (for Themes)",
    "text": "Advanced Font Handling (for Themes)\n\ntheme_fonts <- function(base_size = 12, base_line_size = base_size/22, \n                        base_rect_size = base_size/22) {\n  \n  unavailable <- vector(\"character\")\n  \n  if (sum(grepl(\"Hepta Slab\", systemfonts::system_fonts()$family)) > 0) {\n    systemfonts::register_variant(\n      name = \"Hepta Slab Extrabold\",\n      family = \"Hepta Slab\",\n      weight = \"ultrabold\"\n    )\n    title_family <- \"Hepta Slab Extrabold\"\n  } else {\n    title_family <- \"\"\n    unavailable <- c(unavailable, \"Hepta Slab\")\n  }\n  \n  if (sum(grepl(\"Spline Sans\", systemfonts::system_fonts()$family)) > 0) {\n    base_family <- \"Spline Sans\"\n  } else {\n    base_family <- \"\"\n    unavailable <- c(unavailable, \"Spline Sans\")\n  }\n  \n  if (length(unavailable) > 0) {\n    unavailable <- data.frame(\n      name = unavailable, \n      url = paste0(\"https://fonts.google.com/specimen/\", sub(\" \", \"+\", unavailable))\n    )\n    message(paste(\n      \"Using system default typefaces.\", \n      \"For proper use, please install the following typeface(s):\",\n      paste0(\"  - \", unavailable$name, \": \", unavailable$url, collapse = \"\\n\"),\n      \"Then restart your R session.\",\n      sep = \"\\n\"\n    ))\n  }\n  \n  theme_asap(base_size = base_size, base_family = base_family, \n             base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme(\n      plot.title = element_text(size = rel(1.3), hjust = 0, family = title_family)\n    )\n}"
  },
  {
    "objectID": "06-programing.html#apply-the-custom-theme-3",
    "href": "06-programing.html#apply-the-custom-theme-3",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\ng + theme_fonts()\n\nUsing system default typefaces.For proper use, please install the following typeface(s): - Hepta Slab: https://fonts.google.com/specimen/Hepta+Slab - Spline: https://fonts.google.com/specimen/Spline+SansThen restart your R session."
  },
  {
    "objectID": "06-programing.html#apply-the-custom-theme-4",
    "href": "06-programing.html#apply-the-custom-theme-4",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\n\ng + theme_fonts()"
  },
  {
    "objectID": "06-programing.html#add-more-arguments",
    "href": "06-programing.html#add-more-arguments",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add More Arguments",
    "text": "Add More Arguments\n\n\nturn grid lines on and off\ndefine alternative styles\nset a tabular fonts for axis and legend text\nadjust legend position\nadd/remove plot margin\ncontrol rendering of text elements\n…\n\n\n\nPro: Users don’t have to use theme().\n\n\nCon: Users don’t have to use theme()."
  },
  {
    "objectID": "06-programing.html#add-more-arguments-1",
    "href": "06-programing.html#add-more-arguments-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add More Arguments",
    "text": "Add More Arguments\n\nturn grid lines on and off\ndefine alternative styles\nset a tabular fonts for axis and legend text\nadjust legend position\nadd/remove plot margin\ncontrol rendering of text elements\n…\n\nPro: Users don’t have to use theme().\nCon: Users don’t have to use theme()."
  },
  {
    "objectID": "06-programing.html#add-more-arguments-2",
    "href": "06-programing.html#add-more-arguments-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add More Arguments",
    "text": "Add More Arguments\n\ntheme_asap_grid <- function(base_size = 13, base_family = \"Asap SemiCondensed\", grid = \"xy\", \n                            base_line_size = base_size/22, base_rect_size = base_size/22) {\n  out <- \n    theme_minimal(base_size = base_size, base_family = base_family, \n                  base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme(\n      panel.grid.major = element_blank(),\n      axis.ticks = element_line(color = \"grey20\"),\n      axis.ticks.length = unit(base_size/2, \"pt\"),\n      # fill in other theme adjustments here\n    )\n  \n  if (stringr::str_detect(grid, \"x|X\")) {\n    out <- out + theme(panel.grid.major.x = element_line(color = \"grey87\"),\n                       axis.ticks.x = element_blank(),\n                       axis.ticks.length.x = unit(base_size/6, \"pt\"))\n  }\n  if (stringr::str_detect(grid, \"y|Y\")) {\n    out <- out + theme(panel.grid.major.y = element_line(color = \"grey87\"),\n                       axis.ticks.y = element_blank(),\n                       axis.ticks.length.y = unit(base_size/4, \"pt\"))\n  }\n  \n  return(out)\n}"
  },
  {
    "objectID": "06-programing.html#apply-the-custom-theme-5",
    "href": "06-programing.html#apply-the-custom-theme-5",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\n\ng + \n  theme_asap_grid(\n    grid = \"y\"\n  )"
  },
  {
    "objectID": "06-programing.html#apply-the-custom-theme-6",
    "href": "06-programing.html#apply-the-custom-theme-6",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\n\n\ng + theme_asap_grid()\n\n\n\n\n\ng + theme_asap_grid(grid = \"none\")"
  },
  {
    "objectID": "06-programing.html#apply-the-custom-theme-7",
    "href": "06-programing.html#apply-the-custom-theme-7",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\n\ng + \n  theme_asap_grid(\n    grid = \"all\"\n  )"
  },
  {
    "objectID": "06-programing.html#add-checks-to-the-custom-theme",
    "href": "06-programing.html#add-checks-to-the-custom-theme",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Add Checks to the Custom Theme",
    "text": "Add Checks to the Custom Theme\n\ntheme_asap_grid <- function(base_size = 13, base_family = \"Asap SemiCondensed\", grid = \"xy\", \n                            base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  if(!stringr::str_detect(grid, \"none|x|X|y|Y\")) stop('grid must be a character: \"none\" or any combination of \"X\", \"Y\", \"x\" and \"y\".')\n  \n  out <- \n    theme_minimal(base_size = base_size, base_family = base_family, \n                  base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme(\n      panel.grid.major = element_blank(),\n      axis.ticks = element_line(color = \"grey20\"),\n      axis.ticks.length = unit(base_size/2, \"pt\"),\n      # fill in other theme adjustments here\n    )\n  \n  if (stringr::str_detect(grid, \"x|X\")) {\n    out <- out + theme(panel.grid.major.x = element_line(color = \"grey87\"),\n                       axis.ticks.x = element_blank(),\n                       axis.ticks.length.x = unit(base_size/6, \"pt\"))\n  }\n  if (stringr::str_detect(grid, \"y|Y\")) {\n    out <- out + theme(panel.grid.major.y = element_line(color = \"grey87\"),\n                       axis.ticks.y = element_blank(),\n                       axis.ticks.length.y = unit(base_size/4, \"pt\"))\n  }\n  \n  return(out)\n}"
  },
  {
    "objectID": "06-programing.html#apply-the-custom-theme-8",
    "href": "06-programing.html#apply-the-custom-theme-8",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply the Custom Theme",
    "text": "Apply the Custom Theme\n\ng + \n  theme_asap_grid(\n    grid = \"all\"\n  )\n\nError in theme_asap_grid(grid = “all”) :grid must be a character: “none” or any combination of “X”, “Y”, “x” and “y”."
  },
  {
    "objectID": "06-programing.html#recap",
    "href": "06-programing.html#recap",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Recap",
    "text": "Recap\n\n\n\ndefine conditional components, custom layers and functions to generate plots more efficiently and to iterate over multiple inputs\nuse patchwork::wrap_plots() to create grids from plot lists\napply complete themes via theme_*() and modify theme defaults via theme()\nchange the appearance for all plots with theme_set() and theme_update()\n{systemfonts} allows to use non-default typefaces and register font variants\nuse the source code of complete themes to create a custom theme\nadd additional arguments to allow for different styles and settings"
  },
  {
    "objectID": "06-programing.html#exercise-1",
    "href": "06-programing.html#exercise-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nCreate a function that plots the famous Gapminder chart, highlighting one of the continents.\n\nExtend the following code in to annotate a continent your choice of with {ggforce}.\nTurn the code into a function with the utility to annotate any continent.\nOptional: Create a second function to highlight a country."
  },
  {
    "objectID": "06-programing.html#exercise-2",
    "href": "06-programing.html#exercise-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nCreate a corporate or funny custom theme.\n\nMake use of an existing complete theme to get started.\nPick a non-default font (or multiple) for your theme.\nOptional: Try working with font variants.\nOptional: Add other helpful arguments to your theme_* function."
  },
  {
    "objectID": "06-programing.html#exercise-2-1",
    "href": "06-programing.html#exercise-2-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nCreate a corporate or funny custom theme.\n\nMake use of an existing complete theme to get started.\nPick a non-default font (or multiple).\nOptional: Try working with font variants.\nOptional: Add other helpful arguments to your theme_* function.\n\nShowcase your theme using some example graphics.\n\nSave the plots to disk and share them with the group.\nDid you add some additional arguments?Feel free to share your thoughts on “why” and “how”."
  },
  {
    "objectID": "06-programing.html#gapminder-bubble-chart",
    "href": "06-programing.html#gapminder-bubble-chart",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Gapminder Bubble Chart",
    "text": "Gapminder Bubble Chart\n\n# install.packages(\"gapminder\")\n\nlibrary(gapminder)\nlibrary(dplyr)\nlibrary(ggplot2)\n\ngm2007 <- filter(gapminder, year == 2007)\n\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(\n    aes(size = pop), alpha = .5\n  ) +\n  scale_x_log10(\n    breaks = c(500, 2000, 8000, 32000),\n    labels = scales::label_dollar(accuracy = 1)\n  ) +\n  scale_size(\n    range = c(1, 12), name = \"Population:\", \n    breaks = c(10, 100, 1000)*1000000, \n    labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n  ) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n  theme(panel.grid.minor = element_blank())"
  },
  {
    "objectID": "06-programing.html#annotate-continents",
    "href": "06-programing.html#annotate-continents",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Annotate Continents",
    "text": "Annotate Continents\n\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(\n    aes(size = pop), alpha = .5, color = \"grey60\"\n  ) +\n  geom_point( \n    data = filter(gm2007, continent == \"Americas\"),\n    aes(size = pop), shape = 1, stroke = .7\n  ) +\n  ggforce::geom_mark_hull(\n    aes(label = continent, filter = continent == \"Americas\"),\n    expand = unit(10, \"pt\"), con.cap = unit(1, \"mm\"),\n    label.family = \"Asap SemiCondensed\", label.fontsize = 15\n  ) +\n  scale_x_log10(\n    breaks = c(500, 2000, 8000, 32000),\n    labels = scales::label_dollar(accuracy = 1)\n  ) +\n  scale_size(\n    range = c(1, 12), name = \"Population:\",\n    breaks = c(10, 100, 1000)*1000000,\n    labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n  ) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n  theme(panel.grid.minor = element_blank())"
  },
  {
    "objectID": "06-programing.html#function-to-highlight-a-continent",
    "href": "06-programing.html#function-to-highlight-a-continent",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Function to Highlight a Continent",
    "text": "Function to Highlight a Continent\n\ndraw_gp_continent <- function(grp) {\n  \n  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) + \n    geom_point( \n      aes(size = pop), alpha = .5, color = \"grey60\"\n    ) +\n    geom_point( \n      data = filter(gm2007, continent == grp),\n      aes(size = pop), shape = 1, stroke = .7\n    ) +\n    ggforce::geom_mark_hull(\n      aes(label = continent, filter = continent == grp),\n      expand = unit(10, \"pt\"), con.cap = unit(1, \"mm\"),\n      label.family = \"Asap SemiCondensed\", label.fontsize = 15\n    ) +\n    scale_x_log10(\n      breaks = c(500, 2000, 8000, 32000),\n      labels = scales::label_dollar(accuracy = 1)\n    ) +\n    scale_size(\n      range = c(1, 12), name = \"Population:\", \n      breaks = c(10, 100, 1000)*1000000, \n      labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n    ) +\n    labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n    theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n    theme(panel.grid.minor = element_blank())\n  \n}"
  },
  {
    "objectID": "06-programing.html#function-to-highlight-a-country",
    "href": "06-programing.html#function-to-highlight-a-country",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Function to Highlight a Country",
    "text": "Function to Highlight a Country\n\ndraw_gp_country <- function(grp) {\n  \n  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) + \n    geom_point( \n      aes(size = pop), alpha = .5, color = \"grey60\"\n    ) +\n    ggforce::geom_mark_circle(\n      aes(label = country, filter = country == grp),\n      expand = unit(15, \"pt\"), con.cap = unit(0, \"mm\"),\n      # expand = unit(0, \"pt\"), con.cap = unit(0, \"mm\"),\n      label.family = \"Asap SemiCondensed\", label.fontsize = 15\n    ) +\n    geom_point( \n      data = filter(gm2007, country == grp),\n      aes(size = pop), color = \"#9C55E3\", show.legend = FALSE\n    ) +\n    scale_x_log10(\n      breaks = c(500, 2000, 8000, 32000),\n      labels = scales::label_dollar(accuracy = 1)\n    ) +\n    scale_size(\n      range = c(1, 12), name = \"Population:\", \n      breaks = c(10, 100, 1000)*1000000, \n      labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n    ) +\n    labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n    theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n    theme(panel.grid.minor = element_blank())\n  \n}"
  },
  {
    "objectID": "06-programing.html#exercise-2-2",
    "href": "06-programing.html#exercise-2-2",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nCreate a corporate or funny custom theme.\n\nMake use of an existing complete theme to get started.\nPick a non-default font (or multiple).\nOptional: Try working with font variants.\nOptional: Add other helpful arguments to your theme_* function.\n\nShowcase your theme using some example graphics.\n\nSave the plots to disk and share them with the group.\nDid you add some additional arguments?Feel free to share your thoughts on “why” and “how”."
  },
  {
    "objectID": "06-programing.html#preparation",
    "href": "06-programing.html#preparation",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Preparation",
    "text": "Preparation\n\nlibrary(ggplot2)"
  },
  {
    "objectID": "06-programing.html#custom-theme",
    "href": "06-programing.html#custom-theme",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Custom Theme",
    "text": "Custom Theme\n\ntheme_bulls <- function(base_size = 18, base_family = \"College Block\", \n                        base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_bw(base_size = base_size, base_family = base_family, \n           base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme( \n      plot.title = element_text(size = rel(2), color = \"white\", margin = margin(b = base_size/2)),\n      plot.subtitle = element_text(margin = margin(t = -base_size/4, b = base_size/2)),\n      plot.caption = element_text(color = \"black\", size = rel(.7), hjust = 0),\n      plot.title.position = \"plot\",\n      plot.caption.position = \"plot\",\n      axis.title = element_text(color = \"white\"),\n      axis.title.x = element_text(hjust = 1, margin = margin(t = base_size/2)),\n      axis.title.y = element_text(hjust = 1, margin = margin(r = base_size/2)),\n      axis.text = element_text(color = \"black\"),\n      axis.ticks = element_line(color = \"black\"),\n      panel.background = element_rect(fill = \"#dfbb85\", color = \"white\", linewidth = base_size/4), \n      panel.border = element_rect(fill = NA, color = \"black\", linewidth = base_size/10), \n      plot.background = element_rect(fill = \"#CE1141\", color = \"black\", linewidth = base_size/4), \n      legend.background = element_rect(fill = \"transparent\", color = \"black\"),\n      legend.justification = \"top\",\n      strip.text = element_text(size = rel(1.25), color = \"white\"),\n      panel.grid.major = element_line(color = \"white\"),\n      panel.grid.minor = element_blank(),\n      plot.margin = margin(rep(base_size, 4))\n    )\n}"
  },
  {
    "objectID": "06-programing.html#apply-theme",
    "href": "06-programing.html#apply-theme",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Apply Theme",
    "text": "Apply Theme\n\ndata <- readr::read_csv(\"https://query.data.world/s/cejs4o4gdt6autofsse7whhqnnmaii?dws=00000\")\n\nggplot(filter(data, Team == \"Chicago\"), aes(x = Pts, y = Reb)) +\n  geom_point(shape = \"🏀\", size = 5) +\n  labs(title = \"Let's Go Bulls! ⛹️️\", x = \"Points scored\", y = \"Rebounds\", \n       caption = \"Data: hoopsstats.com\") +\n  theme_bulls()"
  },
  {
    "objectID": "06-programing.html#custom-theme-1",
    "href": "06-programing.html#custom-theme-1",
    "title": "Engaging & Reproducible Data Visualization",
    "section": "Custom Theme",
    "text": "Custom Theme\n\ntheme_nba <- function(base_size = 18, base_family = \"College Block\", \n                      base_line_size = base_size/22, base_rect_size = base_size/22,\n                      team = \"Bulls\") {\n  \n  if(!team %in% c(\"Bulls\", \"Lakers\", \"Nuggets\", \"Celtics\", \"Knicks\", \"Heat\", \"Hornets\", \"Sixers\", \"Timberwolves\", \"Pelicans\", \"Suns\")) stop('team should be one of \"Bulls\", \"Lakers\", \"Nuggets\", \"Celtics\", \"Knicks\", \"Heat\", \"Hornets\", \"Sixers\", \"Timberwolves\", \"Pelicans\", or \"Suns\".')\n  \n  colors <- data.frame(\n    Bulls = c(\"#CE1141\", \"#FFFFFF\", \"#000000\"),\n    Lakers = c(\"#552583\", \"#FDB927\", \"#000000\"),\n    Nuggets = c(\"#8B2131\", \"#FEC524\", \"#0E2240\"),\n    Celtics = c(\"#007A33\", \"#FFFFFF\", \"#BA9653\"),\n    Knicks = c(\"#006BB6\", \"#F58426\", \"#BEC0C2\"),\n    Heat = c(\"#000000\", \"#F9A01B\", \"#98002E\"),\n    Hornets = c(\"#1D1160\", \"#A1A1A4\", \"#00788C\"),\n    Sixers = c(\"#006BB6\", \"#ED174C\", \"#002B5C\"),\n    Timberwolves = c(\"#0C2340\", \"#78BE20\", \"#9EA2A2\"),\n    Pelicans = c(\"#0C2340\", \"#C8102E\", \"#85714D\"),\n    Suns = c(\"#1D1160\", \"#E56020\", \"#63727A\")\n  )\n  colors <- unname(colors[, team])\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n           base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme( \n      plot.title = element_text(size = rel(2), color = colors[2], margin = margin(b = base_size/2)),\n      plot.subtitle = element_text(color = colors[3], margin = margin(t = -base_size/4, b = base_size/2)),\n      plot.caption = element_text(color = colors[3], size = rel(.7), hjust = 0),\n      plot.title.position = \"plot\",\n      plot.caption.position = \"plot\",\n      axis.title = element_text(color = colors[2]),\n      axis.title.x = element_text(hjust = 1, margin = margin(t = base_size/2)),\n      axis.title.y = element_text(hjust = 1, margin = margin(r = base_size/2)),\n      axis.text = element_text(color = colors[3]),\n      axis.ticks = element_line(color = colors[3]),\n      panel.background = element_rect(fill = \"#dfbb85\", color = \"white\", linewidth = base_size/4), \n      panel.border = element_rect(fill = NA, color = colors[3], linewidth = base_size/10), \n      plot.background = element_rect(fill = colors[1], color = colors[3], linewidth = base_size/4), \n      legend.background = element_rect(fill = \"transparent\", color = colors[3]),\n      legend.justification = \"top\",\n      strip.text = element_text(size = rel(1.25), color = colors[2]),\n      panel.grid.major = element_line(color = \"white\"),\n      panel.grid.minor = element_blank(),\n      plot.margin = margin(rep(base_size, 4))\n    )\n}"
  }
]