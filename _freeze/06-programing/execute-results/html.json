{
  "hash": "68cb4b1800f47785c1c3d8563941999b",
  "result": {
    "markdown": "---\ntitle: \"Engaging & Reproducible Data Visualization\"\nsubtitle: \"<span style='font-size:1.5em;'>From Theory to Implementation with ggplot2</span><br><span style='font-weight:500;font-size:1.3em;'>Workflows: Functional Programing & Corporate Themes</span></span>\"\nauthor: \"<b style='color:#28a87d;'><a href='https://www.cedricscherer.com'>Dr. Cédric Scherer</a></b>&ensp;**//**&ensp;RTG-UGI Workshop&ensp;**//**&ensp;October 2023\"\nformat:\n  revealjs:\n    theme: slides.scss\n    logo: img/logo.png\n    footer: '**[Cédric Scherer](https://cedricscherer.com)** // Data Visualization & Information Design'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Asap SemiCondensed\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 3\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  fig-width: 5\n  fig-height: 6\n---\n\n\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\ntheme_set(theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\"\n)\n```\n:::\n\n\n\n# Programming <br>with ggplot2\n\n\n## Conditional Components\n\n\n::: {.cell hash='06-programing_cache/revealjs/conditional-components_2af2d2aeffcb14ab252192a7eea0b7cb'}\n\n```{.r .cell-code  code-line-numbers=\"1|3,4,5|4\"}\nsmooth <- TRUE\n\nggplot(bikes, aes(x = temp, y = humidity)) +\n  { if(smooth) geom_smooth(color = \"red\") } +\n  geom_point(alpha = .5)\n```\n:::\n\n\n\n## Conditional Components\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/conditional-components-1_b1e9e0a0399b232339b519d8b9b529d0'}\n\n```{.r .cell-code}\nsmooth <- TRUE\n\nggplot(bikes, aes(x = temp, y = humidity)) +\n  { if(smooth) geom_smooth(color = \"red\") } +\n  geom_point(alpha = .5)\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/conditional-components-1-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## Conditional Components\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/conditional-components-2_b8e577776da8f91d7197c1d49ccc2f29'}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nsmooth <- FALSE\n\nggplot(bikes, aes(x = temp, y = humidity)) +\n  { if(smooth) geom_smooth(color = \"red\") } +\n  geom_point(alpha = .5)\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/conditional-components-2-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## Wrapper Functions for Plots\n\n\n::: {.cell hash='06-programing_cache/revealjs/conditional-components-function_c19fbbc12fd8076d982afb762e460197'}\n\n```{.r .cell-code  code-line-numbers=\"1,5|2,3,4\"}\ndraw_scatter <- function(smooth = TRUE) {\n  ggplot(bikes, aes(x = temp, y = humidity)) +\n    { if(smooth) geom_smooth(color = \"red\") } +\n    geom_point(alpha = .5)\n}\n```\n:::\n\n\n\n## Wrapper Functions for Plots\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/conditional-components-function-plot-default_0860acfb7cdc4d1593e2683ec31f57fd'}\n\n```{.r .cell-code}\ndraw_scatter()\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/conditional-components-function-plot-default-1.png){width=1000}\n:::\n:::\n\n\n\n## Wrapper Functions for Plots\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/conditional-components-function-plot-false_c9c9658910ec6c5cc60802103b7b3afc'}\n\n```{.r .cell-code}\ndraw_scatter(smooth = FALSE)\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/conditional-components-function-plot-false-1.png){width=1000}\n:::\n:::\n\n\n\n## Components as Functions\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,2,7|3,6|4,5\"}\ngeom_scatterfit <- function(pointsize = 1, pointalpha = 1, \n                            method = \"lm\", linecolor = \"red\", ...) {\n  list(\n    geom_point(size = pointsize, alpha = pointalpha, ...),\n    geom_smooth(method = method, color = linecolor, ...)\n  )\n}\n```\n:::\n\n\n\n## Components as Functions\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/function-components-defaults_b5df8a812af50c9eacf399dee2b5c125'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(bikes,\n       aes(x = humidity, y = count)) +\n  geom_scatterfit()\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/function-components-defaults-1.png){width=1000}\n:::\n:::\n\n\n\n## Components as Functions\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/function-components-args_0fa1ca113591d3999bc69d421dfca38a'}\n\n```{.r .cell-code  code-line-numbers=\"4,5\"}\nggplot(bikes,\n       aes(x = humidity, y = count)) +\n  geom_scatterfit(\n    color = \"#28A87D\", \n    linewidth = 3\n  )\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/function-components-args-1.png){width=1000}\n:::\n:::\n\n\n\n## Components as Functions\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/function-components-custom_250eab8b7859580f298baed2d42b1c93'}\n\n```{.r .cell-code  code-line-numbers=\"1,2|4,5,6,7\"}\nggplot(diamonds, \n       aes(x = carat, y = price)) +\n  geom_scatterfit(\n    pointsize = .5, \n    pointalpha = .1,\n    method = \"gam\",\n    linecolor = \"#EFAC00\"\n  )\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/function-components-custom-1.png){width=1000}\n:::\n:::\n\n\n\n## Components as Functions\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,14|2,13|3,4,5,6,7|8,9,10,11,12\"}\nscales_log <- function(sides = \"xy\") {\n  list(\n    if(stringr::str_detect(sides, \"x\")) {\n      scale_x_log10(\n        breaks = c(10^(1:100)), labels = scales::label_log()\n      )\n    },\n    if(stringr::str_detect(sides, \"y\")) {\n      scale_y_log10(\n        breaks = c(10^(1:100)), labels = scales::label_log()\n      )\n    }\n  )\n}\n```\n:::\n\n\n\n## Components as Functions\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/function-components-scales-custom_993714077afb23f087d84e5910ccf7b6'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(diamonds, \n       aes(x = carat, y = price)) +\n  geom_scatterfit(\n    pointsize = .5, \n    pointalpha = .1,\n    method = \"gam\",\n    linecolor = \"#EFAC00\"\n  ) +\n  scales_log(sides = \"y\")\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/function-components-scales-custom-1.png){width=1000}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,11|2,3,4|5,6,7,8,9|1,4,9\"}\ntrends_monthly <- function(grp = \"January\") {\n  bikes |> \n    dplyr::mutate(month = lubridate::month(date, label = TRUE, abbr = FALSE)) |> \n    dplyr::filter(month %in% grp) |> \n    ggplot(aes(x = temp, y = count, color = day_night)) +\n    geom_point(alpha = .2, show.legend = FALSE) +\n    geom_smooth(se = FALSE) +\n    scale_color_manual(values = c(\"#FFA200\", \"#757bc7\")) +\n    labs(title = grp, x = \"Temperature\", y = \"Bike shares\", color = NULL)\n}\n```\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\ntrends_monthly(\"July\")\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/function-iterate-monthly-july-1.png){width=1000}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10\"}\ntrends_monthly <- function(grp = \"January\") {\n  bikes |> \n    dplyr::mutate(month = lubridate::month(date, label = TRUE, abbr = FALSE)) |> \n    dplyr::filter(month %in% grp) |> \n    ggplot(aes(x = temp, y = count, color = day_night)) +\n    geom_point(alpha = .2, show.legend = FALSE) +\n    geom_smooth(se = FALSE) +\n    # keep axis ranges consistent\n    scale_x_continuous(limits = range(bikes$temp)) +\n    scale_y_continuous(limits = range(bikes$count)) +\n    scale_color_manual(values = c(\"#FFA200\", \"#757bc7\")) +\n    labs(title = grp, x = \"Temperature\", y = \"Bike shares\", color = NULL)\n}\n```\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\ntrends_monthly(\"July\")\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/function-iterate-monthly-ranges-july-1.png){width=1000}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplots <- purrr::map(month.name[1:12], trends_monthly) ## also: ~ trends_monthly(.x)\n```\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nplots <- purrr::map(month.name[1:12], trends_monthly) ## also: ~ trends_monthly(.x)\nplots[[9]]\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/function-iterate-monthly-ranges-purrr-single-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nplots <- purrr::map(month.name[1:12], trends_monthly) ## also: ~ trends_monthly(.x)\npatchwork::wrap_plots(plots)\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/function-iterate-monthly-ranges-wrap-1.png){fig-align='center' width=3600}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,11|2|3,4|5,6,7|8,9,10\"}\nplot_density <- function(data, var, grp = \"\") {\n  ggplot(data, aes(x = !!sym(var))) +\n    geom_density(aes(fill = !!sym(grp)), position = \"identity\",\n                 color = \"grey30\", alpha = .3) +\n    coord_cartesian(expand = FALSE, clip = \"off\") +\n    scale_y_continuous(labels = scales::label_number()) +\n    scale_fill_brewer(palette = \"Dark2\", name = NULL) +\n    theme(legend.position = \"top\")\n}\n```\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nplot_density(\n  bikes, \"count\"\n)\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/function-density-plot-1.png){width=1000}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4|2|3|5\"}\nplots <- purrr::map(\n  c(\"count\", \"temp\", \"humidity\", \"wind_speed\"), \n  ~ plot_density(data = bikes, var = .x, grp = \"day_night\")\n)\npatchwork::wrap_plots(plots, nrow = 1)\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/function-density-plot-grp-1.png){fig-align='center' width=2800}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2|3|5\"}\nplots <- purrr::map(\n  names(dplyr::select(midwest, where(is.numeric))),\n  ~plot_density(data = midwest, var = .x)\n)\npatchwork::wrap_plots(plots)\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/function-density-plot-midwest-1.png){fig-align='center' width=4000}\n:::\n:::\n\n\n\n# Custom Themes\n\n\n## Complete Themes: What's Inside?\n\n\n::: {.cell hash='06-programing_cache/revealjs/code-theme-grey_c33a6d698ef4d598803338e23a2e0f8e'}\n\n```{.r .cell-code}\ntheme_grey\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nfunction (base_size = 11, base_family = \"\", base_line_size = base_size/22, \n    base_rect_size = base_size/22) \n{\n    half_line <- base_size/2\n    t <- theme(line = element_line(colour = \"black\", linewidth = base_line_size, \n        linetype = 1, lineend = \"butt\"), rect = element_rect(fill = \"white\", \n        colour = \"black\", linewidth = base_rect_size, linetype = 1), \n        text = element_text(family = base_family, face = \"plain\", \n            colour = \"black\", size = base_size, lineheight = 0.9, \n            hjust = 0.5, vjust = 0.5, angle = 0, margin = margin(), \n            debug = FALSE), axis.line = element_blank(), axis.line.x = NULL, \n        axis.line.y = NULL, axis.text = element_text(size = rel(0.8), \n            colour = \"grey30\"), axis.text.x = element_text(margin = margin(t = 0.8 * \n            half_line/2), vjust = 1), axis.text.x.top = element_text(margin = margin(b = 0.8 * \n            half_line/2), vjust = 0), axis.text.y = element_text(margin = margin(r = 0.8 * \n            half_line/2), hjust = 1), axis.text.y.right = element_text(margin = margin(l = 0.8 * \n            half_line/2), hjust = 0), axis.ticks = element_line(colour = \"grey20\"), \n        axis.ticks.length = unit(half_line/2, \"pt\"), axis.ticks.length.x = NULL, \n        axis.ticks.length.x.top = NULL, axis.ticks.length.x.bottom = NULL, \n        axis.ticks.length.y = NULL, axis.ticks.length.y.left = NULL, \n        axis.ticks.length.y.right = NULL, axis.title.x = element_text(margin = margin(t = half_line/2), \n            vjust = 1), axis.title.x.top = element_text(margin = margin(b = half_line/2), \n            vjust = 0), axis.title.y = element_text(angle = 90, \n            margin = margin(r = half_line/2), vjust = 1), axis.title.y.right = element_text(angle = -90, \n            margin = margin(l = half_line/2), vjust = 0), legend.background = element_rect(colour = NA), \n        legend.spacing = unit(2 * half_line, \"pt\"), legend.spacing.x = NULL, \n        legend.spacing.y = NULL, legend.margin = margin(half_line, \n            half_line, half_line, half_line), legend.key = element_rect(fill = \"grey95\", \n            colour = NA), legend.key.size = unit(1.2, \"lines\"), \n        legend.key.height = NULL, legend.key.width = NULL, legend.text = element_text(size = rel(0.8)), \n        legend.text.align = NULL, legend.title = element_text(hjust = 0), \n        legend.title.align = NULL, legend.position = \"right\", \n        legend.direction = NULL, legend.justification = \"center\", \n        legend.box = NULL, legend.box.margin = margin(0, 0, 0, \n            0, \"cm\"), legend.box.background = element_blank(), \n        legend.box.spacing = unit(2 * half_line, \"pt\"), panel.background = element_rect(fill = \"grey92\", \n            colour = NA), panel.border = element_blank(), panel.grid = element_line(colour = \"white\"), \n        panel.grid.minor = element_line(linewidth = rel(0.5)), \n        panel.spacing = unit(half_line, \"pt\"), panel.spacing.x = NULL, \n        panel.spacing.y = NULL, panel.ontop = FALSE, strip.background = element_rect(fill = \"grey85\", \n            colour = NA), strip.clip = \"inherit\", strip.text = element_text(colour = \"grey10\", \n            size = rel(0.8), margin = margin(0.8 * half_line, \n                0.8 * half_line, 0.8 * half_line, 0.8 * half_line)), \n        strip.text.x = NULL, strip.text.y = element_text(angle = -90), \n        strip.text.y.left = element_text(angle = 90), strip.placement = \"inside\", \n        strip.placement.x = NULL, strip.placement.y = NULL, strip.switch.pad.grid = unit(half_line/2, \n            \"pt\"), strip.switch.pad.wrap = unit(half_line/2, \n            \"pt\"), plot.background = element_rect(colour = \"white\"), \n        plot.title = element_text(size = rel(1.2), hjust = 0, \n            vjust = 1, margin = margin(b = half_line)), plot.title.position = \"panel\", \n        plot.subtitle = element_text(hjust = 0, vjust = 1, margin = margin(b = half_line)), \n        plot.caption = element_text(size = rel(0.8), hjust = 1, \n            vjust = 1, margin = margin(t = half_line)), plot.caption.position = \"panel\", \n        plot.tag = element_text(size = rel(1.2), hjust = 0.5, \n            vjust = 0.5), plot.tag.position = \"topleft\", plot.margin = margin(half_line, \n            half_line, half_line, half_line), complete = TRUE)\n    ggplot_global$theme_all_null %+replace% t\n}\n<bytecode: 0x1170fad30>\n<environment: namespace:ggplot2>\n```\n:::\n:::\n\n\n\n## Complete Themes: What's Inside?\n\n\n::: {.cell hash='06-programing_cache/revealjs/code-theme-minimal_68521c2dfa4ee3224564fbfe2d84e7fd'}\n\n```{.r .cell-code}\ntheme_minimal\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nfunction (base_size = 11, base_family = \"\", base_line_size = base_size/22, \n    base_rect_size = base_size/22) \n{\n    theme_bw(base_size = base_size, base_family = base_family, \n        base_line_size = base_line_size, base_rect_size = base_rect_size) %+replace% \n        theme(axis.ticks = element_blank(), legend.background = element_blank(), \n            legend.key = element_blank(), panel.background = element_blank(), \n            panel.border = element_blank(), strip.background = element_blank(), \n            plot.background = element_blank(), complete = TRUE)\n}\n<bytecode: 0x116bcaab8>\n<environment: namespace:ggplot2>\n```\n:::\n:::\n\n\n\n## Create a Custom Theme\n\n\n::: {.cell hash='06-programing_cache/revealjs/code-theme-asap_6ad5d90f7e8cac7f6617900818541348'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,6|4,5\"}\ntheme_asap <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                       base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) \n}\n```\n:::\n\n\n\n## Create a Custom Theme\n\n\n::: {.cell hash='06-programing_cache/revealjs/code-theme-asap-replace-blank_6469e3bfa2631456714ee5a1430a01cd'}\n\n```{.r .cell-code  code-line-numbers=\"5|6,8|7\"}\ntheme_asap <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                       base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) %+replace%\n    theme(\n      # add your theme changes here\n    )\n}\n```\n:::\n\n\n\n## Create a Custom Theme\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_asap <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                       base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) %+replace%\n    theme(\n      plot.title = element_text(size = rel(1.3), margin = margin(b = base_size/2),\n                                family = \"Asap SemiCondensed Extrabold\", hjust = 0),\n      plot.title.position = \"plot\",\n      plot.caption = element_text(color = \"grey30\", margin = margin(t = base_size),\n                                  size = rel(0.8), hjust = 1, vjust = 1),\n      plot.caption.position = \"plot\",\n      axis.title.x = element_text(hjust = 0, vjust = 0, margin = margin(t = base_size/3)),\n      axis.title.y = element_text(hjust = 1, vjust = 0, angle = 90, margin = margin(r = base_size/3)),\n      panel.background = element_rect(fill = \"white\", color = \"grey20\"), \n      panel.border = element_rect(fill = NA, color = \"grey20\"), \n      plot.background = element_rect(fill = \"grey85\", color = NA), \n      legend.justification = \"top\",\n      strip.text = element_text(size = rel(1.05), margin = margin(base_size/2, 0, base_size/2, 0)),\n      panel.grid.minor = element_blank(), \n      complete = TRUE\n    )\n}\n```\n:::\n\n\n\n## Modify an Existing Theme\n\n<br>\n`⁠%+replace%`\n\n> replaces the entire element; any element of a theme not specified in e2 will not be present in the resulting theme (i.e. NULL).<br>Thus this operator can be used to overwrite an entire theme.\n\n::: fragment\n<br>\n`+`\n\n> updates the elements of e1 that differ from elements specified (not NULL) in e2.<br>Thus this operator can be used to incrementally add or modify attributes of a ggplot theme.\n\n:::\n\n\n## Create a Custom Theme\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4,5|7,8,10,12,13\"}\ntheme_asap <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                            base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme( \n      plot.title = element_text(size = rel(1.3), hjust = 0,\n                                family = \"Asap SemiCondensed Extrabold\"),\n      plot.title.position = \"plot\",\n      plot.caption = element_text(color = \"grey30\", margin = margin(t = base_size)),\n      plot.caption.position = \"plot\",\n      axis.title.x = element_text(hjust = 0, margin = margin(t = base_size/3)),\n      axis.title.y = element_text(hjust = 1, margin = margin(r = base_size/3)),\n      panel.background = element_rect(fill = \"white\", color = \"grey20\"), \n      panel.border = element_rect(fill = NA, color = \"grey20\"), \n      plot.background = element_rect(fill = \"grey85\", color = NA), \n      legend.justification = \"top\",\n      strip.text = element_text(size = rel(1.05), margin = margin(base_size/2, 0, base_size/2, 0)),\n      panel.grid.minor = element_blank()\n    )\n}\n```\n:::\n\n\n\n## Apply the Custom Theme\n\n\n::: {.cell hash='06-programing_cache/revealjs/apply-theme-ggobject_d831e2a1644540cb64cd21cd12a60d83'}\n\n```{.r .cell-code}\ng <- \n  ggplot(bikes, aes(x = temp, y = count, color = day_night)) +\n  geom_point(alpha = .3, size = 2) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(panel.grid.minor = element_blank())\n```\n:::\n\n\n\n## Apply the Custom Theme\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/apply-theme-asap-default_55e3bafe49062e8f83a65d3fb41b8395'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_asap()\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/apply-theme-asap-default-1.png){width=1000}\n:::\n:::\n\n\n\n## Modify the Custom Theme\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/apply-theme-asap-modify-theme-elements_e837fff817d0944d3ff17dccd5babb94'}\n\n```{.r .cell-code  code-line-numbers=\"3,4,5,6,7,8,9\"}\ng + \n  theme_asap() +\n  theme(\n    legend.position = \"top\",\n    plot.background = element_rect(\n      fill = NA, color = NA\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/apply-theme-asap-modify-theme-elements-1.png){width=1000}\n:::\n:::\n\n\n\n## Modify the Custom Theme\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/apply-theme-asap-modify-base-settings_3728b269ea8f7d266a8bf51c871cd4d2'}\n\n```{.r .cell-code  code-line-numbers=\"3|4\"}\ng + \n  theme_asap(\n    base_size = 9,\n    base_family = \"Hepta Slab\"\n  )\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/apply-theme-asap-modify-base-settings-1.png){width=1000}\n:::\n:::\n\n\n\n## Modify the Custom Theme\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/apply-theme-asap-modify-title-face_567cc7de85b10da31ce00916e01b8f7a'}\n\n```{.r .cell-code  code-line-numbers=\"6,7,8,9,10\"}\ng + \n  theme_asap(\n    base_size = 9,\n    base_family = \"Hepta Slab\"\n  ) +\n  theme(\n    plot.title = element_text(\n      family = \"Hepta Slab\"\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/apply-theme-asap-modify-title-face-1.png){width=1000}\n:::\n:::\n\n\n\n## Create a Custom Theme\n\n\n::: {.cell hash='06-programing_cache/revealjs/code-theme-asap-title-family_c2e7613f53b26e164d5731234f0d0da6'}\n\n```{.r .cell-code  code-line-numbers=\"1,2|5,6,7,8,9|14,15\"}\ntheme_asap_title <- function(base_size = 13, base_family = \"Asap SemiCondensed\", \n                             title_family = \"Asap SemiCondensed Extrabold\",\n                             base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  if (title_family == \"Asap SemiCondensed Extrabold\") {\n    register_variant(name = \"Asap SemiCondensed Extrabold\",\n                     family = \"Asap SemiCondensed\",\n                     weight = \"ultrabold\")\n  }\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n                base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme(\n      plot.title = element_text(size = rel(1.3), hjust = 0, family = title_family),\n      # fill in other theme adjustments here\n    )\n}\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Apply the Custom Theme\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/apply-theme-custom-title-family_885128137f1a6808a507c092fa7590c8'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\ng +\n  theme_asap_title(\n    base_size = 9,\n    base_family = \"Hepta Slab\",\n    title_family = \"Hepta Slab\"\n  )\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/apply-theme-custom-title-family-1.png){width=1000}\n:::\n:::\n\n\n\n## Advanced Font Handling (for Themes)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,2|4|6,7,8,9,10,11,12|13,14,15,16|18,19,20,21,22|25,26,27,28,29,30,31,32,33,34,35,36,37|26,27,28,29|30,31,32,33,34,35,36|39,42\"}\ntheme_fonts <- function(base_size = 12, base_line_size = base_size/22, \n                        base_rect_size = base_size/22) {\n  \n  unavailable <- vector(\"character\")\n  \n  if (sum(grepl(\"Hepta Slab\", systemfonts::system_fonts()$family)) > 0) {\n    systemfonts::register_variant(\n      name = \"Hepta Slab Extrabold\",\n      family = \"Hepta Slab\",\n      weight = \"ultrabold\"\n    )\n    title_family <- \"Hepta Slab Extrabold\"\n  } else {\n    title_family <- \"\"\n    unavailable <- c(unavailable, \"Hepta Slab\")\n  }\n  \n  if (sum(grepl(\"Spline Sans\", systemfonts::system_fonts()$family)) > 0) {\n    base_family <- \"Spline Sans\"\n  } else {\n    base_family <- \"\"\n    unavailable <- c(unavailable, \"Spline Sans\")\n  }\n  \n  if (length(unavailable) > 0) {\n    unavailable <- data.frame(\n      name = unavailable, \n      url = paste0(\"https://fonts.google.com/specimen/\", sub(\" \", \"+\", unavailable))\n    )\n    message(paste(\n      \"Using system default typefaces.\", \n      \"For proper use, please install the following typeface(s):\",\n      paste0(\"  - \", unavailable$name, \": \", unavailable$url, collapse = \"\\n\"),\n      \"Then restart your R session.\",\n      sep = \"\\n\"\n    ))\n  }\n  \n  theme_asap(base_size = base_size, base_family = base_family, \n             base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme(\n      plot.title = element_text(size = rel(1.3), hjust = 0, family = title_family)\n    )\n}\n```\n:::\n\n\n\n## Apply the Custom Theme\n\n\n::: {.cell hash='06-programing_cache/revealjs/theme-fonts-message_23ee2e8e5a60af157598cbc4bcb8c10e'}\n\n```{.r .cell-code}\ng + theme_fonts()\n```\n:::\n\n\n<code style='color:#663399;font-size:16pt;'>Using system default typefaces.<br>For proper use, please install the following typeface(s):<br>&emsp;- Hepta Slab: https://fonts.google.com/specimen/Hepta+Slab<br>&emsp;- Spline: https://fonts.google.com/specimen/Spline+Sans<br>Then restart your R session.</code>\n\n\n## Apply the Custom Theme\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/theme-fonts-show_73fcdcf356a452f1b4303f29d4ea4877'}\n\n```{.r .cell-code}\ng + theme_fonts()\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/theme-fonts-show-1.png){width=1000}\n:::\n:::\n\n\n\n## Add More Arguments\n\n::: incremental\n-   turn grid lines on and off\n-   define alternative styles\n-   set a tabular fonts for axis and legend text\n-   adjust legend position\n-   add/remove plot margin\n-   control rendering of text elements\n-   ...\n:::\n\n. . .\n\n<b class='simple-highlight-grn' style='font-size:2.6rem;'>Pro: Users don't have to use `theme()`.</b>\n\n. . .\n\n<b class='simple-highlight-ylw' style='font-size:2.6rem;'>Con: Users don't have to use `theme()`.</b>\n\n\n## Add More Arguments\n\n-   ***turn grid lines on and off***\n-   define alternative styles\n-   set a tabular fonts for axis and legend text\n-   adjust legend position\n-   add/remove plot margin\n-   control rendering of text elements\n-   ...\n\n<b class='simple-highlight-grn' style='font-size:2.6rem;'>Pro: Users don't have to use `theme()`.</b>\n  \n<b class='simple-highlight-ylw' style='font-size:2.6rem;'>Con: Users don't have to use `theme()`.</b>\n\n\n## Add More Arguments\n\n\n::: {.cell hash='06-programing_cache/revealjs/code-theme-asap-grid_0211efa111223a424b6cd18d5af637de'}\n\n```{.r .cell-code  code-line-numbers=\"1|3|7,8,9,10|13,14,15,16,17|18,19,20,21,22|24\"}\ntheme_asap_grid <- function(base_size = 13, base_family = \"Asap SemiCondensed\", grid = \"xy\", \n                            base_line_size = base_size/22, base_rect_size = base_size/22) {\n  out <- \n    theme_minimal(base_size = base_size, base_family = base_family, \n                  base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme(\n      panel.grid.major = element_blank(),\n      axis.ticks = element_line(color = \"grey20\"),\n      axis.ticks.length = unit(base_size/2, \"pt\"),\n      # fill in other theme adjustments here\n    )\n  \n  if (stringr::str_detect(grid, \"x|X\")) {\n    out <- out + theme(panel.grid.major.x = element_line(color = \"grey87\"),\n                       axis.ticks.x = element_blank(),\n                       axis.ticks.length.x = unit(base_size/6, \"pt\"))\n  }\n  if (stringr::str_detect(grid, \"y|Y\")) {\n    out <- out + theme(panel.grid.major.y = element_line(color = \"grey87\"),\n                       axis.ticks.y = element_blank(),\n                       axis.ticks.length.y = unit(base_size/4, \"pt\"))\n  }\n  \n  return(out)\n}\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Apply the Custom Theme\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/apply-theme-custom-grid-y_81f4a2f57cee8771eef4b5465b837827'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4\"}\ng + \n  theme_asap_grid(\n    grid = \"y\"\n  )\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/apply-theme-custom-grid-y-1.png){width=1000}\n:::\n:::\n\n\n\n## Apply the Custom Theme\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell hash='06-programing_cache/revealjs/apply-theme-custom-grid-xy_bdef2836d3f7c0dcb8902aef3b12d383'}\n\n```{.r .cell-code}\ng + theme_asap_grid()\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/apply-theme-custom-grid-xy-1.png){width=1100}\n:::\n:::\n\n::: {.cell hash='06-programing_cache/revealjs/apply-theme-custom-grid-none_7a72e013e279c3fb49593213b2404bf1'}\n\n```{.r .cell-code}\ng + theme_asap_grid(grid = \"none\")\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/apply-theme-custom-grid-none-1.png){width=1100}\n:::\n:::\n\n:::\n\n\n## Apply the Custom Theme\n\n\n::: {.cell output-location='column' hash='06-programing_cache/revealjs/apply-theme-custom-grid-all_7318363a82ce3959561eb27b20e74c1b'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ng + \n  theme_asap_grid(\n    grid = \"all\"\n  )\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/apply-theme-custom-grid-all-1.png){width=1000}\n:::\n:::\n\n\n\n## Add Checks to the Custom Theme\n\n\n::: {.cell hash='06-programing_cache/revealjs/code-theme-asap-grid-check_0c8426a7ed964bbb5c8cb88e21a67e8d'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\ntheme_asap_grid <- function(base_size = 13, base_family = \"Asap SemiCondensed\", grid = \"xy\", \n                            base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  if(!stringr::str_detect(grid, \"none|x|X|y|Y\")) stop('grid must be a character: \"none\" or any combination of \"X\", \"Y\", \"x\" and \"y\".')\n  \n  out <- \n    theme_minimal(base_size = base_size, base_family = base_family, \n                  base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme(\n      panel.grid.major = element_blank(),\n      axis.ticks = element_line(color = \"grey20\"),\n      axis.ticks.length = unit(base_size/2, \"pt\"),\n      # fill in other theme adjustments here\n    )\n  \n  if (stringr::str_detect(grid, \"x|X\")) {\n    out <- out + theme(panel.grid.major.x = element_line(color = \"grey87\"),\n                       axis.ticks.x = element_blank(),\n                       axis.ticks.length.x = unit(base_size/6, \"pt\"))\n  }\n  if (stringr::str_detect(grid, \"y|Y\")) {\n    out <- out + theme(panel.grid.major.y = element_line(color = \"grey87\"),\n                       axis.ticks.y = element_blank(),\n                       axis.ticks.length.y = unit(base_size/4, \"pt\"))\n  }\n  \n  return(out)\n}\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Apply the Custom Theme\n\n\n::: {.cell hash='06-programing_cache/revealjs/apply-theme-custom-grid-all-check_095b750d128f707a3f6294faf28e4bc1'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ng + \n  theme_asap_grid(\n    grid = \"all\"\n  )\n```\n:::\n\n\n<code style='color:red;font-size:16pt;'>Error in theme_asap_grid(grid = \"all\") :<br>grid must be a character: \"none\" or any combination of \"X\", \"Y\", \"x\" and \"y\".</code>\n\n\n\n## <b style='color:#663399;'>Recap</b>\n\n::: recap\n::: incremental\n-   define conditional components, custom layers and functions to generate plots more efficiently and to iterate over multiple inputs\n-   use `patchwork::wrap_plots()` to create grids from plot lists\n-   apply complete themes via `theme_*()` and modify theme defaults via `theme()`\n-   change the appearance for all plots with `theme_set()` and `theme_update()`\n-   `{systemfonts}` allows to use non-default typefaces and register font variants\n-   use the source code of complete themes to create a custom theme\n-   add additional arguments to allow for different styles and settings\n:::\n:::\n\n\n\n# Exercise\n\n\n\n## Exercise 1\n\n::: question\n-  **Create a function that plots the famous Gapminder chart, highlighting one of the continents.**\n   -  Extend the following code in to annotate a continent your choice of with {ggforce}.\n   -  Turn the code into a function with the utility to annotate any continent.\n   -  Optional: Create a second function to highlight a country.\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='06-programing_cache/revealjs/gapminder-plot-template_cafd29ccb55f171add9753a363372ecc'}\n\n```{.r .cell-code  code-line-numbers=\"1|3|5|6,7,8|9,10,11,12|13,14,15,16,17|18|19,20\"}\n# install.packages(\"gapminder\")\n\ngm2007 <- filter(gapminder::gapminder, year == 2007)\n\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point( \n    aes(size = pop), alpha = .5\n  ) +\n  scale_x_log10(\n    breaks = c(500, 2000, 8000, 32000),\n    labels = scales::label_dollar(accuracy = 1)\n  ) +\n  scale_size(\n    range = c(1, 12), name = \"Population:\", \n    breaks = c(10, 100, 1000)*1000000, \n    labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n  ) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme_minimal(base_family = \"Asap SemiCondensed\") +\n  theme(panel.grid.minor = element_blank())\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/gapminder-plot-template_7debd2aa15e3341309b66de2922f13ca'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/gapminder-plot-template-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n\n## Exercise 2\n\n::: question\n-   **Create a corporate or funny custom theme.**\n    -   Make use of an existing complete theme to get started.\n    -   Pick a non-default font (or multiple) for your theme.\n    -   Optional: Try working with font variants.\n    -   Optional: Add other helpful arguments to your `theme_*` function.\n:::\n\n\n## Exercise 2\n\n::: question\n-   **Create a corporate or funny custom theme.**\n    -   Make use of an existing complete theme to get started.\n    -   Pick a non-default font (or multiple).\n    -   Optional: Try working with font variants.\n    -   Optional: Add other helpful arguments to your `theme_*` function.\n-   **Showcase your theme using some example graphics.**\n    -   Save the plots to disk and share them with the group.\n    -   Did you add some additional arguments?<br>Feel free to share your thoughts on \"why\" and \"how\".\n:::\n\n\n\n# Solution Exercise 1 {background-color=\"#e6d9f2\"}\n\n\n\n## Exercise 1\n\n::: question\n-  **Create a function that plots the famous Gapminder chart, highlighting one of the continents.**\n   -  Extend the following code in to annotate a continent your choice of with {ggforce}.\n   -  Turn the code into a function with the utility to annotate any continent.\n   -  Optional: Create a second function to highlight a country.\n:::\n\n\n\n## Gapminder Bubble Chart\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1|3,4,5|7|9,10,11,12|13,14,15,16|17,18,19,20,21|22|23,24\"}\n# install.packages(\"gapminder\")\n\nlibrary(gapminder)\nlibrary(dplyr)\nlibrary(ggplot2)\n\ngm2007 <- filter(gapminder, year == 2007)\n\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(\n    aes(size = pop), alpha = .5\n  ) +\n  scale_x_log10(\n    breaks = c(500, 2000, 8000, 32000),\n    labels = scales::label_dollar(accuracy = 1)\n  ) +\n  scale_size(\n    range = c(1, 12), name = \"Population:\", \n    breaks = c(10, 100, 1000)*1000000, \n    labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n  ) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n  theme(panel.grid.minor = element_blank())\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/exercise-1-2-gapminder-0-template_18b7d3222a0961cce7a665f8b574b3b0'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/exercise-1-2-gapminder-0-template-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n## Annotate Continents\n\n\n::: {.cell hash='06-programing_cache/revealjs/exercise-1-2-gapminder-1-geom-hull_660fe875970ffcd45c28bbdbebd0c2b8'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4|5,6,7,8|6|9,10,11,12,13|10\"}\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(\n    aes(size = pop), alpha = .5, color = \"grey60\"\n  ) +\n  geom_point( \n    data = filter(gm2007, continent == \"Americas\"),\n    aes(size = pop), shape = 1, stroke = .7\n  ) +\n  ggforce::geom_mark_hull(\n    aes(label = continent, filter = continent == \"Americas\"),\n    expand = unit(10, \"pt\"), con.cap = unit(1, \"mm\"),\n    label.family = \"Asap SemiCondensed\", label.fontsize = 15\n  ) +\n  scale_x_log10(\n    breaks = c(500, 2000, 8000, 32000),\n    labels = scales::label_dollar(accuracy = 1)\n  ) +\n  scale_size(\n    range = c(1, 12), name = \"Population:\",\n    breaks = c(10, 100, 1000)*1000000,\n    labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n  ) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n  theme(panel.grid.minor = element_blank())\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/exercise-1-2-gapminder-1-geom-hull_e5277183146a52b082b16b20f8c7c1bf'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/exercise-1-2-gapminder-1-geom-hull-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n## Function to Highlight a Continent\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,29|8,12\"}\ndraw_gp_continent <- function(grp) {\n  \n  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) + \n    geom_point( \n      aes(size = pop), alpha = .5, color = \"grey60\"\n    ) +\n    geom_point( \n      data = filter(gm2007, continent == grp),\n      aes(size = pop), shape = 1, stroke = .7\n    ) +\n    ggforce::geom_mark_hull(\n      aes(label = continent, filter = continent == grp),\n      expand = unit(10, \"pt\"), con.cap = unit(1, \"mm\"),\n      label.family = \"Asap SemiCondensed\", label.fontsize = 15\n    ) +\n    scale_x_log10(\n      breaks = c(500, 2000, 8000, 32000),\n      labels = scales::label_dollar(accuracy = 1)\n    ) +\n    scale_size(\n      range = c(1, 12), name = \"Population:\", \n      breaks = c(10, 100, 1000)*1000000, \n      labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n    ) +\n    labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n    theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n    theme(panel.grid.minor = element_blank())\n  \n}\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/exercise-1-2-gapminder-3-example-americas_c98d51afee48f48d334e6af36cef5d33'}\n\n```{.r .cell-code}\ndraw_gp_continent(\"Americas\")\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/exercise-1-2-gapminder-3-example-americas-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/exercise-1-2-gapminder-4-example-africa_538c0820859d24716793153dfc42317d'}\n\n```{.r .cell-code}\ndraw_gp_continent(\"Africa\")\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/exercise-1-2-gapminder-4-example-africa-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/exercise-1-2-gapminder-5-example-europe_d3ea6bab76e58c2f3007710a903b65d9'}\n\n```{.r .cell-code}\ndraw_gp_continent(\"Europe\")\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/exercise-1-2-gapminder-5-example-europe-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n## Function to Highlight a Country\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,30|7,8,9,10,11,12|8|9,10|13,14,15,16|14|15\"}\ndraw_gp_country <- function(grp) {\n  \n  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) + \n    geom_point( \n      aes(size = pop), alpha = .5, color = \"grey60\"\n    ) +\n    ggforce::geom_mark_circle(\n      aes(label = country, filter = country == grp),\n      expand = unit(15, \"pt\"), con.cap = unit(0, \"mm\"),\n      # expand = unit(0, \"pt\"), con.cap = unit(0, \"mm\"),\n      label.family = \"Asap SemiCondensed\", label.fontsize = 15\n    ) +\n    geom_point( \n      data = filter(gm2007, country == grp),\n      aes(size = pop), color = \"#9C55E3\", show.legend = FALSE\n    ) +\n    scale_x_log10(\n      breaks = c(500, 2000, 8000, 32000),\n      labels = scales::label_dollar(accuracy = 1)\n    ) +\n    scale_size(\n      range = c(1, 12), name = \"Population:\", \n      breaks = c(10, 100, 1000)*1000000, \n      labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n    ) +\n    labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n    theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n    theme(panel.grid.minor = element_blank())\n  \n}\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/exercise-1-2-gapminder-7-example-usa_b8c9bde1c9142770bbc57ed6512277ac'}\n\n```{.r .cell-code}\ndraw_gp_country(\"United States\")\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/exercise-1-2-gapminder-7-example-usa-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/exercise-1-2-gapminder-8-example-germany_761bae07c0b1ee4984fff6d8456e6650'}\n\n```{.r .cell-code}\ndraw_gp_country(\"Germany\")\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/exercise-1-2-gapminder-8-example-germany-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/exercise-1-2-gapminder-9-example-india_c5e3361d03cf0b4e26ecb9b0159170c5'}\n\n```{.r .cell-code}\ndraw_gp_country(\"India\")\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/exercise-1-2-gapminder-9-example-india-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/exercise-1-2-gapminder-10-example-zambia_6638025ef0a46eff803c25ec09a61511'}\n\n```{.r .cell-code}\ndraw_gp_country(\"Zambia\")\n```\n\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/exercise-1-2-gapminder-10-example-zambia-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n\n# Solution Exercise 2 {background-color=\"#e6d9f2\"}\n\n\n\n## Exercise 2\n\n::: question\n-   **Create a corporate or funny custom theme.**\n    -   Make use of an existing complete theme to get started.\n    -   Pick a non-default font (or multiple).\n    -   Optional: Try working with font variants.\n    -   Optional: Add other helpful arguments to your `theme_*` function.\n-   **Showcase your theme using some example graphics.**\n    -   Save the plots to disk and share them with the group.\n    -   Did you add some additional arguments?<br>Feel free to share your thoughts on \"why\" and \"how\".\n:::\n\n\n\n## Preparation\n\n\n::: {.cell hash='06-programing_cache/revealjs/preparation_cca438f2869d0602fd7a0aea019fcc98'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\n\n## Custom Theme\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_bulls <- function(base_size = 18, base_family = \"College Block\", \n                        base_line_size = base_size/22, base_rect_size = base_size/22) {\n  \n  theme_bw(base_size = base_size, base_family = base_family, \n           base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme( \n      plot.title = element_text(size = rel(2), color = \"white\", margin = margin(b = base_size/2)),\n      plot.subtitle = element_text(margin = margin(t = -base_size/4, b = base_size/2)),\n      plot.caption = element_text(color = \"black\", size = rel(.7), hjust = 0),\n      plot.title.position = \"plot\",\n      plot.caption.position = \"plot\",\n      axis.title = element_text(color = \"white\"),\n      axis.title.x = element_text(hjust = 1, margin = margin(t = base_size/2)),\n      axis.title.y = element_text(hjust = 1, margin = margin(r = base_size/2)),\n      axis.text = element_text(color = \"black\"),\n      axis.ticks = element_line(color = \"black\"),\n      panel.background = element_rect(fill = \"#dfbb85\", color = \"white\", linewidth = base_size/4), \n      panel.border = element_rect(fill = NA, color = \"black\", linewidth = base_size/10), \n      plot.background = element_rect(fill = \"#CE1141\", color = \"black\", linewidth = base_size/4), \n      legend.background = element_rect(fill = \"transparent\", color = \"black\"),\n      legend.justification = \"top\",\n      strip.text = element_text(size = rel(1.25), color = \"white\"),\n      panel.grid.major = element_line(color = \"white\"),\n      panel.grid.minor = element_blank(),\n      plot.margin = margin(rep(base_size, 4))\n    )\n}\n```\n:::\n\n\n\n## Apply Theme\n\n\n::: {.cell hash='06-programing_cache/revealjs/plot-theme-bulls_77758836e33e3bea6c31f8701e85e08d'}\n\n```{.r .cell-code}\ndata <- readr::read_csv(\"https://query.data.world/s/cejs4o4gdt6autofsse7whhqnnmaii?dws=00000\")\n\nggplot(filter(data, Team == \"Chicago\"), aes(x = Pts, y = Reb)) +\n  geom_point(shape = \"🏀\", size = 5) +\n  labs(title = \"Let's Go Bulls! ⛹️️\", x = \"Points scored\", y = \"Rebounds\", \n       caption = \"Data: hoopsstats.com\") +\n  theme_bulls()\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/plot-theme-bulls_ed803e38d5c1a6155af2f32364882a18'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/plot-theme-bulls-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n\n## Custom Theme\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3|5|7,8,9,10,11,12,13,14,15,16,17,18,19|20|25,26,27,30,33,34,36,37,40\"}\ntheme_nba <- function(base_size = 18, base_family = \"College Block\", \n                      base_line_size = base_size/22, base_rect_size = base_size/22,\n                      team = \"Bulls\") {\n  \n  if(!team %in% c(\"Bulls\", \"Lakers\", \"Nuggets\", \"Celtics\", \"Knicks\", \"Heat\", \"Hornets\", \"Sixers\", \"Timberwolves\", \"Pelicans\", \"Suns\")) stop('team should be one of \"Bulls\", \"Lakers\", \"Nuggets\", \"Celtics\", \"Knicks\", \"Heat\", \"Hornets\", \"Sixers\", \"Timberwolves\", \"Pelicans\", or \"Suns\".')\n  \n  colors <- data.frame(\n    Bulls = c(\"#CE1141\", \"#FFFFFF\", \"#000000\"),\n    Lakers = c(\"#552583\", \"#FDB927\", \"#000000\"),\n    Nuggets = c(\"#8B2131\", \"#FEC524\", \"#0E2240\"),\n    Celtics = c(\"#007A33\", \"#FFFFFF\", \"#BA9653\"),\n    Knicks = c(\"#006BB6\", \"#F58426\", \"#BEC0C2\"),\n    Heat = c(\"#000000\", \"#F9A01B\", \"#98002E\"),\n    Hornets = c(\"#1D1160\", \"#A1A1A4\", \"#00788C\"),\n    Sixers = c(\"#006BB6\", \"#ED174C\", \"#002B5C\"),\n    Timberwolves = c(\"#0C2340\", \"#78BE20\", \"#9EA2A2\"),\n    Pelicans = c(\"#0C2340\", \"#C8102E\", \"#85714D\"),\n    Suns = c(\"#1D1160\", \"#E56020\", \"#63727A\")\n  )\n  colors <- unname(colors[, team])\n  \n  theme_minimal(base_size = base_size, base_family = base_family, \n           base_line_size = base_line_size, base_rect_size = base_rect_size) + \n    theme( \n      plot.title = element_text(size = rel(2), color = colors[2], margin = margin(b = base_size/2)),\n      plot.subtitle = element_text(color = colors[3], margin = margin(t = -base_size/4, b = base_size/2)),\n      plot.caption = element_text(color = colors[3], size = rel(.7), hjust = 0),\n      plot.title.position = \"plot\",\n      plot.caption.position = \"plot\",\n      axis.title = element_text(color = colors[2]),\n      axis.title.x = element_text(hjust = 1, margin = margin(t = base_size/2)),\n      axis.title.y = element_text(hjust = 1, margin = margin(r = base_size/2)),\n      axis.text = element_text(color = colors[3]),\n      axis.ticks = element_line(color = colors[3]),\n      panel.background = element_rect(fill = \"#dfbb85\", color = \"white\", linewidth = base_size/4), \n      panel.border = element_rect(fill = NA, color = colors[3], linewidth = base_size/10), \n      plot.background = element_rect(fill = colors[1], color = colors[3], linewidth = base_size/4), \n      legend.background = element_rect(fill = \"transparent\", color = colors[3]),\n      legend.justification = \"top\",\n      strip.text = element_text(size = rel(1.25), color = colors[2]),\n      panel.grid.major = element_line(color = \"white\"),\n      panel.grid.minor = element_blank(),\n      plot.margin = margin(rep(base_size, 4))\n    )\n}\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/plot-theme-nba-bulls-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/plot-theme-nba-lakers_a55848b241d10b3c54bcc8a499f5e0e0'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/plot-theme-nba-lakers-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/plot-theme-nba-nuggets_a1c4e68263532daea6834227e7792747'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/plot-theme-nba-nuggets-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/plot-theme-nba-celtics_dbb8fbabb94dd8adba8ce159a152e8c5'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/plot-theme-nba-celtics-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/plot-theme-nba-knicks_41d3496ac7767162672eb234323f4825'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/plot-theme-nba-knicks-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/plot-theme-nba-miami_0afabd67e03bfc35990ba08b9644b2eb'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/plot-theme-nba-miami-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/plot-theme-nba-pelicans_11032f26addc66a46d8e6b832c3d4ac9'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/plot-theme-nba-pelicans-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/plot-theme-nba-hornets_98f3aaed60a92aa556416b415a81136e'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/plot-theme-nba-hornets-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/plot-theme-nba-sixers_7d1660eaf5545684a4331c11afb303c4'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/plot-theme-nba-sixers-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/plot-theme-nba-timberwolves_d2eab9e52fb9335a5b8fa6ff9ff9b17e'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/plot-theme-nba-timberwolves-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell layout-align=\"center\" hash='06-programing_cache/revealjs/plot-theme-nba-suns_07ebce5b1695b60d727a7522269678b7'}\n::: {.cell-output-display}\n![](06-programing_files/figure-revealjs/plot-theme-nba-suns-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n\n# <span style='line-height:1.3;'>That's it 👏<br></span> {background-color=\"#000000\"}\n\n<div style='font-family:Asap;font-stretch:87.5%;font-size:2em;font-weight:700;font-style:normal;color:#efefef;text-align:center;'>Thank you very much!</div>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}