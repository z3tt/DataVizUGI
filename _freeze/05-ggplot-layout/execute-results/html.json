{
  "hash": "ae2e3642060a1782667b5dbcf07e2925",
  "result": {
    "markdown": "---\ntitle: \"The Art & Science of<br>Data Visualization\"\nsubtitle: \"<span style='font-size:1.5em;'>Engaging and Reproducible Graphics with ggplot2</span><br><span style='font-weight:500;font-size:1.3em;'>Working with Layouts and Compositions</span></span>\"\nauthor: \"<b style='color:#28a87d;'><a href='https://www.cedricscherer.com'>Dr. Cédric Scherer</a></b>&ensp;**//**&ensp;RTG-UGI Workshop&ensp;**//**&ensp;October 2023\"\nformat:\n  revealjs:\n    theme: slides.scss\n    logo: img/logo.png\n    footer: '**[Cédric Scherer](https://cedricscherer.com)** // Data Visualization & Information Design'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Asap SemiCondensed\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 3\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  fig-width: 5\n  fig-height: 6\n---\n\n\n\n## Setup\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/prep_198dd0f97a30a80dcbf221c094b4e814'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(stringr)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Asap SemiCondensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\"\n)\n```\n:::\n\n\n\n\n# Legend Placement <br>and Styling\n\n\n\n## Discrete Legend\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-discrete-default_6e79fe59da0f50eead76fe6aaab8d29d'}\n\n```{.r .cell-code  code-line-numbers=\"6|1,9\"}\npal <- c(\"#3c89d9\", \"#1ec99b\", \"#F7B01B\", \"#a26e7c\")\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_manual(values = pal)\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-discrete-default-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Continuous Legend\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-continuous-default_cecae1ee8475e9470a0839b6b0378347'}\n\n```{.r .cell-code  code-line-numbers=\"4|7\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c()\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-continuous-default-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Position\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-position-bottom_a045f0de0acff66dd180e982e7dd0cd1'}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c() +\n  theme(\n    legend.position = \"bottom\"\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-position-bottom-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Justification\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-position-bottom-left_1fe23c38c6c642487fd336d0c9c96022'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c() +\n  theme(\n    legend.position = \"bottom\",\n    legend.justification = \"left\"\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-position-bottom-left-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Position\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-position-inside_74c89e602585dca8d2f885da66af7cab'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c() +\n  theme(\n    legend.position = c(.25, .85)\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-position-inside-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Direction\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-position-inside-horizontal_9cc483144e9483af7de15bb5b907f716'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c() +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-position-inside-horizontal-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Types\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-guide-quotes_c4b5dca1e11afc58e1aab86f8292142d'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    guide = \"colorbar\"\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-guide-quotes-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Types\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-guide-quotes-colorsteps_0018606a73489a9ae1e04b9bdc0f3310'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    guide = \"colorsteps\"\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-guide-quotes-colorsteps-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Types\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-guide-binned-scale_6b2a973215238c739d4a628e3c86b745'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_b(\n    guide = \"colorsteps\"\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-guide-binned-scale-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Types\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-guide-function-colorsteps_cc8910c3e57f4bd87072a751a5b8b83c'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_b(\n    guide = guide_colorsteps()\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-guide-function-colorsteps-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Styling\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-guide-function-adjust-title_a2c2cfe26af48dfacf09e86a3e740366'}\n\n```{.r .cell-code  code-line-numbers=\"9,10\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_b(\n    guide = guide_colorsteps(\n      title.position = \"top\",\n      title.hjust = .5\n    )\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-guide-function-adjust-title-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Styling\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-guide-function-customize_6bc10b503942ca66ba38fbd9f5a912fb'}\n\n```{.r .cell-code  code-line-numbers=\"11,12,13,14\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_b(\n    guide = guide_colorsteps(\n      title.position = \"top\",\n      title.hjust = .5,\n      show.limits = TRUE,\n      frame.colour = \"black\",\n      frame.linewidth = 3,\n      barwidth = unit(8, \"lines\")\n    )\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-guide-function-customize-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Styling\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-guide-function-customize-ticks_a7e86b57ca6218a48584bc4e46e5b15a'}\n\n```{.r .cell-code  code-line-numbers=\"19|7,10,16,17|8,9|13,14,15\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    breaks = 3:10*10,\n    limits = c(30, 100),\n    guide = guide_colorbar(\n      title.position = \"top\",\n      title.hjust = .5,\n      ticks.linewidth = 3,\n      barwidth = unit(20, \"lines\"),\n      barheight = unit(.6, \"lines\")\n    )\n  ) +\n  theme(\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-guide-function-customize-ticks-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Styling\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-guide-function-customize-ticks-limits_79290485dbf401b45dcaa1e7a1ef251d'}\n\n```{.r .cell-code  code-line-numbers=\"14,15\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    breaks = 3:10*10,\n    limits = c(30, 100),\n    guide = guide_colorbar(\n      title.position = \"top\",\n      title.hjust = .5,\n      ticks.linewidth = 3,\n      draw.ulim = FALSE,\n      draw.llim = FALSE,\n      barwidth = unit(20, \"lines\"),\n      barheight = unit(.6, \"lines\")\n    )\n  ) +\n  theme(\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-guide-function-customize-ticks-limits-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend Styling\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-guide-function-customize-ticks-no_27eb3453e7a62385659eb7ebb87f636f'}\n\n```{.r .cell-code  code-line-numbers=\"13\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    breaks = 3:10*10,\n    limits = c(30, 100),\n    guide = guide_colorbar(\n      title.position = \"top\",\n      title.hjust = .5,\n      ticks = FALSE,\n      barwidth = unit(20, \"lines\"),\n      barheight = unit(.6, \"lines\")\n    )\n  ) +\n  theme(\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-guide-function-customize-ticks-no-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend with Color Shading\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-shades_5b8f0331606dfc728c68af6dc9f7b4eb'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3|5,6,7,8,9,10,11,12,13,14,15,16,17|18,19,20,21,22,23,24|25,26,27,28,29|30,31,32,33,34|35|36,37,38,39\"}\nlibrary(colorspace)\nshades <- c(lighten(pal, .3),\n                  darken(pal, .3))\n\ng <-\n  bikes %>%\n  arrange(day_night, date) %>%\n  mutate(\n    season_day = paste(\n      str_to_title(season), day_night\n    ),\n    season_day = forcats::fct_inorder(season_day)\n  ) %>%\n  ggplot(\n    aes(x = season, y = count,\n        fill = season_day)\n  ) +\n  stat_summary(\n    geom = \"col\", fun = sum,\n    position = position_dodge2(\n      width = .2, padding = .1\n    )\n  ) +\n  scale_fill_manual(\n    values = shades, name = NULL\n  ) +\n  scale_x_discrete(\n    labels = str_to_title\n  ) +\n  scale_y_continuous(\n    labels = scales::comma_format(),\n    expand = c(0, 0),\n    limits = c(NA, 4500000)\n  ) +\n  labs(x = NULL, y = \"Reported bike shares\") +\n  theme(\n    panel.grid.major.x = element_blank(),\n    axis.title = element_blank()\n  )\n\ng\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-shades-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Legend on Top\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/legend-shades-legend-top_8c6b72c6561379d57dc3e56361dc740c'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng +\n  theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-shades-legend-top-1.png){fig-align='center' width=1800}\n:::\n:::\n\n\n\n\n## Resort Legend\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/legend-shades-legend-byrow_ab1c1fd1db138ad2dfe6d38500f601e4'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng +\n  guides(fill = guide_legend(byrow = TRUE)) +\n  theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-shades-legend-byrow-1.png){fig-align='center' width=1800}\n:::\n:::\n\n\n\n\n## Key Glyphs\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-glyph-prep_7157c3bbb7c6a0fca934b16a4af042fd'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6|7,8,9,10,11|12,13,14,15|16,17,18\"}\nggplot(\n    bikes,\n    aes(x = lubridate::week(date),\n        y = count,\n        color = day_night)\n  ) +\n  stat_summary(\n    geom = \"line\",\n    fun = sum,\n    size = 1\n  ) +\n  scale_color_manual(\n    values = c(\"#28A87D\", \"#663399\"),\n    name = NULL\n  ) +\n  theme(\n    legend.text = element_text(size = 16)\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-glyph-prep-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Key Glyphs\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-glyph-timeseries_bb230eebf3cff45fb4f296c35157eb5a'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes,\n    aes(x = lubridate::week(date),\n        y = count,\n        color = day_night)\n  ) +\n  stat_summary(\n    geom = \"line\",\n    fun = sum,\n    key_glyph = \"timeseries\",\n    size = 1\n  ) +\n  scale_color_manual(\n    values = c(\"#28A87D\", \"#663399\"),\n    name = NULL\n  ) +\n  theme(\n    legend.text = element_text(size = 16)\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-glyph-timeseries-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Key Glyphs\n\n\n::: {.cell output-location='column' hash='05-ggplot-layout_cache/revealjs/legend-glyph-vline_dd0b4866737fb825d3a8f94bd10e8e3a'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes,\n    aes(x = lubridate::week(date),\n        y = count,\n        color = day_night)\n  ) +\n  stat_summary(\n    geom = \"line\",\n    fun = sum,\n    key_glyph = \"vline\",\n    size = 1\n  ) +\n  scale_color_manual(\n    values = c(\"#28A87D\", \"#663399\"),\n    name = NULL\n  ) +\n  theme(\n    legend.text = element_text(size = 16)\n  )\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/legend-glyph-vline-1.png){width=1000}\n:::\n:::\n\n\n\n\n# Composing ggplot's\n\n\n\n------------------------------------------------------------------------\n\n![Illustration by [Allison Horst](https://github.com/allisonhorst/stats-illustrations)](img/layout/ah_patchwork.jpg){fig-align=\"center\" fig-alt=\"Allison Horsts monster illustration of the patchwork extension package.\"}\n\n\n\n------------------------------------------------------------------------\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/patchwork-p1_79d561c6a95316530ca0e09a3c77fdf6'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-p1-1.png){width=2000}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/patchwork-p1_bd50c522c4dceb2ddf8650770ea4d928'}\n\n```{.r .cell-code}\ntheme_set(theme_minimal(base_size = 18, base_family = \"Pally\"))\ntheme_update(\n  text = element_text(family = \"Pally\"),\n  panel.grid = element_blank(),\n  axis.text = element_text(color = \"grey50\", size = 12),\n  axis.title = element_text(color = \"grey40\", face = \"bold\"),\n  axis.title.x = element_text(margin = margin(t = 12)),\n  axis.title.y = element_text(margin = margin(r = 12)),\n  axis.line = element_line(color = \"grey80\", size = .4),\n  legend.text = element_text(color = \"grey50\", size = 12),\n  plot.tag = element_text(size = 40, margin = margin(b = 15)),\n  plot.background = element_rect(fill = \"white\", color = \"white\")\n)\n\nbikes_sorted <-\n  bikes %>%\n  filter(!is.na(weather_type)) %>%\n  group_by(weather_type) %>%\n  mutate(sum = sum(count)) %>%\n  ungroup() %>%\n  mutate(\n    weather_type = forcats::fct_reorder(\n      str_to_title(str_wrap(weather_type, 5)), sum\n    )\n  )\n\np1 <- ggplot(\n    bikes_sorted,\n    aes(x = weather_type, y = count, color = weather_type)\n  ) +\n  geom_hline(yintercept = 0, color = \"grey80\", size = .4) +\n  stat_summary(\n    geom = \"point\", fun = \"sum\", size = 12\n  ) +\n  stat_summary(\n    geom = \"linerange\", ymin = 0, fun.max = function(y) sum(y),\n    size = 2, show.legend = FALSE\n  ) +\n  coord_flip(ylim = c(0, NA), clip = \"off\") +\n  scale_y_continuous(\n    expand = c(0, 0), limits = c(0, 8500000),\n    labels = scales::comma_format(scale = .0001, suffix = \"K\")\n  ) +\n  scale_color_viridis_d(\n    option = \"magma\", direction = -1, begin = .1, end = .9, name = NULL,\n    guide = guide_legend(override.aes = list(size = 7))\n  ) +\n  labs(\n    x = NULL, y = \"Sum of reported bike shares\", tag = \"P1\",\n  ) +\n  theme(\n    axis.line.y = element_blank(),\n    axis.text.y = element_text(family = \"Pally\", color = \"grey50\", face = \"bold\",\n                               margin = margin(r = 15), lineheight = .9)\n  )\n\np1\n```\n:::\n\n:::\n\n\n\n------------------------------------------------------------------------\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/patchwork-p2_5c65c51c9eed2b2cd089318b83595354'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-p2-1.png){width=2000}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/patchwork-p2_384c5789bba90a968e583a07406023e0'}\n\n```{.r .cell-code}\np2 <- bikes_sorted %>%\n  filter(season == \"winter\", is_weekend == TRUE, day_night == \"night\") %>%\n  group_by(weather_type, .drop = FALSE) %>%\n  mutate(id = row_number()) %>%\n  ggplot(\n      aes(x = weather_type, y = id, color = weather_type)\n    ) +\n    geom_point(size = 4.5) +\n    scale_color_viridis_d(\n      option = \"magma\", direction = -1, begin = .1, end = .9, name = NULL,\n      guide = guide_legend(override.aes = list(size = 7))\n    ) +\n    labs(\n      x = NULL, y = \"Reported bike shares on\\nweekend winter nights\", tag = \"P2\",\n    ) +\n    coord_cartesian(ylim = c(.5, NA), clip = \"off\")\n\np2\n```\n:::\n\n:::\n\n\n\n------------------------------------------------------------------------\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/patchwork-p3_48624f1d80e9974c1922a3dae3dcfbe1'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-p3-1.png){width=2000}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/patchwork-p3_f2980de9bf2ac4bc661ec90b7f28414b'}\n\n```{.r .cell-code}\nmy_colors <- c(\"#cc0000\", \"#000080\")\n\np3 <- bikes %>%\n  group_by(week = lubridate::week(date), day_night, year) %>%\n  summarize(count = sum(count)) %>%\n  group_by(week, day_night) %>%\n  mutate(avg = mean(count)) %>%\n  ggplot(aes(x = week, y = count, group = interaction(day_night, year))) +\n    geom_line(color = \"grey65\", size = 1) +\n    geom_line(aes(y = avg, color = day_night), stat = \"unique\", size = 1.7) +\n    annotate(\n      geom = \"text\", label = c(\"Day\", \"Night\"), color = my_colors,\n      x = c(5, 18), y = c(125000, 29000), size = 8, fontface = \"bold\", family = \"Pally\"\n    ) +\n    scale_x_continuous(breaks = c(1, 1:10*5)) +\n    scale_y_continuous(labels = scales::comma_format()) +\n    scale_color_manual(values = my_colors, guide = \"none\") +\n    labs(\n      x = \"Week of the Year\", y = \"Reported bike shares\\n(cumulative # per week)\", tag = \"P3\",\n    )\n\np3\n```\n:::\n\n:::\n\n\n\n## {patchwork}\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/patchwork-composition_db32e01f4b87b01709f8a27f3e76cc65'}\n\n```{.r .cell-code  code-line-numbers=\"3|2,3\"}\n# install.packages(\"patchwork\")\nlibrary(patchwork)\n(p1 + p2) / p3\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-composition-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n\n\n## \"Collect Guides\"\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/patchwork-composition-guides_3e090ee329a85f66236e644633c7b8cc'}\n\n```{.r .cell-code}\n(p1 + p2) / p3 + plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-composition-guides-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n\n\n## Apply Theming\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/patchwork-composition-guides-just_7a58d60dc2bdc827b0b84e9e012dbb22'}\n\n```{.r .cell-code}\n((p1 + p2) / p3 & theme(legend.justification = \"top\")) + plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-composition-guides-just-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n\n\n## Apply Theming\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/patchwork-composition-legend-off_7df993ba2b11f34aac79ab6b48ee6c72'}\n\n```{.r .cell-code}\n(p1 + p2) / p3 & theme(legend.position = \"none\", plot.background = element_rect(color = \"black\", size = 3))\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-composition-legend-off-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n\n\n## Adjust Widths and Heights\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/patchwork-composition-heights-widths_a20e24083a734c595403394a814ca065'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\n((p1 + p2) / p3 & theme(legend.position = \"none\")) +\n  plot_layout(heights = c(.2, .1), widths = c(2, 1))\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-composition-heights-widths-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n\n\n## Use A Custom Layout\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/patchwork-composition-design_85e07ee12b46dc0e3bdf7602b2844797'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4|5\"}\npicasso <- \"\nAAAAAA#BBBB\nCCCCCCCCC##\nCCCCCCCCC##\"\n(p1 + p2 + p3 & theme(legend.position = \"none\")) + plot_layout(design = picasso)\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-composition-design-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n\n\n## Add Labels\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/patchwork-composition-labs-prep_a28ca66670837ee61573c16d2f12513d'}\n\n```{.r .cell-code}\npl1 <- p1 + labs(tag = NULL, title = \"Plot One\") + theme(legend.position = \"none\")\npl2 <- p2 + labs(tag = NULL, title = \"Plot Two\") + theme(legend.position = \"none\")\npl3 <- p3 + labs(tag = NULL, title = \"Plot Three\") + theme(legend.position = \"none\")\n```\n:::\n\n\n\n\n## Add Labels\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/patchwork-composition-labs_9bcb96f1cacdc9e35377757cfb8bfb74'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\n(pl1 + pl2) / pl3 +\n  plot_annotation(tag_levels = \"1\", tag_prefix = \"P\", title = \"An overarching title for all 3 plots, placed on the very top while all other titles are sitting below the tags.\")\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-composition-labs-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n\n\n## Add Text\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/patchwork-composition-textbox-prep_f85c0691029408b129ba21aeed9b5bf6'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-composition-textbox-prep-1.png){fig-align='center' width=1800}\n:::\n:::\n\n\n\n\n### Code\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/patchwork-composition-textbox-prep_2a542cf4954769b66192047218d40263'}\n\n```{.r .cell-code}\ntext <- tibble(\n  x = 0, y = 0, label = \"Lorem ipsum dolor sit amet, **consectetur adipiscing elit**, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation <b style='color:#000080;'>ullamco laboris nisi</b> ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat <b style='color:#cc0000;'>cupidatat non proident</b>, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n)\n\npt <- ggplot(text, aes(x = x, y = y)) +\n  ggtext::geom_textbox(\n    aes(label = label),\n    box.color = NA, width = unit(23, \"lines\"),\n    family = \"Pally\", color = \"grey40\", size = 6.5, lineheight = 1.4\n  ) +\n  coord_cartesian(expand = FALSE, clip = \"off\") +\n  theme_void()\n\npt\n```\n:::\n\n:::\n\n\n\n## Add Text\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/patchwork-composition-textbox_7037164f88acd9fc48e8d6f132937ba9'}\n\n```{.r .cell-code}\n(p1 + pt) / p3\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-composition-textbox-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n\n\n## Add Inset Plots\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/patchwork-composition-inset-1_2abc8d61e72a597fd65688e849633c60'}\n\n```{.r .cell-code}\npl1 + inset_element(pl2, l = .6, b = .1, r = 1, t = .6)\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-composition-inset-1-1.png){fig-align='center' width=2400}\n:::\n:::\n\n\n\n\n## Add Inset Plots\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/patchwork-composition-inset-2_5b6b19e44cf44b85a09b41ccf5482fcb'}\n\n```{.r .cell-code}\npl1 + inset_element(pl2, l = .6, b = 0, r = 1, t = .5, align_to = 'full')\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-composition-inset-2-1.png){fig-align='center' width=2400}\n:::\n:::\n\n\n\n\n## Add Inset Plots\n\n\n::: {.cell layout-align=\"center\" hash='05-ggplot-layout_cache/revealjs/patchwork-composition-inset-3_a3181ced727b357eacd6a6830f936f06'}\n\n```{.r .cell-code}\n(pl1 + inset_element(pl2, l = .6, b = .1, r = 1, t = .6) + pt) / pl3\n```\n\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/patchwork-composition-inset-3-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n\n\n## <b style='color:#663399;'>Recap</b>\n\n::: recap\n::: incremental\n-  **guides** are the combination of scales and legends\n-  legends can be either modified with the **`guide_*`** function in **`scale_*()`** or **`guides()`**  and with the **`theme()`** component\nqualitative\n-  ... while quantitative guides are **`colorbar`**, **`colorsteps`** or **`bins`**\n-  **`{patchwork}`** is the most modern and simplest way to compose plots\n    -  use `+`, `/` and `|` to combine plots\n    -  use `plot_layout()` to adjust the layout, widths and heights\n    -  use `plot_annotation()` to add tags and general labels\n    - use `inset_element()` to add inset graphics\n:::\n:::\n\n\n\n# Exercises\n\n\n\n## Exercise 1\n\n::: question\n-   **Create the following penguins visualization, as close as possible**.\n:::\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/exercise-1-penguins_fb480cb4790d56212a1dbccb02c3a937'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/exercise-1-penguins-1.png){fig-pos='center' width=2600}\n:::\n:::\n\n\n\n\n## Exercise 2\n\n::: question\n-   **Create the following gapminder visualization, as close as possible**.\n:::\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/exercise-2-gapminder_868033403167363b14e100285007425d'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/exercise-2-gapminder-1.png){fig-pos='center' width=2600}\n:::\n:::\n\n\n\n---\n\n![](https://s3.eu-west-1.amazonaws.com/static.gapminder.org/GapminderMedia/wp-uploads/20161215191134/countries_health_wealth_2016_v13.jpg){fig-align=\"center\" fig-width=\"35%\" fig-alt=\"An updated version of the gapminder visualization as a poster, showing the 2015 data in a new design.\"}\n\n\n\n# Solution Exercise 1 {background-color=\"#e6d9f2\"}\n\n\n\n## Exercise 1\n\n::: question\n-   **Create the following penguins visualization, as close as possible**.\n:::\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/exercise-1-penguins_fb480cb4790d56212a1dbccb02c3a937'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/exercise-1-penguins-1.png){fig-pos='center' width=2600}\n:::\n:::\n\n\n\n\n## Prepare the Data Set\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/prepare-data-exercise_eb00a4b7d16c0939b2922ccc88f09ea3'}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n\npenguin_cols <- c(\"#FF8C00\", \"#159090\", \"#A034F0\")\n\npenguins$species <- factor(penguins$species, levels = c(\"Adelie\", \"Gentoo\", \"Chinstrap\"))\n```\n:::\n\n\n\n\n## Prepare Theming\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/prepare-theme-exercise_6b8f4484e47efc4b711b2dfec7a68c74'}\n\n```{.r .cell-code}\ntheme_set(theme_minimal(\n  base_size = 16, base_family = \"Asap SemiCondensed\"\n))\n\ntheme_update(\n  plot.title = ggtext::element_textbox_simple(\n    size = 20, margin = margin(15, 0, 15, 0),\n    padding = margin(rep(12, 4)), fill = \"grey90\"\n  ),\n  plot.title.position = \"plot\",\n  plot.caption = ggtext::element_markdown(\n    size = 10, color = \"grey50\", margin = margin(12, 0, 6, 0)\n  ),\n  plot.caption.position = \"plot\",\n  plot.tag = element_text(margin = margin(b = 0, l = 15)),\n  plot.background = element_rect(color = \"#f8f8f8\", fill = \"#f8f8f8\"),\n  panel.grid.minor = element_blank(),\n  legend.position = \"none\",\n  axis.title.x = element_text(margin = margin(t = 10)),\n  axis.title.y = element_text(margin = margin(r = 10))\n)\n```\n:::\n\n\n\n\n## Create Bar Plot Species\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/layout-exercise-ex-1-1_0714fc344cd8123679f2d3176cf72f4f'}\n\n```{.r .cell-code}\np1 <- ggplot(\n    penguins,\n    aes(x = species, fill = species)\n  ) +\n  geom_bar() +\n  stat_count(\n    geom = \"text\",\n    aes(label = stat(count)),\n    vjust = 1.5, size = 5, color = \"white\", \n    family = \"Tabular\", fontface = \"bold\"\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0),\n    guide = \"none\",\n    limits = c(0, 168)\n  ) +\n  scale_fill_manual(\n    values = penguin_cols\n  ) +\n  labs(\n    x = \"Pygoscelis spec.\", y = NULL \n  ) +\n  theme(\n    panel.grid.major = element_blank(),\n    axis.title.x = element_text(face = \"italic\")\n  )\n\np1\n```\n:::\n\n\n\n\n## Create Bar Plot Species\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/layout-exercise-ex-1-1_4d1a5e9cc539e3f24f058572a461a801'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/layout-exercise-ex-1-1-1.png){fig-pos='center' width=740}\n:::\n:::\n\n\n\n\n## Create Bar Plot Islands\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/layout-exercise-ex-1-2_e924917019f2bb4971ee206b9cb36d75'}\n\n```{.r .cell-code}\np2 <- ggplot(\n    penguins,\n    aes(x = island, fill = island)\n  ) +\n  geom_bar() +\n  stat_count(\n    geom = \"text\",\n    aes(label = stat(count)),\n    vjust = 1.5, size = 5, color = \"white\", \n    family = \"Tabular\", fontface = \"bold\"\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0),\n    guide = \"none\",\n    limits = c(0, 168)\n  ) +\n  scale_fill_manual(\n    values = c(\"#9294BE\", \"#D4B7A9\", \"#CF98A3\")\n  ) +\n  labs(\n    x = \"Island\", y = NULL \n  ) +\n  theme(panel.grid.major = element_blank())\n\np2\n```\n:::\n\n\n\n\n## Create Bar Plot Islands\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/layout-exercise-ex-1-2_9b20fa7f11fd927c39f88e9db0bcae42'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/layout-exercise-ex-1-2-1.png){fig-pos='center' width=740}\n:::\n:::\n\n\n\n\n## Create Scatter Plot\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/layout-exercise-ex-1-3_39bbcb7d386adb65d37ec1e14de12062'}\n\n```{.r .cell-code}\np3 <- ggplot(\n    penguins,\n    aes(x = flipper_length_mm, y = body_mass_g, \n        color = species)\n  ) +\n  geom_point(size = 3.5, color = \"black\") + \n  geom_point(size = 3, color = \"white\") + \n  geom_point(size = 2, alpha = .3) + \n  stat_smooth(\n    method = \"lm\", se = FALSE,\n    show.legend = FALSE\n  ) +\n  coord_cartesian(\n    clip = \"off\", expand = FALSE, xlim = c(171, 232)\n  ) +\n  scale_x_continuous(\n    labels = function(x) paste(x, \"mm\")\n  ) +\n  scale_y_continuous(\n    labels = function(y) paste(y / 1000, \"kg\")\n  ) +\n  scale_color_manual(\n    values = `penguin_cols`\n  ) +\n  labs(\n    x = \"Flipper length\", y = \"Body mass\" \n  ) \n\np3\n```\n:::\n\n\n\n\n## Create Scatter Plot\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/layout-exercise-ex-1-3_7fa6532ac4b4da534e86a80ba2bc3e3a'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/layout-exercise-ex-1-3-1.png){fig-pos='center' width=1860}\n:::\n:::\n\n\n\n\n## Create Plot Composition\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/layout-exercise-ex-1-4_02a69fdc61c7eb7d4f5216fdd08ee8d0'}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\n((p1 / p2) | p3) +\n  plot_layout(widths = c(.4, 1)) + \n  plot_annotation(\n    title = \"Individual counts per species (A) and island (B) as well as the relationship of physiological metrics (C) for adult *Pygoscelis spec.* penguins, measured between 2007 and 2009 near Palmer Station, Antarctica.\", caption = \"Horst AM, Hill AP, Gorman KB (2020). <span style='font-family:tabular;'>palmerpenguins</span> R package version 0.1.0\",\n    tag_levels = \"A\", tag_suffix = \".\"\n  )\n```\n:::\n\n\n\n\n## Create Plot Composition\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/layout-exercise-ex-1-4_c8894d4596f4d0be0784e3c2556a7a59'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/layout-exercise-ex-1-4-1.png){fig-pos='center' width=1000}\n:::\n:::\n\n\n\n\n# Solution Exercise 2 {background-color=\"#e6d9f2\"}\n\n\n\n## Exercise 2\n\n::: question\n-   **Create the following gapminder visualization, as close as possible**.\n:::\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/exercise-2-gapminder_868033403167363b14e100285007425d'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/exercise-2-gapminder-1.png){fig-pos='center' width=2600}\n:::\n:::\n\n\n\n## The Data\n\n<b style='font-size:2.3rem;'>The famous [Gapminder](https://www.gapminder.org/) data set</b>\n\n-   life expectancy, GDP per capita, and population by country\n-   contains complete data covering the years 1952-2007 in 5-year steps\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/data-import-gapminder_b22b9999dcc4b713f65cd4309fc30fc1'}\n\n```{.r .cell-code}\nlibrary(gapminder)\n\ngapminder\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.hscroll}\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows\n```\n:::\n:::\n\n\n\n\n## Data Preparation\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/data-subset-1-print_e6b2c4510ec6d8405e4ea569fa1e5f03'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\n(gm2007 <- filter(gapminder, year == 2007))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 142 × 6\n   country     continent  year lifeExp       pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>     <int>     <dbl>\n 1 Afghanistan Asia       2007    43.8  31889923      975.\n 2 Albania     Europe     2007    76.4   3600523     5937.\n 3 Algeria     Africa     2007    72.3  33333216     6223.\n 4 Angola      Africa     2007    42.7  12420476     4797.\n 5 Argentina   Americas   2007    75.3  40301927    12779.\n 6 Australia   Oceania    2007    81.2  20434176    34435.\n 7 Austria     Europe     2007    79.8   8199783    36126.\n 8 Bahrain     Asia       2007    75.6    708573    29796.\n 9 Bangladesh  Asia       2007    64.1 150448339     1391.\n10 Belgium     Europe     2007    79.4  10392226    33693.\n# ℹ 132 more rows\n```\n:::\n:::\n\n\n\n\n## Basic Bubble Plot\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/basic-ggplot-gapminder_cc5bb56331756cc685b220ab284cc53e'}\n\n```{.r .cell-code  code-line-numbers=\"1|2,3|4\"}\nggplot(data = gm2007) + \n  aes(x = log10(gdpPercap), y = lifeExp, \n      color = continent, size = pop) +\n  geom_point(alpha = .5) \n```\n:::\n\n\n\n---\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/basic-ggplot-gapminder_0ae8f1b48781264bd958e267061580b6'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/basic-ggplot-gapminder-1.png){fig-pos='center' width=2800}\n:::\n:::\n\n\n\n\n## Adjust Scales\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/polished-ggplot-gapminder-scales_dce103272854d85a6d2bd34e89d8276a'}\n\n```{.r .cell-code  code-line-numbers=\"4,5|6,7|8,9\"}\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp,\n                   color = continent, size = pop)) +\n  geom_point(alpha = .5, stroke = .5) +\n  scale_x_log10(breaks = c(500, 1000, 2000, 4000, 8000, 16000, 32000),\n                labels = scales::label_dollar(accuracy = 1), name = \"GDP per capita\") +\n  scale_color_manual(values = continent_colors, name = \"Region:\",\n                     guide = guide_legend(override.aes = list(size = 5))) +\n  scale_size(range = c(3, 30), name = \"Population:\", breaks = c(10, 100, 1000)*1000000, \n             labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\"))\n```\n:::\n\n\n\n---\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/polished-ggplot-gapminder-scales_558c57d56d209f142d4346f6a71bb514'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/polished-ggplot-gapminder-scales-1.png){fig-pos='center' width=2800}\n:::\n:::\n\n\n\n\n## Turn Clipping Off\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/polished-ggplot-gapminder-coord_c1f50edf6b4913d54cd7af8acfeab4a0'}\n\n```{.r .cell-code  code-line-numbers=\"11|1\"}\ngm <-\n  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp,\n                   color = continent, size = pop)) +\n  geom_point(alpha = .5, stroke = .5) +\n  scale_x_log10(breaks = c(500, 1000, 2000, 4000, 8000, 16000, 32000),\n                labels = scales::label_dollar(accuracy = 1), name = \"GDP per capita\") +\n  scale_color_manual(values = continent_colors, name = \"Region:\",\n                     guide = guide_legend(override.aes = list(size = 5))) +\n  scale_size(range = c(3, 30), name = \"Population:\", breaks = c(10, 100, 1000)*1000000, \n             labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")) +\n  coord_cartesian(expand = FALSE, clip = \"off\")\n\ngm\n```\n:::\n\n\n\n---\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/polished-ggplot-gapminder-coord_6cdf3eb79a07c0b4e372c93b8ca9f09a'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/polished-ggplot-gapminder-coord-1.png){fig-pos='center' width=2800}\n:::\n:::\n\n\n\n\n## Polish Plot\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/polished-ggplot-gapminder-labs-theme_c4177ecb18e0704aba5d6bf877587065'}\n\n```{.r .cell-code  code-line-numbers=\"2,3|4|5,6,7,8,9,10\"}\ng +\n  labs(y = \"Life expectancy\", title = \"Health & Income of Nations in 2007\", \n       caption = \"Source: Gapminder project\") +\n  theme_minimal(base_family = \"Roboto Condensed\", base_size = 20) +\n  theme(panel.grid.minor = element_blank(),\n        plot.title = element_text(face = \"bold\", hjust = .5, size = rel(1.7), family = \"Hepta Slab\"),\n        plot.title.position = \"plot\",\n        legend.position = c(.9, .35),\n        legend.background = element_rect(color = \"grey87\"),\n        legend.box.just = \"right\",\n        plot.margin = margin(25, 40, 25, 25))\n```\n:::\n\n\n\n---\n\n\n::: {.cell hash='05-ggplot-layout_cache/revealjs/polished-ggplot-gapminder-labs-theme_4beaf782fde5b8782786dfe480d24cd3'}\n::: {.cell-output-display}\n![](05-ggplot-layout_files/figure-revealjs/polished-ggplot-gapminder-labs-theme-1.png){width=2800}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
