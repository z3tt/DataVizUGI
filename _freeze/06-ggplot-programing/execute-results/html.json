{
  "hash": "7089b4d1a388f18435b549a2c4f767f1",
  "result": {
    "markdown": "---\ntitle: \"The Art & Science of<br>Data Visualization\"\nsubtitle: \"<span style='font-size:1.5em;'>Engaging and Reproducible Graphics with ggplot2</span><br><span style='font-weight:500;font-size:1.3em;'>Efficiency with Functional Programing</span></span>\"\nauthor: \"<b style='color:#28a87d;'><a href='https://www.cedricscherer.com'>Dr. Cédric Scherer</a></b>&ensp;**//**&ensp;RTG-UGI Workshop&ensp;**//**&ensp;October 2023\"\nformat:\n  revealjs:\n    theme: slides.scss\n    logo: img/logo.png\n    footer: '**[Cédric Scherer](https://cedricscherer.com)** // Data Visualization & Information Design'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Asap SemiCondensed\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 3\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  fig-width: 5\n  fig-height: 6\n---\n\n\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Asap SemiCondensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\"\n)\n```\n:::\n\n\n\n# Programming <br>with ggplot2\n\n\n## Conditional Components\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/conditional-components_b096dfbd6fe49a3917d53b53b1facdbc'}\n\n```{.r .cell-code  code-line-numbers=\"1|3,4,5|4\"}\nsmooth <- TRUE\n\nggplot(bikes, aes(x = temp, y = humidity)) +\n  { if(smooth) geom_smooth(color = \"red\") } +\n  geom_point(alpha = .5)\n```\n:::\n\n\n\n## Conditional Components\n\n\n::: {.cell layout-align=\"center\" hash='06-ggplot-programing_cache/revealjs/conditional-components-1_c010af015d9b6e90888b37acfd5cb9b2'}\n\n```{.r .cell-code}\nsmooth <- TRUE\n\nggplot(bikes, aes(x = temp, y = humidity)) +\n  { if(smooth) geom_smooth(color = \"red\") } +\n  geom_point(alpha = .5)\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/conditional-components-1-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## Conditional Components\n\n\n::: {.cell layout-align=\"center\" hash='06-ggplot-programing_cache/revealjs/conditional-components-2_2a80c9595379ae4391a656cf95e57166'}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nsmooth <- FALSE\n\nggplot(bikes, aes(x = temp, y = humidity)) +\n  { if(smooth) geom_smooth(color = \"red\") } +\n  geom_point(alpha = .5)\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/conditional-components-2-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## Wrapper Functions for Plots\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/conditional-components-function_0c23e0f30c84521b4ea15aab86ee4b32'}\n\n```{.r .cell-code  code-line-numbers=\"1,5|2,3,4\"}\ndraw_scatter <- function(smooth = TRUE) {\n  ggplot(bikes, aes(x = temp, y = humidity)) +\n    { if(smooth) geom_smooth(color = \"red\") } +\n    geom_point(alpha = .5)\n}\n```\n:::\n\n\n\n## Wrapper Functions for Plots\n\n\n::: {.cell output-location='column' hash='06-ggplot-programing_cache/revealjs/conditional-components-function-plot-default_49e53000e8128bf8ea1d9c7ff24cf5aa'}\n\n```{.r .cell-code}\ndraw_scatter()\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/conditional-components-function-plot-default-1.png){width=1000}\n:::\n:::\n\n\n\n## Wrapper Functions for Plots\n\n\n::: {.cell output-location='column' hash='06-ggplot-programing_cache/revealjs/conditional-components-function-plot-false_5ad66314c360a7b2a677af951176ed68'}\n\n```{.r .cell-code}\ndraw_scatter(smooth = FALSE)\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/conditional-components-function-plot-false-1.png){width=1000}\n:::\n:::\n\n\n\n## Components as Functions\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,2,7|3,6|4,5\"}\ngeom_scatterfit <- function(pointsize = 1, pointalpha = 1, \n                            method = \"lm\", linecolor = \"red\", ...) {\n  list(\n    geom_point(size = pointsize, alpha = pointalpha, ...),\n    geom_smooth(method = method, color = linecolor, ...)\n  )\n}\n```\n:::\n\n\n\n## Components as Functions\n\n\n::: {.cell output-location='column' hash='06-ggplot-programing_cache/revealjs/function-components-defaults_177045f41c78de5137981d335cc39617'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(bikes,\n       aes(x = humidity, y = count)) +\n  geom_scatterfit()\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/function-components-defaults-1.png){width=1000}\n:::\n:::\n\n\n\n## Components as Functions\n\n\n::: {.cell output-location='column' hash='06-ggplot-programing_cache/revealjs/function-components-args_3c627af9cac5521d961fdb71ae07e67b'}\n\n```{.r .cell-code  code-line-numbers=\"4,5\"}\nggplot(bikes,\n       aes(x = humidity, y = count)) +\n  geom_scatterfit(\n    color = \"#28A87D\", \n    linewidth = 3\n  )\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/function-components-args-1.png){width=1000}\n:::\n:::\n\n\n\n## Components as Functions\n\n\n::: {.cell output-location='column' hash='06-ggplot-programing_cache/revealjs/function-components-custom_bafcbb18db9f798a97fb0141e255b25f'}\n\n```{.r .cell-code  code-line-numbers=\"1,2|4,5,6,7\"}\nggplot(diamonds, \n       aes(x = carat, y = price)) +\n  geom_scatterfit(\n    pointsize = .5, \n    pointalpha = .1,\n    method = \"gam\",\n    linecolor = \"#EFAC00\"\n  )\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/function-components-custom-1.png){width=1000}\n:::\n:::\n\n\n\n## Components as Functions\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,14|2,13|3,4,5,6,7|8,9,10,11,12\"}\nscales_log <- function(sides = \"xy\") {\n  list(\n    if(stringr::str_detect(sides, \"x\")) {\n      scale_x_log10(\n        breaks = c(10^(1:100)), labels = scales::label_log()\n      )\n    },\n    if(stringr::str_detect(sides, \"y\")) {\n      scale_y_log10(\n        breaks = c(10^(1:100)), labels = scales::label_log()\n      )\n    }\n  )\n}\n```\n:::\n\n\n\n## Components as Functions\n\n\n::: {.cell output-location='column' hash='06-ggplot-programing_cache/revealjs/function-components-scales-custom_1bd5c9ba4602f9e40035ede8ddfa8384'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(diamonds, \n       aes(x = carat, y = price)) +\n  geom_scatterfit(\n    pointsize = .5, \n    pointalpha = .1,\n    method = \"gam\",\n    linecolor = \"#EFAC00\"\n  ) +\n  scales_log(sides = \"y\")\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/function-components-scales-custom-1.png){width=1000}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,11|2,3,4|5,6,7,8,9|1,4,9\"}\ntrends_monthly <- function(grp = \"January\") {\n  bikes |> \n    dplyr::mutate(month = lubridate::month(date, label = TRUE, abbr = FALSE)) |> \n    dplyr::filter(month %in% grp) |> \n    ggplot(aes(x = temp, y = count, color = day_night)) +\n    geom_point(alpha = .2, show.legend = FALSE) +\n    geom_smooth(se = FALSE) +\n    scale_color_manual(values = c(\"#FFA200\", \"#757bc7\")) +\n    labs(title = grp, x = \"Temperature\", y = \"Bike shares\", color = NULL)\n}\n```\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\ntrends_monthly(\"July\")\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/function-iterate-monthly-july-1.png){width=1000}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10\"}\ntrends_monthly <- function(grp = \"January\") {\n  bikes |> \n    dplyr::mutate(month = lubridate::month(date, label = TRUE, abbr = FALSE)) |> \n    dplyr::filter(month %in% grp) |> \n    ggplot(aes(x = temp, y = count, color = day_night)) +\n    geom_point(alpha = .2, show.legend = FALSE) +\n    geom_smooth(se = FALSE) +\n    # keep axis ranges consistent\n    scale_x_continuous(limits = range(bikes$temp)) +\n    scale_y_continuous(limits = range(bikes$count)) +\n    scale_color_manual(values = c(\"#FFA200\", \"#757bc7\")) +\n    labs(title = grp, x = \"Temperature\", y = \"Bike shares\", color = NULL)\n}\n```\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\ntrends_monthly(\"July\")\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/function-iterate-monthly-ranges-july-1.png){width=1000}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplots <- purrr::map(month.name[1:12], trends_monthly) ## also: ~ trends_monthly(.x)\n```\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nplots <- purrr::map(month.name[1:12], trends_monthly) ## also: ~ trends_monthly(.x)\nplots[[9]]\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/function-iterate-monthly-ranges-purrr-single-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nplots <- purrr::map(month.name[1:12], trends_monthly) ## also: ~ trends_monthly(.x)\npatchwork::wrap_plots(plots)\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/function-iterate-monthly-ranges-wrap-1.png){fig-align='center' width=3600}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,11|2|3,4|5,6,7|8,9,10\"}\nplot_density <- function(data, var, grp = \"\") {\n  ggplot(data, aes(x = !!sym(var))) +\n    geom_density(aes(fill = !!sym(grp)), position = \"identity\",\n                 color = \"grey30\", alpha = .3) +\n    coord_cartesian(expand = FALSE, clip = \"off\") +\n    scale_y_continuous(labels = scales::label_number()) +\n    scale_fill_brewer(palette = \"Dark2\", name = NULL) +\n    theme(legend.position = \"top\")\n}\n```\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nplot_density(\n  bikes, \"count\"\n)\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/function-density-plot-1.png){width=1000}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4|2|3|5\"}\nplots <- purrr::map(\n  c(\"count\", \"temp\", \"humidity\", \"wind_speed\"), \n  ~ plot_density(data = bikes, var = .x, grp = \"day_night\")\n)\npatchwork::wrap_plots(plots, nrow = 1)\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/function-density-plot-grp-1.png){fig-align='center' width=2800}\n:::\n:::\n\n\n\n## Iterative Graphics\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2|3|5\"}\nplots <- purrr::map(\n  names(dplyr::select(midwest, where(is.numeric))),\n  ~plot_density(data = midwest, var = .x)\n)\npatchwork::wrap_plots(plots)\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/function-density-plot-midwest-1.png){fig-align='center' width=4000}\n:::\n:::\n\n\n\n\n# Exercise\n\n\n\n## Exercise\n\n::: question\n-  **Create a function that plots the famous Gapminder chart, highlighting one of the continents.**\n   -  Extend the following code in to annotate a continent your choice of with {ggforce}.\n   -  Turn the code into a function with the utility to annotate any continent.\n   -  Optional: Create a second function to highlight a country.\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/gapminder-plot-template_33c01e980db90a114cc9818260753d64'}\n\n```{.r .cell-code  code-line-numbers=\"1|3|5|6,7,8|9,10,11,12|13,14,15,16,17|18|19,20\"}\n# install.packages(\"gapminder\")\n\n(gm2007 <- filter(gapminder::gapminder, year == 2007))\n\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point( \n    aes(size = pop), alpha = .5\n  ) +\n  scale_x_log10(\n    breaks = c(500, 2000, 8000, 32000),\n    labels = scales::label_dollar(accuracy = 1)\n  ) +\n  scale_size(\n    range = c(1, 12), name = \"Population:\", \n    breaks = c(10, 100, 1000)*1000000, \n    labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n  ) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme_minimal(base_family = \"Asap SemiCondensed\") +\n  theme(panel.grid.minor = element_blank())\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/gapminder-plot-template_8b1156e72b7da2a18d3707bdec9c557d'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 142 × 6\n   country     continent  year lifeExp       pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>     <int>     <dbl>\n 1 Afghanistan Asia       2007    43.8  31889923      975.\n 2 Albania     Europe     2007    76.4   3600523     5937.\n 3 Algeria     Africa     2007    72.3  33333216     6223.\n 4 Angola      Africa     2007    42.7  12420476     4797.\n 5 Argentina   Americas   2007    75.3  40301927    12779.\n 6 Australia   Oceania    2007    81.2  20434176    34435.\n 7 Austria     Europe     2007    79.8   8199783    36126.\n 8 Bahrain     Asia       2007    75.6    708573    29796.\n 9 Bangladesh  Asia       2007    64.1 150448339     1391.\n10 Belgium     Europe     2007    79.4  10392226    33693.\n# ℹ 132 more rows\n```\n:::\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/gapminder-plot-template-1.png){width=1000}\n:::\n:::\n\n\n\n\n# Solution Exercise 1 {background-color=\"#e6d9f2\"}\n\n\n\n## Gapminder Bubble Chart\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1|3,4,5|7|9,10,11,12|13,14,15,16|17,18,19,20,21|22|23,24\"}\n# install.packages(\"gapminder\")\n\nlibrary(gapminder)\nlibrary(dplyr)\nlibrary(ggplot2)\n\ngm2007 <- filter(gapminder, year == 2007)\n\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(\n    aes(size = pop), alpha = .5\n  ) +\n  scale_x_log10(\n    breaks = c(500, 2000, 8000, 32000),\n    labels = scales::label_dollar(accuracy = 1)\n  ) +\n  scale_size(\n    range = c(1, 12), name = \"Population:\", \n    breaks = c(10, 100, 1000)*1000000, \n    labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n  ) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n  theme(panel.grid.minor = element_blank())\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/exercise-2-2-gapminder-0-template_18f6fcb33564a2b766b8f02969bbae0a'}\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/exercise-2-2-gapminder-0-template-1.png){width=1000}\n:::\n:::\n\n\n\n## Annotate Continents\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/exercise-2-2-gapminder-1-geom-hull_d558cbef39b2689c41c42f8bc4cac186'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4|5,6,7,8|6|9,10,11,12,13|10\"}\nggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(\n    aes(size = pop), alpha = .5, color = \"grey60\"\n  ) +\n  geom_point( \n    data = filter(gm2007, continent == \"Americas\"),\n    aes(size = pop), shape = 1, stroke = .7\n  ) +\n  ggforce::geom_mark_hull(\n    aes(label = continent, filter = continent == \"Americas\"),\n    expand = unit(10, \"pt\"), con.cap = unit(1, \"mm\"),\n    label.family = \"Asap SemiCondensed\", label.fontsize = 15\n  ) +\n  scale_x_log10(\n    breaks = c(500, 2000, 8000, 32000),\n    labels = scales::label_dollar(accuracy = 1)\n  ) +\n  scale_size(\n    range = c(1, 12), name = \"Population:\",\n    breaks = c(10, 100, 1000)*1000000,\n    labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n  ) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n  theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n  theme(panel.grid.minor = element_blank())\n```\n:::\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/exercise-2-2-gapminder-1-geom-hull_96bb8b33786da8f47e268eb07ebf5f41'}\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/exercise-2-2-gapminder-1-geom-hull-1.png){width=1000}\n:::\n:::\n\n\n\n## Function to Highlight a Continent\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,29|8,12\"}\ndraw_gp_continent <- function(grp) {\n  \n  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) + \n    geom_point( \n      aes(size = pop), alpha = .5, color = \"grey60\"\n    ) +\n    geom_point( \n      data = filter(gm2007, continent == grp),\n      aes(size = pop), shape = 1, stroke = .7\n    ) +\n    ggforce::geom_mark_hull(\n      aes(label = continent, filter = continent == grp),\n      expand = unit(10, \"pt\"), con.cap = unit(1, \"mm\"),\n      label.family = \"Asap SemiCondensed\", label.fontsize = 15\n    ) +\n    scale_x_log10(\n      breaks = c(500, 2000, 8000, 32000),\n      labels = scales::label_dollar(accuracy = 1)\n    ) +\n    scale_size(\n      range = c(1, 12), name = \"Population:\", \n      breaks = c(10, 100, 1000)*1000000, \n      labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n    ) +\n    labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n    theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n    theme(panel.grid.minor = element_blank())\n  \n}\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/exercise-2-2-gapminder-3-example-americas_9c709694448c1861d29eaa0dafb112fe'}\n\n```{.r .cell-code}\ndraw_gp_continent(\"Americas\")\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/exercise-2-2-gapminder-3-example-americas-1.png){width=1000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/exercise-2-2-gapminder-4-example-africa_239541da21f3a03b8a079638528349ae'}\n\n```{.r .cell-code}\ndraw_gp_continent(\"Africa\")\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/exercise-2-2-gapminder-4-example-africa-1.png){width=1000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/exercise-2-2-gapminder-5-example-europe_ef98cb39031cb5af292693b12a52cae8'}\n\n```{.r .cell-code}\ndraw_gp_continent(\"Europe\")\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/exercise-2-2-gapminder-5-example-europe-1.png){width=1000}\n:::\n:::\n\n\n\n## Function to Highlight a Country\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,30|7,8,9,10,11,12|8|9,10|13,14,15,16|14|15\"}\ndraw_gp_country <- function(grp) {\n  \n  ggplot(gm2007, aes(x = gdpPercap, y = lifeExp)) + \n    geom_point( \n      aes(size = pop), alpha = .5, color = \"grey60\"\n    ) +\n    ggforce::geom_mark_circle(\n      aes(label = country, filter = country == grp),\n      expand = unit(15, \"pt\"), con.cap = unit(0, \"mm\"),\n      # expand = unit(0, \"pt\"), con.cap = unit(0, \"mm\"),\n      label.family = \"Asap SemiCondensed\", label.fontsize = 15\n    ) +\n    geom_point( \n      data = filter(gm2007, country == grp),\n      aes(size = pop), color = \"#9C55E3\", show.legend = FALSE\n    ) +\n    scale_x_log10(\n      breaks = c(500, 2000, 8000, 32000),\n      labels = scales::label_dollar(accuracy = 1)\n    ) +\n    scale_size(\n      range = c(1, 12), name = \"Population:\", \n      breaks = c(10, 100, 1000)*1000000, \n      labels = scales::label_comma(scale = 1 / 10^6, suffix = \"M\")\n    ) +\n    labs(x = \"GDP per capita\", y = \"Life expectancy\") +\n    theme_minimal(base_family = \"Asap SemiCondensed\", base_size = 15) +\n    theme(panel.grid.minor = element_blank())\n  \n}\n```\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/exercise-2-2-gapminder-7-example-usa_1ecc0012f64e75c114b01f3239af68f0'}\n\n```{.r .cell-code}\ndraw_gp_country(\"United States\")\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/exercise-2-2-gapminder-7-example-usa-1.png){width=1000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/exercise-2-2-gapminder-8-example-germany_95bfac86cc8e27e40ac73dd0ff8533c5'}\n\n```{.r .cell-code}\ndraw_gp_country(\"Germany\")\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/exercise-2-2-gapminder-8-example-germany-1.png){width=1000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/exercise-2-2-gapminder-9-example-india_1a797cea02d07722ab39525cb0b143fd'}\n\n```{.r .cell-code}\ndraw_gp_country(\"India\")\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/exercise-2-2-gapminder-9-example-india-1.png){width=1000}\n:::\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n\n::: {.cell hash='06-ggplot-programing_cache/revealjs/exercise-2-2-gapminder-10-example-zambia_ec0c5d34ce76e4f73e347f047f29d9fd'}\n\n```{.r .cell-code}\ndraw_gp_country(\"Zambia\")\n```\n\n::: {.cell-output-display}\n![](06-ggplot-programing_files/figure-revealjs/exercise-2-2-gapminder-10-example-zambia-1.png){width=1000}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}