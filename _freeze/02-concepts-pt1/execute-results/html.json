{
  "hash": "56357d423dffd49cb0418552930c996f",
  "result": {
    "markdown": "---\ntitle: \"Engaging & Reproducible Data Visualization\"\nsubtitle: \"<span style='font-size:1.5em;'>From Theory to Implementation with ggplot2</span><br><span style='font-weight:500;font-size:1.3em;'>Concepts of the Layered Grammar of Graphics (Pt. 1)</span></span>\"\nauthor: \"<b style='color:#28a87d;'><a href='https://www.cedricscherer.com'>Dr. Cédric Scherer</a></b>&ensp;**//**&ensp;RTG-UGI Workshop&ensp;**//**&ensp;October 2023\"\nformat:\n  revealjs:\n    theme: slides.scss\n    logo: img/logo.png\n    footer: '**[Cédric Scherer](https://cedricscherer.com)** // Data Visualization & Information Design'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Asap SemiCondensed\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 3\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  fig-width: 5\n  fig-height: 6\n---\n\n\n\n# The Layered Grammar of Graphics\n\n\n\n##\n\n::: footer\n[{ggplot2} package description](https://ggplot2.tidyverse.org/)\n:::\n\n![](img/intro/ggplot2.png){fig-align=\"center\" fig-alt=\"The ggplot2 hex logo.\"}\n\n<br>\n\n<b style='font-size:30pt;'><code>{ggplot2}</code> is a system for declaratively creating graphics,<br>based on \"The Grammar of Graphics\" (Wilkinson, 2005).</b>\n\n::: fragment\n[You provide the data, tell <code>{ggplot2}</code> how to]{style=\"font-size:24pt;\"} [map variables to aesthetics,]{.circle-highlight}<br>what graphical primitives to use, and it takes care of the details.\n:::\n\n\n\n------------------------------------------------------------------------\n\n![Illustration by [Allison Horst](https://github.com/allisonhorst/stats-illustrations)](img/intro/ah_ggplot2_exploratory.png){fig-align=\"center\" fig-alt=\"Allison Horsts monster illustration of explorative plotting with ggplot2.\"}\n\n::: footer\n:::\n\n------------------------------------------------------------------------\n\n![ggplot2 Examples featured on ggplot2.tidyverse.org](img/intro/basic-ggplots.png){fig-align=\"center\" fig-alt=\"A collection of the versatility of ggplot2 to create basic graphs. All of them use the default grey ggplot2 theme.\"}\n\n::: footer\n:::\n\n------------------------------------------------------------------------\n\n![Illustration by [Allison Horst](https://github.com/allisonhorst/stats-illustrations)](img/intro/ah_ggplot2_masterpiece.png){fig-align=\"center\" fig-alt=\"Allison Horsts monster illustration of building  data masterpiece ith ggplot2 featuring a little Picasso monster :)\"}\n\n\n\n## {#cedric-ggplot-evol-gif data-menu-title=\"Cédric Blog ggplot Evolution GIF\"}\n\n![[cedricscherer.com/2019/05/17/the-evolution-of-a-ggplot](https://www.cedricscherer.com/2019/05/17/the-evolution-of-a-ggplot)](img/intro/evol-ggplot-1.gif){fig-align=\"center\" fig-alt=\"Animated evolution of a jitter-pop plot showing student-teacher ratios per continent. The animation shows iteration through different geometries, theme adjustments, combinations of layers, and additional annotations such as text labels with arrows and an inset tile grid map with colors by region mathing those of the main graphic.\"}\n\n\n\n## Advantages of {ggplot2}\n\n::: incremental\n-   consistent underlying \"grammar of graphics\" (Wilkinson 2005)\\\n-   very flexible, layered plot specification\\\n-   theme system for polishing plot appearance\\\n-   lots of additional functionality thanks to extensions\\\n-   active and helpful community\n:::\n\n\n\n# The {ggplot2} Showcase\n\n\n--------------------------------------------------------------------------------\n\n<br>\n\n![Collection of Graphics from the [BBC R Cookbook](https://bbc.github.io/rcookbook/)](img/showcase/bbc-gallery.png){fig-align=\"center\" fig-alt=\"A multi-plot panel of various data visualizations created by the BBC teams.\"}\n\n--------------------------------------------------------------------------------\n\n<br>\n\n![Collection of Graphics from the [BBC R Cookbook](https://bbc.github.io/rcookbook/)](img/showcase/bbc-gallery-quote.png){fig-align=\"center\" fig-alt=\"A multi-plot panel of various data visualizations created by the BBC teams.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Bill Dimensions of Brush-Tailed Penguins\"](https://github.com/Z3tt/TidyTuesday/tree/main/plots/2020_31)](img/showcase/palmer-penguins.png){fig-align=\"center\" fig-size=\"80%\" fig-alt=\"Distribution of coffee bean ratings by the Coffee Quality Institute for countries with 25 or more reviews (up to 2018). Distributions are shown as dot plots and multiple interval stripes.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Netflix Content Explosion\"](https://twitter.com/tanya_shapiro/status/1610419176333627393) by Tanya Shapiro](img/showcase/netflix-originals-tanya-shapiro.jpeg){fig-align=\"center\" fig-size=\"50%\" fig-alt=\"rea graph of number of Netflix original series over time, annotated with images and labels.\"}\n\n--------------------------------------------------------------------------------\n\n![My reinterpreted [The Economist graphic](https://www.economist.com/graphic-detail/2019/09/28/why-are-some-languages-spoken-faster-than-others)](img/showcase/speech-speed.png){fig-align=\"center\" fig-alt=\"The raincloud chart showing the distributions of normalized speech rates (dark pink) and information rates (dark lime green) across language families.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Not My Cup of Coffee\"](https://www.behance.net/gallery/100638417/Not-My-Cup-of-Coffee)](img/showcase/coffee-ratings.png){fig-align=\"center\" fig-alt=\"The raincloud chart showing the distributions of normalized speech rates (dark pink) and information rates (dark lime green) across language families.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Food Carbon Footprint Index 2018\"](https://github.com/Z3tt/TidyTuesday/tree/main/plots/2020_08)](img/showcase/20200307_TT_2020_08_CarbonFoodprint_alt.png){fig-align=\"center\" fig-alt=\"Two circular hierarchical bar plots showing the carbon footprint 2018 for food consumption and CO2 per continent and country.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Popular Programming Languages in CRAN Packages\"](https://twitter.com/spren9er/status/1195826547724374018) by Torsten Sprenger](img/showcase/cran-packages-torsten-sprenger.png){fig-align=\"center\" fig-alt=\"A circular tree showing the programing languages used in CRAN packages, with nodes being grouped by languages and package names, sized by number of lines.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Appearance of X-Men Characters\"](https://www.behance.net/gallery/100640345/Appearance-of-Popular-X-Men-Characters)](img/showcase/xmen-comics.png){fig-align=\"center\" fig-size=\"45%\" fig-alt=\"Streamgraphs showing the appearance of the most common X-Men characters (Wovlerine, Magneto, Nightcrawler, Storm & Gambit) during the so-called Claremont Run. Chris Claremont is a famous American comic book writer who was in charge of the Uncanny X-Men comic book series from 1975–1991. During that time he developed complex literary themes and strong female characters into superhero comics, and turning the X-Men into one of Marvel's most popular series.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"Artists in the US\"](https://twitter.com/leeolney3/status/1574656040599265280) by Lee Olney](img/showcase/artists-usa-lee-olney.png){fig-align=\"center\" fig-alt=\"A facet of barcodes showing location quotients from artists in the US by type and race.\"}\n\n--------------------------------------------------------------------------------\n\n<br>\n\n![My Contribution to the [SWDchallenge \"Small Multiples\"](https://www.storytellingwithdata.com/blog/2020/1/6/swdchallenge-small-multiples)](img/showcase/SWD_2020_01_SmallMultiples_grey.png){fig-align=\"center\" fig-alt=\"A facet of shots and goals of the Bundesliga football clubs in the season 2019/20.\"}\n\n--------------------------------------------------------------------------------\n\n![[\"European Energy Generation\"](github.com/jack-davison/tidytuesday) by Jack Davison](img/showcase/jack_davison.png){fig-align=\"center\" fig-alt=\"A gridded map of Europe showing horizontal stacked bars of energy production per country over time (each bar represents share among one year from 2016 to 2018).\"}\n\n--------------------------------------------------------------------------------\n\n![[Moon Charts as a Tile Grid Map](https://github.com/z3tt/grid-btw-wahlkreise-constituencies) showing the 2nd Vote Results from the German Election 2021](img/showcase/btw21_tile_grid_moon_second_de.png){fig-align=\"center\" fig-alt=\"A grid map using moon charts for all 297 electoral districts which show the share of the wnning party in second votesc during the German election in 2021.\"}\n\n--------------------------------------------------------------------------------\n\n![Our Winning Contribution to the [BES MoveMap Contest](https://besmovesig.wordpress.com/2021/02/25/mapping-movements-the-art-and-the-science-we-have-the-winners/)](img/showcase/20210131_BES_CheetahMap_rcarto.png){fig-align=\"center\" fig-alt=\"A spatial map of cheetah movement and their hotspot behaviour in Namibia.\"}\n\n--------------------------------------------------------------------------------\n\n![[Bivariate Choropleth x Hillshade Map](timogrossenbacher.ch/2019/04/bivariate-maps-with-ggplot2-and-sf) by Timo Gossenbacher](img/showcase/swiss_map.png){fig-align=\"center\" fig-alt=\"A spatial map of income and inequality shown with a bivariate color palette; alpine regions have a hillshading effect.\"}\n\n--------------------------------------------------------------------------------\n\n![Pixel Art by [Georgios Karamanis](https://karaman.is/)](img/showcase/bob-ross-pixel-art-georgios.png){fig-align=\"center\" fig-alt=\"A set of small multiples using pixelated encodings of certain elements in Bob Ross' paintings.\"}\n\n--------------------------------------------------------------------------------\n\n![Generative Art by [Thomas Lin Pedersen](https://www.data-imaginist.com/art)](img/showcase/genart.png){fig-align=\"center\" fig-alt=\"Two artworks by Thomas Pedersen, completely generated in R with ggplot2 (and pure magic).\"}\n\n\n\n# A Motivational Example\n\n\n\n\n\n------------------------------------------------------------------------\n\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/example-motivation-basic_59600eeb061691c0a10856d0a2ed1047'}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/example-motivation-basic-1.png){width=2800}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/example-motivation-basic-color_20fbd313bbf9bd8549f5f3284d086c91'}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/example-motivation-basic-color-1.png){width=2800}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/example-motivation-basic-smooth_97623225f6c7755135ae445bc6c7d3c8'}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/example-motivation-basic-smooth-1.png){width=2800}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/example-motivation-basic-facet_cdca599c5d9826e55e1d0e085de8360f'}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/example-motivation-basic-facet-1.png){width=2800}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/example-motivation-basic-facet-space_ea6ea554b385fefdf69bbeb87cc29c19'}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/example-motivation-basic-facet-space-1.png){width=2800}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/example-motivation-styling_029d59925fd8c7e337dccc9f0a2c63b4'}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/example-motivation-styling-1.png){width=2800}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/example-motivation-styling-2_ebc4972c560ea5758fe7da00a5d095dd'}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/example-motivation-styling-2-1.png){width=2800}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/example-motivation-advanced_adc03e99ab5c7ac1d3e3baec546465dd'}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/example-motivation-advanced-1.png){width=2800}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/example-motivation-advanced-2_57f05f7284cf244e45a0feec22402b4b'}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/example-motivation-advanced-2-1.png){width=2800}\n:::\n:::\n\n\n\n\n# Setup\n\n##  {background-image=\"img/concepts/tidyverse-packages.png\" background-position=\"center\" background-size=\"100%\"}\n\n::: footer\n:::\n\n##  {background-image=\"img/concepts/tidyverse-packages-ggplot.png\" background-position=\"center\" background-size=\"100%\"}\n\n::: footer\n:::\n\n## The ggplot2 Package\n\n<br>\n\n... is an **R package to visualize data** created by Hadley Wickham in 2005\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-package-install-2_15e77af14606c1b2ea8a8a9d3a6aea7e'}\n\n```{.r .cell-code}\n# install.packages(\"ggplot2\")\nlibrary(ggplot2)\n```\n:::\n\n\n<br>\n\n::: fragment\n... is part of the [`{tidyverse}`](https://www.tidyverse.org/)\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/tidyverse-package-install-2_9dca45151cb1edea19f47b261cbc234c'}\n\n```{.r .cell-code}\n# install.packages(\"tidyverse\")\nlibrary(tidyverse)\n```\n:::\n\n:::\n\n\n\n# The Components of {ggplot2}\n\n\n\n## The Components of a ggplot\n\n<br>\n<table style='width:100%;font-size:16pt;'>\n  <tr>\n    <th>Component</th>\n    <th>Function</th>\n    <th>Explanation</th>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Data</b></td>\n    <td><code>ggplot(data)</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    <td>*The raw data that you want to visualize (initializing a plot).*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Aesthetics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></td>\n    <td><code>aes()</code></td>\n    <td>*The mapping between variables and visual properties.*</td>\n  <tr>\n    <td><b style='color:#67676;'>Geometries</b></td>\n    <td><code>geom_*()</code></td>\n    <td>*The geometric shape of a layer representing the data.*</td>\n  </tr>\n</table>\n\n\n\n## The Components of a ggplot\n\n\n<br>\n<table style='width:100%;font-size:16pt;'>\n  <tr>\n    <th>Component</th>\n    <th>Function</th>\n    <th>Explanation</th>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Data</b></td>\n    <td><code>ggplot(data)</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    <td>*The raw data that you want to visualize (initialising a plot).*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Aesthetics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></td>\n    <td><code>aes()</code></td>\n    <td>*The mapping between variables and visual properties.*</td>\n  <tr>\n    <td><b style='color:#67676;'>Geometries</b></td>\n    <td><code>geom_*()</code></td>\n    <td>*The geometric shape of a layer representing the data.*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Statistics</b></td>\n    <td><code>stat_*()</code></td>\n    <td>*The statistical transformation of a layer applied to the data.*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Scales</b></td>\n    <td><code>scale_*()</code></td>\n    <td>*The representation of mapped aesthetic attributes.*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Coordinate System</b></td>\n    <td><code>coord_*()</code></td>\n    <td>*The transformation to map data coordinates into the plot plane.*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Facets</b></td>\n    <td><code>facet_*()</code></td>\n    <td>*The arrangement of the data into a set of small multiples.*</td>\n  </tr>\n  <tr>\n    <td><b style='color:#67676;'>Visual Themes</b></td>\n    <td><code>theme() | theme_*()</code></td>\n    <td>*The overall visual defaults of non-data elements of the graphic.*</td>\n  </tr>\n</table>\n\n\n\n# A Basic ggplot Example\n\n\n\n## The Data\n\n<b style='font-size:2.3rem;'>Bike sharing counts in London, UK, powered by [TfL Open Data](https://tfl.gov.uk/modes/cycling/santander-cycles)</b>\n\n::: incremental\n-   covers the years 2015 and 2016\n-   incl. weather data acquired from [freemeteo.com](https://freemeteo.com)\n-   prepared by Hristo Mavrodiev for [Kaggle](https://www.kaggle.com/hmavrodiev/london-bike-sharing-dataset)\n-   further modification by myself\n:::\n\n<br>\n\n::: fragment\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/data-import_d815d072f434137fd7dfc7858e4f30ab'}\n\n```{.r .cell-code}\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  ## or: \"https://raw.githubusercontent.com/z3tt/graphic-design-ggplot2/main/data/london-bikes-custom.csv\"\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n```\n:::\n\n:::\n\n------------------------------------------------------------------------\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/data-table_0f536c38d6a69b6e01cf79da604ce677'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table lightable-minimal lightable-hover\" style=\"font-size: 24px; margin-left: auto; margin-right: auto; font-family: Asap SemiCondensed; \">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Variable </th>\n   <th style=\"text-align:left;\"> Description </th>\n   <th style=\"text-align:left;\"> Class </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> date </td>\n   <td style=\"text-align:left;\"> Date encoded as `YYYY-MM-DD` </td>\n   <td style=\"text-align:left;\"> date </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> day_night </td>\n   <td style=\"text-align:left;\"> `day` (6:00am–5:59pm) or `night` (6:00pm–5:59am) </td>\n   <td style=\"text-align:left;\"> character </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> year </td>\n   <td style=\"text-align:left;\"> `2015` or `2016` </td>\n   <td style=\"text-align:left;\"> factor </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> month </td>\n   <td style=\"text-align:left;\"> `1` (January) to `12` (December) </td>\n   <td style=\"text-align:left;\"> factor </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> season </td>\n   <td style=\"text-align:left;\"> `winter`, `spring`, `summer`, or `autumn` </td>\n   <td style=\"text-align:left;\"> factor </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> count </td>\n   <td style=\"text-align:left;\"> Sum of reported bikes rented </td>\n   <td style=\"text-align:left;\"> integer </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> is_workday </td>\n   <td style=\"text-align:left;\"> `TRUE` being Monday to Friday and no bank holiday </td>\n   <td style=\"text-align:left;\"> logical </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> is_weekend </td>\n   <td style=\"text-align:left;\"> `TRUE` being Saturday or Sunday </td>\n   <td style=\"text-align:left;\"> logical </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> is_holiday </td>\n   <td style=\"text-align:left;\"> `TRUE` being a bank holiday in the UK </td>\n   <td style=\"text-align:left;\"> logical </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> temp </td>\n   <td style=\"text-align:left;\"> Average air temperature (°C) </td>\n   <td style=\"text-align:left;\"> double </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> temp_feel </td>\n   <td style=\"text-align:left;\"> Average feels like temperature (°C) </td>\n   <td style=\"text-align:left;\"> double </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> humidity </td>\n   <td style=\"text-align:left;\"> Average air humidity (%) </td>\n   <td style=\"text-align:left;\"> double </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> wind_speed </td>\n   <td style=\"text-align:left;\"> Average wind speed (km/h) </td>\n   <td style=\"text-align:left;\"> double </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> weather_type </td>\n   <td style=\"text-align:left;\"> Most common weather type </td>\n   <td style=\"text-align:left;\"> character </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n## `ggplot2::ggplot()`\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-function_163c84b2232c42c90e185ac1447f891b'}\n\n:::\n\n\n![](img/concepts/ggplot-fun-help.png){fig-alt=\"The help page of the ggplot() function.\" fig-width=\"175%\"}\n\n\n\n## Data\n\n\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-data_e47d398915bf140446c553b188a03f37'}\n\n```{.r .cell-code}\nggplot(data = bikes)\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-data-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Aesthetic Mapping\n\n<br>\n\n<b class='simple-highlight-grn' style='font-size:2.6rem;'>= link variables to graphical properties</b><br><br>\n\n::: incremental\n-   positions (`x`, `y`)\n-   colors (`color`, `fill`)\n-   shapes (`shape`, `linetype`)\n-   size (`size`)\n-   transparency (`alpha`)\n-   groupings (`group`)\n:::\n\n\n\n## Aesthetic Mapping\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-aesthetics-outside_8a2225d0aa3669cc818cbba9c377c86b'}\n\n```{.r .cell-code  code-line-numbers=\"2|1,2\"}\nggplot(data = bikes) +\n  aes(x = temp, y = count)\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-aesthetics-outside-1.png){width=1000}\n:::\n:::\n\n\n\n\n## <span style='color:#4758AB;'>aes</span>thetics\n\n`aes()` outside as component\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-aesthetics-outside-comp_3e519754632e935e018ff1ab89d1e5f3'}\n\n```{.r .cell-code}\nggplot(data = bikes) +\n  aes(x = temp, y = count)\n```\n:::\n\n\n<br>\n\n::: fragment\n`aes()` inside, explicit matching\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-aesthetics-inside_3c7a94704e95dec1809809bbd45dd527'}\n\n```{.r .cell-code}\nggplot(data = bikes, mapping = aes(x = temp, y = count))\n```\n:::\n\n\n<br>\n:::\n\n::: fragment\n`aes()` inside, implicit matching\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-aesthetics-inside-implicit_117e083534473e07587a7d45bbf76b32'}\n\n```{.r .cell-code}\nggplot(bikes, aes(temp, count))\n```\n:::\n\n\n<br>\n:::\n\n::: fragment\n`aes()` inside, mixed matching\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-aesthetics-inside-mix_ebf02ba1e28fed65f0bade7fdd031a52'}\n\n```{.r .cell-code}\nggplot(bikes, aes(x = temp, y = count))\n```\n:::\n\n:::\n\n\n\n# Geometrical Layers\n\n\n\n## Geometries\n\n<br>\n\n<b class='simple-highlight-grn' style='font-size:2.6rem;'>= interpret aesthetics as graphical representations</b><br><br>\n\n::: incremental\n-   points\n-   lines\n-   polygons\n-   text labels\n-   ...\n:::\n\n\n\n## Geometries\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-point_4c6f9bf1c55a1afe768fa611fdd6b49a'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4|5\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-point-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Visual Properties of Layers\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-point-properties_e0b407aeade094ab99af9c010aae8496'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8,9,10,11|6,7,8,9,10\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    color = \"#28a87d\",\n    alpha = .5,\n    shape = \"X\",\n    stroke = 1,\n    size = 4\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-point-properties-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Setting vs Mapping of Visual Properties\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/geom-point-properties-set_4170b10080705015eda8293362a4b63e'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    color = \"#28a87d\",\n    alpha = .5\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-point-properties-set-1.png){width=1000}\n:::\n:::\n\n\n::: fragment\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/geom-point-properties-map_a2d79785e8a3e8542bcaa9f5299a4f8f'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    aes(color = season),\n    alpha = .5\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-point-properties-map-1.png){width=1000}\n:::\n:::\n\n:::\n:::\n\n\n\n## Mapping Expressions\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-point-aes-expression_88c4395740397470cdeeaad748b915c7'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    aes(color = temp > 20),\n    alpha = .5\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-point-aes-expression-1.png){width=1000}\n:::\n:::\n\n\n\n\n# Exercise\n\n\n\n## Your Turn!\n\n:::: question\n::: incremental\n-   **Explore the `mpg` data set that is contained in `{ggplot2}`.**\n-   **Create a scatter plot of city miles per gallon vs displacement.**\n    -   Map the color of the points to the class.\n    -   Turn the points into larger, semi-transparent diamonds.\n    -   Now, use color to indicate if the model is an SUV or not.\n    -   [Bonus: How could you highlight SUVs and pick-ups together?]{style=\"color:#1D785A;\"}\n    -   [Bonus: What if we only want to show data from 2008?]{style=\"color:#1D785A;\"}\n:::\n::::\n\n\n\n# Solution Exercise {background-color=\"#e6d9f2\"}\n\n\n\n## Mapping Class to Color\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/exercise-mpg-0-scatter-plot_9bd882490ceaec5b3a86af471c834e7f'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3|4\"}\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/exercise-mpg-0-scatter-plot-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Mapping Class to Color\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/exercise-mpg-1-aes-class_0f055dc4c6ce7890f39886b5e739190b'}\n\n```{.r .cell-code  code-line-numbers=\"4,5,6|5\"}\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(color = class)\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/exercise-mpg-1-aes-class-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Setting Properties\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/exercise-mpg-2-aes-setting-properties_d94f73c5e7b235de363acc286f7e513a'}\n\n```{.r .cell-code  code-line-numbers=\"6,7,8\"}\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(color = class),\n    size = 3,\n    alpha = .3,\n    shape = \"diamond\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/exercise-mpg-2-aes-setting-properties-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Setting Properties\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/exercise-mpg-3-aes-setting-shape-number_cb49ea46085b142907bda40f9f8c8ab1'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(color = class),\n    size = 3,\n    alpha = .3,\n    shape = 18\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/exercise-mpg-3-aes-setting-shape-number-1.png){width=1000}\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n![Source: [Albert's Blog](https://blog.albertkuo.me/post/point-shape-options-in-ggplot/)](img/concepts/shapes-type.png){fig-alt=\"An overview of a set of available shapes, ordered by their type of shape (e.g. points, triangles etc).\" fig-width=\"150%\"}\n\n\n\n## Setting Properties\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/exercise-mpg-4-aes-setting-shape-23_d11bf45bb96b81b6fb70e56c1fc6b86f'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(color = class),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/exercise-mpg-4-aes-setting-shape-23-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Setting Properties\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/exercise-mpg-5-aes-setting-shape-23_b891cbe46915a50706db2daa772fd3cd'}\n\n```{.r .cell-code  code-line-numbers=\"5,8\"}\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(fill = class),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/exercise-mpg-5-aes-setting-shape-23-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Mapping Expressions\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/exercise-mpg-6-aes-expression_7ad3d399144e08f0278fc8df5d4bcdbc'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(fill = class == \"suv\"),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/exercise-mpg-6-aes-expression-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Mapping Expressions\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/exercise-mpg-7-aes-expression-multiple_44aeb04c4d2abc9fd5de439f517d1eb4'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    mpg, aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(fill = class %in% c(\"pickup\", \"suv\")),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/exercise-mpg-7-aes-expression-multiple-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Filter Data\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/exercise-mpg-8-filter-data_c676324bec163f86aa5a063cd141a8d9'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4\"}\nggplot(\n    dplyr::filter(\n      mpg, year == 2008\n    ), \n    aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(fill = class == \"suv\"),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/exercise-mpg-8-filter-data-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Filter Data\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/exercise-mpg-9-filter-data-pipe_c97252ca839320a1562fe29b4efb8412'}\n\n```{.r .cell-code  code-line-numbers=\"1|2,3,4|5,6,7\"}\nmpg %>%\n  dplyr::filter(\n    year == 2008\n  ) %>% \n  ggplot(\n    aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(fill = class == \"suv\"),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/exercise-mpg-9-filter-data-pipe-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Filter Data\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/exercise-mpg-10-filter-data-pipe-base_df89bea42305b6a30c27c0f0852eea5b'}\n\n```{.r .cell-code  code-line-numbers=\"1,4\"}\nmpg |>\n  dplyr::filter(\n    year == 2008\n  ) |> \n  ggplot(\n    aes(x = displ, y = cty)\n  ) +\n  geom_point(\n    aes(fill = class == \"suv\"),\n    size = 3,\n    alpha = .3,\n    shape = 23\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/exercise-mpg-10-filter-data-pipe-base-1.png){width=1000}\n:::\n:::\n\n\n\n\n# More geom's\n\n\n## Histogram\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-histogram_642155cdcd9308b6d6496a1ad0427b9e'}\n\n```{.r .cell-code  code-line-numbers=\"3|5\"}\nggplot(\n    bikes, \n    aes(x = count)\n  ) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-histogram-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Histogram\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-histogram-bins_9208d76bd66094aaa4a4bcfb60eec65d'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8\"}\nggplot(\n    bikes, \n    aes(x = count)\n  ) +\n  geom_histogram(\n    bins = 100 \n    # binwidth = 500\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-histogram-bins-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Histogram\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-histogram-groups_61dc8dbb63f5df7b52b4d4abc8cfb57b'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7\"}\nggplot(\n    bikes, \n    aes(x = count)\n  ) +\n  geom_histogram(\n    aes(fill = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-histogram-groups-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Density Curve\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-density_46045bb79341a97667c11c59d30fdac1'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7\"}\nggplot(\n    bikes, \n    aes(x = count)\n  ) +\n  geom_density(\n    aes(color = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-density-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Density Curve\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-density-area_987ad8fe1f4016f392edd2d5dbe1e1ca'}\n\n```{.r .cell-code  code-line-numbers=\"6,7|6,7,8\"}\nggplot(\n    bikes, \n    aes(x = count)\n  ) +\n  geom_density(\n    aes(color = day_night,\n        fill = day_night),\n    alpha = .3\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-density-area-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Density Curve\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-density-stack_08c5681db1ba13761b0568b224bc8be3'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    bikes, \n    aes(x = count)\n  ) +\n  geom_density(\n    aes(color = day_night,\n        fill = day_night),\n    alpha = .3,\n    position = \"stack\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-density-stack-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Density Curve\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-density-fill_bc6ff131cf47efcf6fa457ba15c3fb72'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    bikes, \n    aes(x = count)\n  ) +\n  geom_density(\n    aes(color = day_night,\n        fill = day_night),\n    alpha = .3,\n    position = \"fill\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-density-fill-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Scatterplot\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-point-overplotting_60dfa0fd7df69f7e1cb983bfd31fbacb'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    bikes, \n    aes(x = temp, y = count)\n  ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-point-overplotting-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Tile Bins\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-bin2d_51d2033989dd1c92302db46a06b33848'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    bikes, \n    aes(x = temp, y = count)\n  ) +\n  geom_bin2d()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-bin2d-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Hexagonal Bins\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-hex_a743071fc1502a86199be21518cc73c8'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    bikes, \n    aes(x = temp, y = count)\n  ) +\n  geom_hex()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-hex-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Density Contours\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-density-contours_8381f04c374f7ff9af4b0b752cdcfbda'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    bikes, \n    aes(x = temp, y = count)\n  ) +\n  geom_density2d()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-density-contours-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Density Contours\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-density-contours-group_63164e29649b838126aa6ece4a2eaca8'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes, \n    aes(x = temp, y = count)\n  ) +\n  geom_density2d(\n    aes(color = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-density-contours-group-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Density Contours\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-density-contours-filled_448b0f93922965cfb1dd07bde2675bb0'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_density2d_filled()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-density-contours-filled-1.png){width=1000}\n:::\n:::\n\n\n\n\n# Local vs. Global Encoding\n\n\n\n## Local vs. Global Encoding\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/geom-point-aes-geom_06e753039f180d933f935b7f1a50a525'}\n\n```{.r .cell-code  code-line-numbers=\"3,6\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    aes(color = season),\n    alpha = .5\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-point-aes-geom-1.png){width=1000}\n:::\n:::\n\n\n::: fragment\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/geom-point-aes-global_e02017e41fa6cbd6696ad95b43bf8fd1'}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .5\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-point-aes-global-1.png){width=1000}\n:::\n:::\n\n:::\n:::\n\n\n\n## Adding More Layers\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-smooth_88987a7be14ebd6f3f5c0ac758c4c4f7'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-smooth-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Global Color Encoding\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-smooth-aes-global_758ddee9f2ed13c48294071bbcdb1030'}\n\n```{.r .cell-code  code-line-numbers=\"3,4,9,10,11\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-smooth-aes-global-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Local Color Encoding\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-smooth-aes-fixed_912e7d18505b318003c0a289883753b7'}\n\n```{.r .cell-code  code-line-numbers=\"6,9,10,11\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    aes(color = season),\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-smooth-aes-fixed-1.png){width=1000}\n:::\n:::\n\n\n\n\n## The \\`group\\` Aesthetic\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-smooth-aes-grouped_7058b5ab00e281c9561cef397c91b303'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point(\n    aes(color = season),\n    alpha = .5\n  ) +\n  geom_smooth(\n    aes(group = day_night),\n    method = \"lm\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-smooth-aes-grouped-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Set Both as Global Aesthetics\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-smooth-aes-global-grouped_7356071680f4e05dc9e9aa7e07e53c26'}\n\n```{.r .cell-code  code-line-numbers=\"4,5\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season,\n        group = day_night)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-smooth-aes-global-grouped-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Overwrite Global Aesthetics\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-smooth-aes-global-grouped-overwrite_fafff6d932e76c6ca5f52e8d88218ec4'}\n\n```{.r .cell-code  code-line-numbers=\"4,12\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season,\n        group = day_night)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\",\n    color = \"black\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-smooth-aes-global-grouped-overwrite-1.png){width=1000}\n:::\n:::\n\n\n\n\n# Statistical Layers\n\n\n\n--------------------------------------------------------------------------------\n\n<br><br><br><br>\n\n<code style='font-size:1.38em;font-weight:800;'>layer(data, mapping, geom, stat, position)</code>\n\n\n\n## \\`stat_\\` and \\`geom_\\`\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/geom-stat-1_a610cca6967666f63579f3e1ff2dc96d'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(bikes, aes(x = date, y = temp)) +\n  geom_point(stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-stat-1-1.png){width=1000}\n:::\n:::\n\n\n::: fragment\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/stat-geom-1_64155158377d4128bbcd2d2523bea95e'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(bikes, aes(x = date, y = temp)) +\n  stat_identity(geom = \"point\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-geom-1-1.png){width=1000}\n:::\n:::\n\n:::\n:::\n\n\n\n## \\`stat_\\` and \\`geom_\\`\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/geom-stat-2_b9d437c1313be0c7e5bbf13e1569a3d7'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(bikes, aes(x = weather_type)) +\n  geom_bar(stat = \"count\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-stat-2-1.png){width=1000}\n:::\n:::\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/stat-geom-2_9cbec77318c6816a04c5aa8814932c1e'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(bikes, aes(x = weather_type)) +\n  geom_bar(stat = \"count\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-geom-2-1.png){width=1000}\n:::\n:::\n\n:::\n\n\n\n## \\`stat_\\` and \\`geom_\\`\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/geom-stat-3_fa6b7d54ad1652d9428584e91c39778f'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(bikes, aes(x = temp, y = count)) +\n  geom_smooth(stat = \"smooth\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-stat-3-1.png){width=1000}\n:::\n:::\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/stat-geom-3_4fcad913eb34d6acf686996d2cef4de3'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(bikes, aes(x = temp, y = count)) +\n  stat_smooth(geom = \"smooth\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-geom-3-1.png){width=1000}\n:::\n:::\n\n:::\n\n\n\n## Statistical Summaries\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/stat-summary_0bf528e8d0509de8ada3ad16cdf440a4'}\n\n```{.r .cell-code  code-line-numbers=\"5|3\"}\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary() \n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-summary-1.png){width=1000}\n:::\n:::\n\n\n\n\n\n## Statistical Summaries\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/stat-summary-defaults_818f1fd5d789e5a651e4e011a61f7ea3'}\n\n```{.r .cell-code  code-line-numbers=\"6,7\"}\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    fun.data = mean_se, ## the default\n    geom = \"pointrange\"  ## the default\n  ) \n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-summary-defaults-1.png){width=1000}\n:::\n:::\n\n\n\n\n\n## Statistical Summaries\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/stat-summary-median_8607ac41a7ad20f733710c4f23c99566'}\n\n```{.r .cell-code  code-line-numbers=\"5|5,6,11|6,7,8,9,10,11|7,8\"}\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  geom_boxplot() +\n  stat_summary(\n    fun = mean,\n    geom = \"point\",\n    color = \"#28a87d\",\n    size = 3\n  ) \n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-summary-median-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Statistical Summaries\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/stat-summary-custom_f66de357703cc346f689ec5cafa67086'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8,9|7,8\"}\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    fun = mean, \n    fun.max = function(y) mean(y) + sd(y), \n    fun.min = function(y) mean(y) - sd(y) \n  ) \n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-summary-custom-1.png){width=1000}\n:::\n:::\n\n\n\n\n\n## Statistical Summaries\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/stat-summary-custom-foo_23978b2711ba7eac82637f74139829af'}\n\n```{.r .cell-code  code-line-numbers=\"7,8\"}\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    fun = mean, \n    fun.max = function(foo) mean(foo) + sd(foo), \n    fun.min = function(foo) mean(foo) - sd(foo)\n  ) \n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-summary-custom-foo-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Statistical Summaries\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/stat-summary-custom-mean-sdl_1e7b83ac692409c3e1ca19902f371947'}\n\n```{.r .cell-code  code-line-numbers=\"7,8\"}\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    fun.data = \"mean_sdl\", \n    fun.args = list(mult = 1)\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-summary-custom-mean-sdl-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Statistical Summaries\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/stat-summary-custom-errorbars_e097e332b95e180dee6ca4d55fb385fb'}\n\n```{.r .cell-code  code-line-numbers=\"6|6,7,8|6,7,8,9|11,12,13,14,15|12,13|12,13,14\"}\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    geom = \"errorbar\", \n    fun.max = function(y) mean(y) + sd(y), \n    fun.min = function(y) mean(y) - sd(y),\n    width = .3\n  ) +\n  stat_summary(\n    geom = \"point\",\n    fun = mean,\n    size = 2\n  ) \n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-summary-custom-errorbars-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Statistical Summaries\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/stat-summary-custom-annotate_c6aae179b303d691aedfb80214db87b3'}\n\n```{.r .cell-code  code-line-numbers=\"16,17,18,19,20|17,18|17,18,19\"}\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    geom = \"errorbar\", \n    fun.max = function(y) mean(y) + sd(y), \n    fun.min = function(y) mean(y) - sd(y),\n    width = .3\n  ) +\n  stat_summary(\n    geom = \"point\",\n    fun = mean,\n    size = 2\n  ) +\n  stat_summary(\n    geom = \"text\",\n    fun = mean,\n    aes(label = after_stat(y))\n  ) \n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-summary-custom-annotate-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Statistical Summaries\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/stat-summary-custom-annotate-adjust_75a7c52c48cf0db8b13080534d92647a'}\n\n```{.r .cell-code  code-line-numbers=\"19,20,21|20|22\"}\nggplot(\n    bikes, \n    aes(x = season, y = temp)\n  ) +\n  stat_summary(\n    geom = \"errorbar\", \n    fun.max = function(y) mean(y) + sd(y), \n    fun.min = function(y) mean(y) - sd(y),\n    width = .3\n  ) +\n  stat_summary(\n    geom = \"point\",\n    fun = mean,\n    size = 2\n  ) +\n  stat_summary(\n    geom = \"text\",\n    fun = mean,\n    aes(label = after_stat(\n      sprintf(\"%2.1f\", y)\n    )),\n    hjust = -.3\n  ) \n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-summary-custom-annotate-adjust-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Statistical Summaries\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/stat-summary-2d_1e20c9494032d796eac1fb18864d2f21'}\n\n```{.r .cell-code  code-line-numbers=\"3,4|3,4,5|7\"}\nggplot(\n    bikes, \n    aes(x = season,  \n        y = weather_type, \n        z = count)\n  ) +\n  stat_summary_2d() \n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-summary-2d-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Statistical Summaries\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/stat-summary-2d-styling_bac57aab8c3a798a1eec273014103ccd'}\n\n```{.r .cell-code  code-line-numbers=\"8|9|10,11\"}\nggplot(\n    bikes, \n    aes(x = season,  \n        y = weather_type, \n        z = count)\n  ) +\n  stat_summary_2d(\n    geom = \"tile\", \n    fun = \"sum\", \n    color = \"white\", \n    linewidth = .7\n  ) \n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/stat-summary-2d-styling-1.png){width=1000}\n:::\n:::\n\n\n\n\n# Extending a ggplot\n\n\n\n## Store a ggplot as Object\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-object_7bfa73bd811a1dca49420a866fab8d75'}\n\n```{.r .cell-code  code-line-numbers=\"1,16\"}\ng <-\n  ggplot(\n    bikes,\n    aes(x = temp, y = count,\n        color = season,\n        group = day_night)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\",\n    color = \"black\"\n  )\n\nclass(g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"gg\"     \"ggplot\"\n```\n:::\n:::\n\n\n\n\n## Inspect a ggplot Object\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-object-data_2d74e134e9ae0e7a6ff78039b72105fe'}\n\n```{.r .cell-code}\ng$data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,454 × 14\n   date       day_night year  month season count is_workday is_weekend is_holiday  temp temp_feel humidity wind_speed weather_type    \n   <date>     <chr>     <fct> <fct> <fct>  <int> <lgl>      <lgl>      <lgl>      <dbl>     <dbl>    <dbl>      <dbl> <chr>           \n 1 2015-01-04 day       2015  1     winter  6830 FALSE      TRUE       FALSE       2.17     -0.75     95.2      10.4  broken clouds   \n 2 2015-01-04 night     2015  1     winter  2404 FALSE      TRUE       FALSE       2.79      2.04     93.4       4.58 clear           \n 3 2015-01-05 day       2015  1     winter 14763 TRUE       FALSE      FALSE       8.96      7.71     81.1       8.67 broken clouds   \n 4 2015-01-05 night     2015  1     winter  5609 TRUE       FALSE      FALSE       7.12      5.71     79.5       9.04 cloudy          \n 5 2015-01-06 day       2015  1     winter 14501 TRUE       FALSE      FALSE       9         6.46     80.2      19.2  broken clouds   \n 6 2015-01-06 night     2015  1     winter  6112 TRUE       FALSE      FALSE       6.71      4.21     77.6      12.8  clear           \n 7 2015-01-07 day       2015  1     winter 16358 TRUE       FALSE      FALSE       8.17      5.08     75.2      21.2  scattered clouds\n 8 2015-01-07 night     2015  1     winter  4706 TRUE       FALSE      FALSE       6.68      3.86     81.3      18.1  clear           \n 9 2015-01-08 day       2015  1     winter  9971 TRUE       FALSE      FALSE       9.46      7.12     79.4      18.8  scattered clouds\n10 2015-01-08 night     2015  1     winter  5630 TRUE       FALSE      FALSE      10.0       8.46     79.2      22.2  clear           \n# ℹ 1,444 more rows\n```\n:::\n:::\n\n\n\n\n## Inspect a ggplot Object\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-object-mapping_7db774e78e34c709fda2991db750562d'}\n\n```{.r .cell-code}\ng$mapping\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAesthetic mapping: \n* `x`      -> `temp`\n* `y`      -> `count`\n* `colour` -> `season`\n* `group`  -> `day_night`\n```\n:::\n:::\n\n\n\n\n## Extend a ggplot Object: Add Layers\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-object-extend-geom_518bca1bf52f9f67dbfa1b50222bd84d'}\n\n```{.r .cell-code}\ng +\n  geom_rug(\n    alpha = .2\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-object-extend-geom-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Remove a Layer from the Legend\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/geom-guide-none_f1f73d7348934275726d544c3a61c24c'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\ng +\n  geom_rug(\n    alpha = .2,\n    show.legend = FALSE\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/geom-guide-none-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Extend a ggplot Object: Add Labels\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-labs-individual_eff78dbb68381ddfa2927fdc3a29d56c'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4\"}\ng +\n  xlab(\"Temperature (°C)\") +\n  ylab(\"Reported bike shares\") +\n  ggtitle(\"TfL bike sharing trends\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-labs-individual-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Extend a ggplot Object: Add Labels\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-labs-bundled_5076429e482beee5a167c5bfdb1d22bb'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4,5,6\"}\ng +\n  labs(\n    x = \"Temperature (°C)\",\n    y = \"Reported bike shares\",\n    title = \"TfL bike sharing trends\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-labs-bundled-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Extend a ggplot Object: Add Labels\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-labs-bundled-color_08a05e3f3d484a6bb554fb8592547396'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\ng <- g +\n  labs(\n    x = \"Temperature (°C)\",\n    y = \"Reported bike shares\",\n    title = \"TfL bike sharing trends\",\n    color = \"Season:\"\n  )\n\ng\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-labs-bundled-color-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Extend a ggplot Object: Add Labels\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-labs-bundled-extended_88592b141cd1d0411ef60b9419a27fd3'}\n\n```{.r .cell-code  code-line-numbers=\"6,7,9\"}\ng +\n  labs(\n    x = \"Temperature (°C)\",\n    y = \"Reported bike shares\",\n    title = \"TfL bike sharing trends\",\n    subtitle = \"Reported bike rents versus temperature in London\",\n    caption = \"Data: TfL\",\n    color = \"Season:\",\n    tag = \"Fig. 1\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-labs-bundled-extended-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Extend a ggplot Object: Add Labels\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-labs-empty-vs-null-A_aa38cbaab067ad96e8012d6c4b7d00c7'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ng +\n  labs(\n    x = \"\",\n    caption = \"Data: TfL\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-labs-empty-vs-null-A-1.png){width=1000}\n:::\n:::\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-labs-empty-vs-null-B_b44483f696750ef8fdac49186a5a0358'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ng +\n  labs(\n    x = NULL,\n    caption = \"Data: TfL\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-labs-empty-vs-null-B-1.png){width=1000}\n:::\n:::\n\n:::\n\n\n\n# A Polished ggplot Example\n\n\n\n## Extend a ggplot Object: Themes\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-object-extend-theme-light_7f6a4d4150af0e3fdf410c00bf458337'}\n\n```{.r .cell-code}\ng + theme_light()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-object-extend-theme-light-1.png){width=1000}\n:::\n:::\n\n\n::: fragment\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-object-extend-theme-minimal_25bed32329149a80f4b3e4efd1a70f32'}\n\n```{.r .cell-code}\ng + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-object-extend-theme-minimal-1.png){width=1000}\n:::\n:::\n\n:::\n:::\n\n\n\n## Change the Theme Base Settings\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-theme-extend-theme-base_99032a73255a69d465507e429fcf0cdd'}\n\n```{.r .cell-code  code-line-numbers=\"2,3|1,2,3,4\"}\ng + theme_light(\n  base_size = 14,\n  base_family = \"Asap SemiCondensed\"\n)\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-theme-extend-theme-base-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Set a Theme Globally\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-theme-global_dd07df1c059688e9a6431fa9cc45ca7b'}\n\n```{.r .cell-code}\ntheme_set(theme_light())\n\ng\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-theme-global-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Change the Theme Base Settings\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"2,3|1,2,3,4\"}\ntheme_set(theme_light(\n  base_size = 14,\n  base_family = \"Asap SemiCondensed\"\n))\n\ng\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-theme-global-base-1.png){width=1000}\n:::\n:::\n\n\n\n\n## The {systemfonts} Package\n\n<span class='simple-highlight-grn' style='font-size:2.1rem;'>locates installed fonts and provides font-related utilities to graphic devices</span>\n<br>\n\n::: fragment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(systemfonts)\n```\n:::\n\n\n:::\n\n::: fragment\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/systemfonts-match-font-a_182bf91e6ac98ca242012da68cfadd02'}\n\n```{.r .cell-code}\nmatch_font(\"Asap\", bold = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$path\n[1] \"/Users/cedric/Library/Fonts/FontBase/Asap-Bold.ttf\"\n\n$index\n[1] 0\n\n$features\nNULL\n```\n:::\n:::\n\n\n:::\n\n\n\n## Use Non-Default Typefaces\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsystem_fonts()\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.hscroll}\n# A tibble: 16,691 × 9\n   path                                                                     index name                                family style weight width italic monospace\n   <chr>                                                                    <int> <chr>                               <chr>  <chr> <ord>  <ord> <lgl>  <lgl>    \n 1 /Users/cedric/Library/Fonts/FontBase/IntroHeadR-Base.otf                     0 IntroHeadR-Base                     Intro… Base  normal norm… FALSE  FALSE    \n 2 /Users/cedric/Library/Fonts/Moniqa-ThinItalicHeading.otf                     0 Moniqa-ThinItalicHeading            Moniqa Thin… ultra… norm… TRUE   FALSE    \n 3 /Users/cedric/Library/Fonts/ArimoNerdFontPropo-Italic.ttf                    0 ArimoNFP-Italic                     Arimo… Ital… normal norm… TRUE   FALSE    \n 4 /Users/cedric/Library/Fonts/iosevka-ss02.ttc                                72 Iosevka-SS02-Medium                 Iosev… Medi… medium norm… FALSE  TRUE     \n 5 /System/Library/Fonts/Supplemental/Bangla MN.ttc                             0 BanglaMN                            Bangl… Regu… normal norm… FALSE  FALSE    \n 6 /Users/cedric/Library/Fonts/iosevka-ss01-extrabold.ttc                      17 Iosevka-Fixed-SS01-Extrabold-Exten… Iosev… Extr… ultra… norm… TRUE   TRUE     \n 7 /Users/cedric/Library/Fonts/Anybody-ExtraExpandedExtraLight.otf              0 Anybody-ExtraExpandedExtraLight     Anybo… Extr… light  semi… FALSE  FALSE    \n 8 /Users/cedric/Library/Fonts/Neutraface Text Demi Alt.ttf                     0 NeutrafaceText-DemiAlt              Neutr… Regu… semib… norm… FALSE  FALSE    \n 9 /Users/cedric/Library/Fonts/PlusJakartaSans-Italic-VariableFont_wght.ttf     1 PlusJakartaSansItalic-Light         Plus … Ligh… normal norm… TRUE   FALSE    \n10 /Users/cedric/Library/Fonts/aleo-italic-webfont.ttf                          0 Aleo-Italic                         Aleo   Ital… normal norm… TRUE   FALSE    \n# ℹ 16,681 more rows\n```\n:::\n:::\n\n\n\n\n## Use Non-Default Typefaces\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/systemfonts-filter-a_8b01441a87e2a035ea63c6b738656c84'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5|2\"}\nsystem_fonts() |>\n  dplyr::filter(stringr::str_detect(family, \"Asap\")) |>\n  dplyr::select(family) |>\n  unique() |> \n  dplyr::arrange(family)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 1\n  family            \n  <chr>             \n1 Asap              \n2 Asap Condensed    \n3 Asap Expanded     \n4 Asap SemiCondensed\n5 Asap SemiExpanded \n```\n:::\n:::\n\n\n\n\n\n## Use Non-Default Typefaces\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/systemfonts-custom-font_320f055510eb198ea8810b4083ff378a'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4,5|3\"}\ng +\n  theme_minimal(\n    base_family = \"Asap SemiCondensed\",\n    base_size = 13\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/systemfonts-custom-font-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Use Font Features\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/systemfonts-filter-b_c026514cf629031375d83bb079371618'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4\"}\nsystem_fonts() |>\n  dplyr::filter(family == \"Asap SemiCondensed\") |>\n  dplyr::select(name) |>\n  dplyr::arrange(name)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.hscroll}\n# A tibble: 18 × 1\n   name                              \n   <chr>                             \n 1 AsapSemiCondensed-Black           \n 2 AsapSemiCondensed-BlackItalic     \n 3 AsapSemiCondensed-Bold            \n 4 AsapSemiCondensed-BoldItalic      \n 5 AsapSemiCondensed-ExtraBold       \n 6 AsapSemiCondensed-ExtraBoldItalic \n 7 AsapSemiCondensed-ExtraLight      \n 8 AsapSemiCondensed-ExtraLightItalic\n 9 AsapSemiCondensed-Italic          \n10 AsapSemiCondensed-Light           \n11 AsapSemiCondensed-LightItalic     \n12 AsapSemiCondensed-Medium          \n13 AsapSemiCondensed-MediumItalic    \n14 AsapSemiCondensed-Regular         \n15 AsapSemiCondensed-SemiBold        \n16 AsapSemiCondensed-SemiBoldItalic  \n17 AsapSemiCondensed-Thin            \n18 AsapSemiCondensed-ThinItalic      \n```\n:::\n:::\n\n\n\n\n## Use Font Features\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6|1,6|2,3|2,4|2,5\"}\nregister_variant(\n  name = \"Asap SemiCondensed Semibold S1\",\n  family = \"Asap SemiCondensed\",\n  weight = \"semibold\",\n  features = font_feature(letters = \"stylistic\")\n)\n```\n:::\n\n\n\n\n## Use Font Features\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/systemfonts-register-plot_b52903baf7b3dbc0fca9ab13cc120dff'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ng + \n  theme_minimal(\n    base_family = \"Asap SemiCondensed Semibold S1\",\n    base_size = 13\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/systemfonts-register-plot-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Use Font Features\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/systemfonts-font-variants-compare-1_f77fa8e73f2bba865c600c602b5c01b4'}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/systemfonts-font-variants-compare-1-1.png){width=1100}\n:::\n:::\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/systemfonts-font-variants-compare-2_6e2b7767b02ee58a5d1e6930058d1ce4'}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/systemfonts-font-variants-compare-2-1.png){width=1100}\n:::\n:::\n\n:::\n\n\n\n## Use Font Features\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6|5\"}\nregister_variant(\n  name = \"Spline Sans Tabular\",\n  family = \"Spline Sans\",\n  weight = \"normal\",\n  features = font_feature(numbers = \"tabular\")\n)\n```\n:::\n\n\n\n\n## Use Font Features\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/systemfonts-font-variants-compare-proportional-1.png){width=1100}\n:::\n:::\n\n\n::: fragment\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/systemfonts-font-variants-compare-tabular_4c96acea19983dfa27d950107af95bd2'}\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/systemfonts-font-variants-compare-tabular-1.png){width=1100}\n:::\n:::\n\n:::\n:::\n\n\n\n## Overwrite Specific Theme Settings\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-theme-settings-individual-1_5b7a61fd34e408badf3e9aa281e2fdcd'}\n\n```{.r .cell-code  code-line-numbers=\"2|3\"}\ng +\n  theme(\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-theme-settings-individual-1-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Overwrite Specific Theme Settings\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-theme-settings-individual-2_98a58f6bc83b05851d692dcbbd0fc15c'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\ng +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\")\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-theme-settings-individual-2-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Overwrite Specific Theme Settings\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-theme-settings-individual-3_6080e48964aa3aeb3ac70a9932b32b1b'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\ng +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-theme-settings-individual-3-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Overwrite Specific Theme Settings\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-theme-settings-individual-legend-none_f45fd0288b2361e70485937351fe2a22'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\ng +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-theme-settings-individual-legend-none-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Overwrite Specific Theme Settings\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-theme-settings-individual-4_a4adfd6508932ca7deb1ca3c3c535918'}\n\n```{.r .cell-code  code-line-numbers=\"6|2,3,4,6,7\"}\ng +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    legend.position = \"top\",\n    plot.title.position = \"plot\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-theme-settings-individual-4-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Overwrite Theme Settings Globally\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/ggplot-theme-settings-global_1d6fec0c49b98a1d6b410fc830c38a32'}\n\n```{.r .cell-code  code-line-numbers=\"1|2,3,4,5|1,2,3,4,5,6\"}\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  legend.position = \"top\",\n  plot.title.position = \"plot\"\n)\n\ng\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/ggplot-theme-settings-global-1.png){width=1000}\n:::\n:::\n\n\n\n# Saving Plots\n\n\n## Save the Graphic\n\n<br>\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save_d15e9a9c937823d2371d204a945d6d23'}\n\n```{.r .cell-code}\nggsave(filename = \"my_plot.png\", plot = g)\n```\n:::\n\n\n::: fragment\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-implicit_bc429ec09d16ee64f87bf65bd467d4f4'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\")\n```\n:::\n\n:::\n\n<br>\n\n::: fragment\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-aspect_8b28e5fc856a63929a18be46c8a15b1a'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", width = 6, height = 5, dpi = 600)\n```\n:::\n\n:::\n\n\n## Plot Resolution\n\n\n\n\n\n::: {layout-ncol=\"2\"}\n![](img/concepts/resolution-dpi-100.png)\n\n![](img/concepts/resolution-dpi-600.png)\n:::\n\n\n## Plot Resolution\n\n::: {layout-ncol=\"2\"}\n![](img/concepts/resolution-dpi-100-zoom.png)\n\n![](img/concepts/resolution-dpi-600-zoom.png)\n:::\n\n\n## Save the Graphic\n\n<br>\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save_f4c8175b86b849b258f5c6c982c5d172'}\n\n```{.r .cell-code}\nggsave(filename = \"my_plot.png\", plot = g)\n```\n:::\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-implicit_ee86e3c90f3594d0fd06f563b2998a40'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\")\n```\n:::\n\n\n<br>\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-aspect_a221fa347b1d401b84dd16fb3fac2822'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", width = 6, height = 5, dpi = 600)\n```\n:::\n\n\n::: fragment\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-unit_723699df803b2322111670ff47b77226'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", width = 6*2.54, height = 5*2.54, unit = \"cm\", dpi = 600)\n```\n:::\n\n:::\n\n<br>\n\n::: fragment\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-raster-agg_3a489921210ea1f620c1cf606b7369a1'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", device = agg_png)\n```\n:::\n\n:::\n\n::: fragment\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-cairo_9342c79f257260ab6d7920d895a686f2'}\n\n```{.r .cell-code}\nggsave(\"my_plot.pdf\", device = cairo_pdf)\n```\n:::\n\n:::\n\n\n--------------------------------------------------------------------------------\n\n<br>\n\n![Modified from canva.com](img/concepts/vector-raster-canva.png){fig-alt=\"A comparison of vector and raster graphics.\" fig-width=\"150%\"}\n\n\n\n## The {ragg} Package\n\n<span class='simple-highlight-grn' style='font-size:2.1rem;'>provides drop-in replacements for the default raster graphic devices</span>\n\n::: incremental\n* faster\n* direct access to all system fonts\n* advanced text rendering\n  * including support for right-to-left text, emojis, and font fallback\n* high quality anti-aliasing\n* high quality rotated text\n* supports 16-bit output\n* system independent rendering\n:::\n\n\n\n## The {ragg} Package\n\n<br>\n\n![Source: [tidyverse.org/blog/2021/02/modern-text-features](https://www.tidyverse.org/blog/2021/02/modern-text-features/)](img/concepts/ragg-left-and-right.png){fig-align=\"center\" fig-alt=\"A comparison of different graphic devices in R comparing the rendering of right-to-left text (and mixing left-to-right and right-to-left text).\"}\n\n\n\n## The {ragg} Package\n\n<br>\n\n![Source: [tidyverse.org/blog/2021/02/modern-text-features](https://www.tidyverse.org/blog/2021/02/modern-text-features/)](img/concepts/ragg-ligatures.png){fig-align=\"center\" fig-alt=\"A comparison of different graphic devices in R comparing the rendering of font ligatures.\"}\n\n\n\n## The {ragg} Package\n\n<br>\n\n![Source: [tidyverse.org/blog/2021/02/modern-text-features](https://www.tidyverse.org/blog/2021/02/modern-text-features/)](img/concepts/ragg-emojis.png){fig-align=\"center\" fig-alt=\"A comparison of different graphic devices in R comparing the rendering of emojis.\"}\n\n\n\n## The {ragg} Package\n\n<br>\n\n![Source: [tidyverse.org/blog/2021/02/modern-text-features](https://www.tidyverse.org/blog/2021/02/modern-text-features/)](img/concepts/ragg-fallback.png){fig-align=\"center\" fig-alt=\"A comparison of different graphic devices in R comparing the rendering missing glyphs, partly making use of fallback fonts.\"}\n\n\n\n## The {ragg} Package\n\n::: incremental\n* use {ragg} when saving ggplots by passing agg device function: `ggsave(device = agg_png))` ([used by default if installed](https://github.com/tidyverse/ggplot2/pull/4388))\n* use {ragg} in the *Rstudio Plots* pane be setting the backend to AGG: ![](img/concepts/ragg-rstudio.png){fig-alt=\"How to set the AGG device as the default in RStudio via Global Options > > General > Graphics > Backend.\"}\n* use {ragg} when knitting Rmarkdown files by setting `dev=\"ragg_png\"` in the code chunk options.\n\n:::\n\n\n\n## Save the Graphic\n\n<br>\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save_f4c8175b86b849b258f5c6c982c5d172'}\n\n```{.r .cell-code}\nggsave(filename = \"my_plot.png\", plot = g)\n```\n:::\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-implicit_ee86e3c90f3594d0fd06f563b2998a40'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\")\n```\n:::\n\n\n<br>\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-aspect_a221fa347b1d401b84dd16fb3fac2822'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", width = 6, height = 5, dpi = 600)\n```\n:::\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-unit_36671bcb4e36697ae9839c688b4ee249'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", width = 6*2.54, height = 5*2.54, unit = \"cm\", dpi = 600)\n```\n:::\n\n<br>\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-raster-agg_f65f49a4cf3c1593b4eaaffa85d629b6'}\n\n```{.r .cell-code}\nggsave(\"my_plot.png\", device = agg_png)\n```\n:::\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-cairo_06c45fdfd86cadaf91db9d48f0dbf669'}\n\n```{.r .cell-code}\nggsave(\"my_plot.pdf\", device = cairo_pdf)\n```\n:::\n\n\n::: fragment\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/ggplot-save-svg_b73092772049f659e6f346b4346bf993'}\n\n```{.r .cell-code}\nggsave(\"my_plot.svg\")\n```\n:::\n\n:::\n\n\n\n--------------------------------------------------------------------------------\n\n![](img/concepts/figma-svg.png){fig-align=\"center\"}\n\n\n\n## How to Work with Aspect Ratios\n\n::: incremental\n-   don't rely on the Rstudio viewer pane!\n-   once you have a *\"it's getting close\"* prototype, settle on a plot size<br><br>\n-   **Approach 1:** save the file and inspect it—go back to your IDE—repeat\n    -   tedious and time-consuming...<br><br>\n-   **Approach 2:** use a qmd or rmd with inline output and chunk settings\n    -   set `fig-width` / `fig.width` and `fig-height` / `fig.height`<br>per chunk or globally<br><br>\n:::\n\n\n\n## Setting Plot Sizes in Quarto and Rmarkdown\n\n![](img/concepts/plot-size-chunk-yaml.png){fig-alt=\"A screenshot of an exemplary Qmd file with two chunks with different settings of fig-width and fig-height as YAML-styled options using the hashpipe. Unfortunately, these are not respected when the chunk output is printed inline.\" fig-width=\"60%\"}\n\n\n\n## Setting Plot Sizes in Quarto and Rmarkdown\n\n![](img/concepts/plot-size-chunk-inline.png){fig-alt=\"A screenshot of an exemplary Qmd file with two chunks with different settings of fig.width and fig.height set as inline chunk options.\" fig-width=\"60%\"}\n\n\n\n## How to Work with Aspect Ratios\n\n-   don't rely on the Rstudio viewer pane!\n-   once you have a *\"it's getting close\"* prototype, settle on a plot size<br><br>\n-   **Approach 1:** save the file and inspect it—go back to your IDE—repeat\n    -   tedious and time-consuming...<br><br>\n-   **Approach 2:** use a qmd or rmd with inline output and chunk settings\n    -   set `fig-width` / `fig.width` and `fig-height` / `fig.height`<br>per chunk or globally<br><br>\n-   **Approach 3:** use our [{camcorder} package](https://github.com/thebioengineer/camcorder)\n    -   saves output from all `ggplot()` calls and displays it in the viewer pane\n\n\n\n## Setting Plot Sizes via {camcorder}\n\n<br>\n\n![](img/concepts/plot-size-camcorder-a.png){fig-alt=\"A screenshot of an exemplary R script with a plot automatically saved and isplayed in correct aspect ratio thanks to the camcorder package.\" fig-width=\"120%\"}\n\n\n## Setting Plot Sizes via {camcorder}\n\n<br>\n\n![](img/concepts/plot-size-camcorder-b.png){fig-alt=\"A screenshot of an exemplary R script with a plot automatically saved and isplayed in correct aspect ratio thanks to the camcorder package.\" fig-width=\"120%\"}\n\n\n## Setting Plot Sizes via {camcorder}\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/camcorder-record_74d5188e12a0d955085367e2d4058a22'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6,7|9,10,11,12,13,15\"}\ncamcorder::gg_record(\n  dir = here::here(\"temp\"),  # path for plot files\n  device = \"png\",            # device to use\n  width = 10,                # figure width\n  height = 5,                # figure height\n  dpi = 600                  # plot resolution\n)\n\ng <- ggplot(bikes, aes(x = temp, y = count, color = day_night)) +\n  geom_point(alpha = .3, size = 2) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(panel.grid.minor = element_blank())\n\ng\n```\n:::\n\n\n\n## Setting Plot Sizes via {camcorder}\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/camcorder-resize_33d43ecf474ae0012e789d1671cd57d9'}\n\n```{.r .cell-code  code-line-numbers=\"17,19\"}\ncamcorder::gg_record(\n  dir = here::here(\"temp\"),  # path for plot files\n  device = \"png\",            # device to use\n  width = 10,                # figure width\n  height = 5,                # figure height\n  dpi = 600                  # plot resolution\n)\n\ng <- ggplot(bikes, aes(x = temp, y = count, color = day_night)) +\n  geom_point(alpha = .3, size = 2) +\n  scale_color_manual(values = c(day = \"#FFA200\", night = \"#757BC7\")) +\n  theme_minimal(base_size = 14, base_family = \"Asap SemiCondensed\") +\n  theme(panel.grid.minor = element_blank())\n\ng\n\ncamcorder::gg_resize_film(width = 20) # update figure width\n\ng\n```\n:::\n\n\n\n\n## <b style='color:#663399;'>Recap</b>\n\n::: recap\n::: incremental\n-   `{ggplot2}` is a powerful library for reproducible graphic design\n-   the components follow a consistent syntax\n-   each ggplot needs at least **data**, some **aesthetics**, and a **layer**\n-   we **set** constant propeties outside `aes()`\n-   ... and **map** data-related properties inside `aes()`\n-   local settings and mappings override global properties\n-   grouping allows applying layers for subsets\n-   we can store a ggplot object and extend it afterwards\n-   we can change the appearance for all plots with `theme_set()`<br>and `theme_update()`\n:::\n:::\n\n\n\n# Exercises\n\n\n\n## Exercise 1\n\n::: question\n-   Explore the TfL bike share data visually:<br>**create a timeseries of reported bike shares on weekend days**\n    -   Highlight day and night encoded by colors and shapes.\n    -   Connect the points of each period with lines.\n        -   What is the difference between `geom_line()` and `geom_path()`?\n    -   Apply your favorite theme to the plot.\n    -   Add meaningful labels.\n-   Save the plot as a vector graphic with a decent plot size.\n:::\n\n\n\n## Exercise 2\n\n::: question\n-   Explore the TfL bike sharing data visually:<br>**create a boxplot of counts per weather type**\n    -   Turn the plot into a jitter strips plot (random noise across the x axis)\n    -   Combine both chart types (jittered points on top of the boxplots)\n    -   [Bonus: Sort the boxplot-jitter hybrid by median counts]{style=\"color:#1D785A;\"}\n    -   Apply your favorite theme to the plot.\n    -   Add meaningful labels.\n    -   [Bonus: Explore other chart types to visualize the distributions.]{style=\"color:#1D785A;\"}\n-   Save the plot as a vector graphic with a decent plot size.\n:::\n\n\n\n# Solution Exercise 1 {background-color=\"#e6d9f2\"}\n\n\n\n## Exercise 1\n\n::: question\n-   Explore the TfL bike share data visually:<br>**create a timeseries of reported bike shares on weekend days**\n    -   Highlight day and night encoded by colors and shapes.\n    -   Connect the points of each period with lines.\n        -   What is the difference between `geom_line()` and `geom_path()`?\n    -   Apply your favorite theme to the plot.\n    -   Add meaningful labels.\n    -   [Bonus: use shape to encode Saturday vs Sunday instead.]{style=\"color:#1D785A;\"}\n-   Save the plot as a vector graphic with a decent plot size.\n:::\n\n\n\n## Import the Data Set\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n```\n:::\n\n\n\n\n## Scatterplot Counts vs. Date\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-1_ae78f4b1b372737a49bd69ec766550e6'}\n\n```{.r .cell-code}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-1-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Encode Day Period by Colors and Shapes\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-2_216a8f4651592e9ac1f583e1b1255dbb'}\n\n```{.r .cell-code  code-line-numbers=\"6,7\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-2-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add Line\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-3_f66f950fffb062dc94b75ddf317a4bb1'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  ) +\n  geom_line(\n    color = \"grey\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-3-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Group Lines by Day Period\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-4_e1050e9fb327bdf9225554dff64ee3d8'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-4-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Order Layers\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-5_2663648549e5dedace715214d4f55b32'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-5-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Use \\`geom_path()\\` instead\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-6_a86dc5218b84926eaad00d87e6d21b50'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_path(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-6-1.png){width=1000}\n:::\n:::\n\n\n\n\n## \\`geom_line()\\` vs. \\`geom_path()\\`\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-comp-path_a618b7d54fe9715aafad589f8bb0b5a5'}\n\n```{.r .cell-code  code-line-numbers=\"3|5,6,7\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_path(\n    aes(color = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-comp-path-1.png){width=1000}\n:::\n:::\n\n\n::: fragment\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-comp-line_f500dceeacab2ba17c4d899524194554'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_line(\n    aes(color = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-comp-line-1.png){width=1000}\n:::\n:::\n\n:::\n:::\n\n\n\n## Apply a Theme\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-8_b0d63013d9fbf467fa5e81cce10fc51f'}\n\n```{.r .cell-code  code-line-numbers=\"1|1,14|14,15,16,17,18,19,20,21|15,16,17,18|19,20,21\"}\ng <- ggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )\n\ng +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-8-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add Meaningful Labels\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-9_f3db107ef9e19e3fcd1fa130a1cda4d2'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4,5,6,7\"}\ng +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = \"Part of the Day:\"\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-9-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add Meaningful Labels\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-10_5b2f6b6375f5a6fc4ea7f5e87338a9ef'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\ng +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = \"Part of the Day:\",\n    shape = \"Part of the Day:\"\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-10-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add Meaningful Labels\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-11_cf3250e71f017d3f6ab9fb10e3b32b11'}\n\n```{.r .cell-code  code-line-numbers=\"5,6\"}\ng +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-11-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Save the Plot\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-12_b494e392bfb87427a6bf7e42d87a6201'}\n\n```{.r .cell-code  code-line-numbers=\"1,2|1|2\"}\nggsave(here::here(\"exercises\", \"plots\", \"02_concepts_pt1_ex1.pdf\"),\n       width = 9, height = 5, device = cairo_pdf)\n```\n:::\n\n\n\n\n![](plots/02_concepts_pt1_ex1.png){fig-align=\"center\" fig-alt=\"The final plot with an aspect ratio of 9 x 5 inches while using a base_size of 15.\"}\n\n::: footer\n:::\n\n\n\n## Bonus: Use Shape to Encode Sat vs Sun\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-bonus_5bd2ddd11f4d8f607c5234801985d7e1'}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = lubridate::day(date) == 6)\n  ) +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-bonus-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Bonus: Use Shape to Encode Sat vs Sun\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-bonus-1_9cb671eb9d9e0d4b962c405eaa54adf1'}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = lubridate::wday(date, label = TRUE))\n  ) +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-bonus-1-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Bonus: Use Shape to Encode Sat vs Sun\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-bonus-2_01fb4c79b4f7f47caca4c3dcf30ed8ef'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ninvisible(\n  Sys.setlocale(\"LC_TIME\", \"C\")\n)\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = lubridate::wday(date, label = TRUE))\n  ) +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-1-bonus-2-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Save the Plot\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-1-bonus-save_2ba282fca35a5a04883fe9a40991c1f0'}\n\n```{.r .cell-code  code-line-numbers=\"1,2|1|2\"}\nggsave(here::here(\"exercises\", \"plots\", \"02_concepts_pt1_ex1_bonus.pdf\"),\n       width = 9, height = 5, device = cairo_pdf)\n```\n:::\n\n\n\n\n![](plots/02_concepts_pt1_ex1_bonus.png){fig-align=\"center\" fig-alt=\"The final plot with the bonus encoding saved with an aspect ratio of 9 x 5 inches.\"}\n\n::: footer\n:::\n\n\n\n# Solution Exercise 2 {background-color=\"#e6d9f2\"}\n\n\n\n## Exercise 2\n\n::: question\n* Explore the TfL bike sharing data visually:<br>**create a boxplot of counts per weather type**\n    - Turn the plot into a jitter strips plot (random noise across the x axis)\n    - Combine both chart types (jittered points on top of the boxplots)\n    - <span style='color:#5DB699;'>Bonus: Sort the boxplot-jitter hybrid by median counts</span>\n    - Apply your favorite theme to the plot.\n    - Add meaningful labels.\n    - <span style='color:#5DB699;'>Bonus: Explore other chart types to visualize the distributions.</span>\n* Save the plot as a vector graphic with a decent plot size.\n:::\n\n\n\n## Import Data (if not yet)\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/import-data-exercise-2_c0d86b53522d67404f9cab8a80acf0ba'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n```\n:::\n\n\n\n\n## Boxplot of Counts vs. Weather Type\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-1_c76fe67f235adbbd92cd41dd554b7d01'}\n\n```{.r .cell-code}\nggplot(\n    bikes,\n    aes(x = weather_type, y = count)\n  ) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-1-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Avoid Overlapping Axis Labels\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-2_66f7e0b35161131759bb73aed15e7c1a'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(\n    bikes,\n    aes(x = count, y = weather_type)\n  ) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-2-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Avoid Overlapping Axis Labels\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-3_ab0ac112470c4db78a89e37879c8c209'}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-3-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Apply a Theme\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-4_f5292e3e276a5b1c4e13778b5c541a38'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4\"}\ntheme_set(theme_minimal(\n  base_size = 14,\n  base_family = \"Asap SemiCondensed\"\n))\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-4-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Customize the Theme\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-5_cd587726533ae89de99a32d62b572a33'}\n\n```{.r .cell-code  code-line-numbers=\"6,7,8,9\"}\ntheme_set(theme_minimal(\n  base_size = 14,\n  base_family = \"Asap SemiCondensed\"\n))\n\ntheme_update(\n  panel.grid.major.x = element_blank(),\n  panel.grid.minor = element_blank()\n)\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-5-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add Meaningful Labels\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-6_f9252949f31db1fddae7c55bc3569a3e'}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  labs(x = NULL, y = \"Reported bike shares\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-6-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add Meaningful Labels\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-7_7398e28170368a7c1d2ac8760db92bfe'}\n\n```{.r .cell-code  code-line-numbers=\"8,9\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  labs(\n    x = NULL, y = NULL,\n    title = \"Reported bike shares by weather type\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-7-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add Meaningful Labels\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-8_fd911bd78c25cbdb104f734d700ffbcb'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4|2|3|12\"}\ntheme_update(\n  plot.title.position = \"plot\",\n  axis.title = element_blank()\n)\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  ggtitle(\"Reported bike shares by weather type\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-8-1.png){width=1000}\n:::\n:::\n\n\n\n## Jitter Strips of Counts per Weather Type\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-9_fea825fab501bb3ac37ff20e00c0af8e'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_jitter(\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-9-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Jitter Strips of Counts per Weather Type\n\n::: {layout-ncol=2}\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-10_6fff2d092656a25127e5d8981085b298'}\n\n```{.r .cell-code  code-line-numbers=\"6,7,9\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_point(\n    position = \"jitter\",\n    alpha = .2\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-10-1.png){width=1000}\n:::\n:::\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-11_e62647b0d16f8fc583eaa20e1bd5bd8e'}\n\n```{.r .cell-code  code-line-numbers=\"6,7,9\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_point(\n    position = position_jitter(),\n    alpha = .2\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-11-1.png){width=1000}\n:::\n:::\n\n:::\n\n\n\n## Jitter Strips of Counts vs. Weather Type\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-12_16167e7c619d519fad294013882de1c0'}\n\n```{.r .cell-code  code-line-numbers=\"7,8,9,10,11\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-12-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Boxplot + Jitter Strip Hybrid\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-13_510dcb2a5722afe7181b88086fb9f89a'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-13-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Boxplot + Jitter Strip Hybrid\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-14_6eaa3a7b970158951f886fa23c0e2f7d'}\n\n```{.r .cell-code  code-line-numbers=\"7,8,9\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot(\n     outlier.shape = NA\n     # outlier.color = \"transparent\"\n     # outlier.alpha = 0\n  ) +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-14-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Bonus: Sort Weather Types\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-15_dcc6484886aa92d482a9d255f427f158'}\n\n```{.r .cell-code  code-line-numbers=\"4,5,6\"}\nggplot(\n    bikes,\n    aes(\n      x = forcats::fct_reorder(\n        stringr::str_wrap(weather_type, 6), -count\n      ),\n      y = count)\n  ) +\n  geom_boxplot(\n     outlier.shape = NA\n     # outlier.color = \"transparent\"\n     # outlier.alpha = 0\n  ) +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/concepts-pt1-exercise-2-15-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Save the Plot\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/concepts-pt1-exercise-2-16_35ceda0e9f9d963b7a09feb0c50740e5'}\n\n```{.r .cell-code}\nggsave(here::here(\"plots\", \"02_concepts_pt1_ex2.pdf\"),\n       width = 5, height = 6.5, device = cairo_pdf)\n```\n:::\n\n\n\n\n![](plots/02_concepts_pt1_ex2.png){fig-align=\"center\" fig-alt=\"The final plot with an aspect ratio of 5 x 7 inches.\"}\n\n:::footer\n:::\n\n\n\n# Alternative Chart Types<br>to Visualize Distributions\n\n\n\n## Let's Update our Data Set\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/sort-weather-type_4cd73a411685c361ca42440cda6cea75'}\n\n```{.r .cell-code}\nbikes <-\n  bikes %>%\n  mutate(\n    weather_type_fct = stringr::str_wrap(\n      weather_type, 6\n    ),\n    weather_type_fct = forcats::fct_reorder(\n      weather_type_fct, -count\n    )\n  )\n\nlevels(bikes$weather_type_fct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"scattered\\nclouds\" \"broken\\nclouds\"    \"clear\"             \"cloudy\"            \"rain\"              \"snowfall\"         \n```\n:::\n:::\n\n\n\n\n## Let's Store Our ggplot Setup\n\n\n::: {.cell hash='02-concepts-pt1_cache/revealjs/store-basic-setup_383c651fec5d6b65fb76d5411b990322'}\n\n```{.r .cell-code}\ng <-\n  ggplot(\n    bikes,\n    aes(x = weather_type_fct,\n        y = count)\n  ) +\n  ggtitle(\n    \"Reported bike shares by weather type\"\n  )\n```\n:::\n\n\n\n\n## Beeswarm Plots with {ggbeeswarm}\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/boxplot-beeswarm-hybrid_087899b82451862822d2e7c968d432e9'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8,9|5|6,7,8\"}\ng +\n  geom_boxplot(\n     outlier.shape = NA\n  ) +\n  ggbeeswarm::geom_beeswarm(\n    size = .3,\n    alpha = .2,\n    cex = .6\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/boxplot-beeswarm-hybrid-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Beeswarm Plots with {ggbeeswarm}\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/boxplot-beeswarm-hybrid-quasirandom_0c319818c1ab6e93ff7315e34fcc1cb8'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8,9\"}\ng +\n  geom_boxplot(\n     outlier.shape = NA\n  ) +\n  ggbeeswarm::geom_quasirandom(\n    size = .3,\n    alpha = .2,\n    width = .3,\n    varwidth = TRUE\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/boxplot-beeswarm-hybrid-quasirandom-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Sina Plots with {ggforce}\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/boxplot-sina-hybrid_7dbbe02a100c4825aa2a652b849a7e30'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8,9\"}\ng +\n  geom_boxplot(\n     outlier.shape = NA\n  ) +\n  ggforce::geom_sina(\n    size = .5,\n    alpha = .2,\n    maxwidth = 1.2\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/boxplot-sina-hybrid-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Barcode Strips\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/boxplot-barcode-hybrid_ffe11a1b0ed81c8075422e6be3caed05'}\n\n```{.r .cell-code  code-line-numbers=\"6,7|6,7,8|6,7,8,9|6,7,8,9,10|3,|10\"}\ng +\n  geom_boxplot(\n     position = position_nudge(x = .15),\n     width = .35\n  ) +\n  geom_point(\n    shape = \"-\",\n    size = 8,\n    alpha = .1,\n    position = position_nudge(x = -.15)\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/boxplot-barcode-hybrid-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/violin-ggplot_f8fa66a94d3056dd7f06bb9813439ec9'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng +\n  geom_violin()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/violin-ggplot-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/violin-ggplot-custom_fef8844e1c84ea3cbec93cc192ab25ea'}\n\n```{.r .cell-code  code-line-numbers=\"3,4,5\"}\ng +\n  geom_violin(\n    scale = \"count\",\n    draw_quantiles = c(.5),\n    fill = \"grey80\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/violin-ggplot-custom-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/violin-ggplot-custom-2_a5cd8f7f8522e2547127f8a7689ed299'}\n\n```{.r .cell-code  code-line-numbers=\"3,4,5,6,7\"}\ng +\n  geom_violin(\n    scale = \"width\",\n    draw_quantiles = c(.5),\n    trim = FALSE,\n    bw = 250,\n    fill = \"grey80\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/violin-ggplot-custom-2-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots with {ggdist}\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/violin-ggdist_38b6286dc0f3efbf1a38fe51060339f2'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng +\n  ggdist::stat_eye()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/violin-ggdist-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots with {ggdist}\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/violin-ggdist-custom-1_0c81eb92bb51204c51985a728e24557a'}\n\n```{.r .cell-code  code-line-numbers=\"3,4,5\"}\ng +\n  ggdist::stat_eye(\n    .width = c(0.5, 0.95),\n    width = 1.5,\n    adjust = .33\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/violin-ggdist-custom-1-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots with {ggdist}\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/violin-ggdist-custom-2_e581d3bf7b9ce24575c99991d8325f0a'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ng +\n  ggdist::stat_eye(\n    aes(thickness = stat(f*n)),\n    .width = c(0.5, 0.95),\n    adjust = .33\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/violin-ggdist-custom-2-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots with {ggdist}\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/violin-ggdist-custom-3_072488579df7a1d3b0ee73c85bfbdd67'}\n\n```{.r .cell-code  code-line-numbers=\"6,7,8\"}\ng +\n  ggdist::stat_eye(\n    aes(thickness = stat(f*n)),\n    .width = c(0.5, 0.95),\n    adjust = .5,\n    interval_size_range = c(.4, 2.5),\n    point_size = 1.2,\n    point_color = \"white\"\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/violin-ggdist-custom-3-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Raincloud Plots with {ggdist}\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/raincloud-ggdist-rain_429c8eda86f424c86cbdc682d7318bd7'}\n\n```{.r .cell-code  code-line-numbers=\"2,6,7,8,9,10\"}\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    .width = 0,\n    width = .5,\n    position = position_nudge(x = .2)\n  ) +\n  geom_jitter(\n    width = .1,\n    size = .5,\n    alpha = .1\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/raincloud-ggdist-rain-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Raincloud Plots with {ggdist}\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/raincloud-ggdist-boxplot_2d5e7fd4573ba4185e0c4b5811a4b407'}\n\n```{.r .cell-code  code-line-numbers=\"7,8,9,10\"}\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    color = NA,\n    width = .5,\n    position = position_nudge(x = .2)\n  ) +\n  geom_boxplot(\n    width = .3,\n    outlier.color = NA\n  ) +\n  geom_jitter(\n    width = .1,\n    size = .5,\n    alpha = .1\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/raincloud-ggdist-boxplot-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Raincloud Plots with {gghalves}\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/raincloud-ggdist-rain-gghalves_a4300e72dad4adabb1d71a6e70d65f1a'}\n\n```{.r .cell-code  code-line-numbers=\"12,13,14,15,16,17\"}\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    color = NA,\n    width = .5,\n    position = position_nudge(x = .1)\n  ) +\n  geom_boxplot(\n    width = .1,\n    outlier.size = .2\n  ) +\n  gghalves::geom_half_point(\n    side = \"l\",\n    range_scale = .4,\n    size = .3,\n    alpha = .1\n  )\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/raincloud-ggdist-rain-gghalves-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Raincloud Plots with {gghalves}\n\n\n::: {.cell output-location='column' hash='02-concepts-pt1_cache/revealjs/raincloud-ggdist-rain-gghalves-flipped_c0593f2d39118b084c6ef72f2834d1a3'}\n\n```{.r .cell-code  code-line-numbers=\"18\"}\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    color = NA,\n    width = .5,\n    position = position_nudge(x = .1)\n  ) +\n  geom_boxplot(\n    width = .1,\n    outlier.size = .2\n  ) +\n  gghalves::geom_half_point(\n    side = \"l\",\n    range_scale = .4,\n    size = .3,\n    alpha = .1\n  ) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](02-concepts-pt1_files/figure-revealjs/raincloud-ggdist-rain-gghalves-flipped-1.png){width=1000}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}